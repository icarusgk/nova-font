$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"

glyph-module

glyph-block Symbol-Pictograph-Faces : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives

	for-width-kinds WideWidth1
		define faceTop : mix SymbolMid PictTop 0.75
		define faceBot : mix SymbolMid PictBot 0.75
		define faceWidth : Math.min (MosaicWidth - SB * 2) (faceTop - faceBot)
		define faceMiddle : MosaicWidth / 2
		define faceLeft : faceMiddle - faceWidth / 2
		define faceRight : faceMiddle + faceWidth / 2
		define faceSma : ArchDepthAOf (SmallArchDepth * MosaicWidthScalar) MosaicWidth
		define faceSmb : ArchDepthBOf (SmallArchDepth * MosaicWidthScalar) MosaicWidth

		define faceStroke : AdviceStroke 5 ((faceWidth + SB * 2) / Width)
		define faceInnerStroke : AdviceStroke (6 * [Math.sqrt MosaicWidthScalar]) ((faceWidth + SB * 2) / Width)
		define eyeRadius : DotRadius / Stroke * faceInnerStroke
		define eyeHeight    0.625
		define mouthDepth : 0.025 * [Math.sqrt MosaicWidthScalar]

		define [FaceRing F] : F faceTop faceBot faceLeft faceRight faceStroke faceSma faceSmb

		define [FaceEyes width] : union
			DotAt (faceMiddle - width / 2 + eyeRadius / 2) [mix faceBot faceTop eyeHeight] eyeRadius
			DotAt (faceMiddle + width / 2 - eyeRadius / 2) [mix faceBot faceTop eyeHeight] eyeRadius

		define [SmileFace k width] : union
			FaceEyes width
			dispiro
				widths.center faceInnerStroke
				g4 (faceMiddle - width / 2) [mix faceBot faceTop (1 - eyeHeight + k * mouthDepth)]
				g4 (faceMiddle)             [mix faceBot faceTop (1 - eyeHeight - k * mouthDepth)]
				g4 (faceMiddle + width / 2) [mix faceBot faceTop (1 - eyeHeight + k * mouthDepth)]

		create-glyph [MangleName 'whiteSadFace'] [MangleUnicode 0x2639] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace (-1) : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'whiteSmileFace'] [MangleUnicode 0x263A] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace 1 : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'blackSmileFace'] [MangleUnicode 0x263B] : glyph-proc
			set-width MosaicWidth
			include : difference
				FaceRing OShapeOutline
				SmileFace 1 : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'neutralFace'] [MangleUnicode 0x1F610] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace 0 : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'mouthlessFace'] [MangleUnicode 0x1F636] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				FaceEyes : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'slightFrownFace'] [MangleUnicode 0x1F641] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace (-0.5) : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'slightSmileFace'] [MangleUnicode 0x1F642] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace 0.5 : 0.6 * (faceWidth - faceStroke * 2)

		create-glyph [MangleName 'upsideDownFace'] [MangleUnicode 0x1F643] : glyph-proc
			set-width MosaicWidth
			include : union
				FaceRing OShape
				SmileFace 1 : 0.6 * (faceWidth - faceStroke * 2)
			include : FlipAround (MosaicWidth / 2) [mix faceTop faceBot 0.5]
