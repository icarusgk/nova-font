$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"

glyph-module

glyph-block Letter-Cyrillic-Sha : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Shared-Shapes : RightwardTailedBar CyrDescender SerifFrame

	define [CyrShaShape top df fInv] : glyph-proc
		include : union
			[if fInv HBar.t HBar.b] df.leftSB df.rightSB [if fInv top 0]
			VBar.l df.leftSB 0 top df.mvs
			VBar.r df.rightSB 0 top df.mvs
			VBar.m df.middle 0 top df.mvs

		if SLAB : begin
			local sf : SerifFrame.fromDf df top 0 (swSerif -- df.mvs)

			if fInv : then : begin
				include : composite-proc sf.lt.outer sf.rt.outer
				if sf.enoughSpaceForFullSerifs
					include : composite-proc sf.lb.full sf.mb.full sf.rb.full
					include : composite-proc sf.lb.outer sf.rb.outer
			: else : begin
				include : composite-proc sf.lb.outer sf.rb.outer
				if sf.enoughSpaceForFullSerifs
					include : composite-proc sf.lt.full sf.mt.full sf.rt.full
					include : composite-proc sf.lt.outer sf.rt.outer

	create-glyph 'cyrl/Sha' 0x428 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.capital
		include : CyrShaShape CAP df false

	create-glyph 'cyrl/sha.upright' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.e
		include : CyrShaShape XH df false

	create-glyph 'cyrl/teThreeLeg' 0x1C85 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.e
		include : CyrShaShape XH df true

	alias 'smcpMTurned' 0xA7FA 'cyrl/sha.upright'

	turned 'cyrl/sha.italic.toothedSerifless' null 'm.serifless' [DivFrame para.diversityM 3].middle (XH / 2)
	turned 'cyrl/sha.italic.toothedSerifed' null 'm.serifed' [DivFrame para.diversityM 3].middle (XH / 2)
	turned 'cyrl/sha.italic.toothedMotionSerifed' null 'm.topLeftAndBottomRightSerifed' [DivFrame para.diversityM 3].middle (XH / 2)
	create-glyph 'cyrl/sha.italic.toothedBottomRightSerifed' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.topLeftAndBottomRightSerifed'] AS_BASE
		eject-contour 'serifRB'
		include : FlipAround df.middle (XH / 2)

	create-glyph 'cyrl/sha.italic.tailedSerifless' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.serifless'] AS_BASE
		eject-contour 'barL'
		include : FlipAround df.middle (XH / 2)
		include : RightwardTailedBar df.rightSB 0 XH (sw -- df.mvs)

	create-glyph 'cyrl/sha.italic.tailedMotionSerifed' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.topLeftAndBottomRightSerifed'] AS_BASE
		eject-contour 'barL'
		eject-contour 'serifLT'
		include : FlipAround df.middle (XH / 2)
		include : RightwardTailedBar df.rightSB 0 XH (sw -- df.mvs)

	create-glyph 'cyrl/sha.italic.tailedSerifed' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.serifed'] AS_BASE
		eject-contour 'barL'
		eject-contour 'serifLT'
		include : FlipAround df.middle (XH / 2)
		include : RightwardTailedBar df.rightSB 0 XH (sw -- df.mvs)

	create-glyph 'cyrl/sha.italic.motionSerifedShachaBase' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.topLeftAndBottomRightSerifed'] AS_BASE
		eject-contour 'serifLT'
		include : FlipAround df.middle (XH / 2)

	create-glyph 'cyrl/sha.italic.serifedShachaBase' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'm.serifed'] AS_BASE
		eject-contour 'serifLT'
		include : FlipAround df.middle (XH / 2)

	select-variant 'cyrl/sha.italic'
	alias 'cyrl/sha.BGR' null 'cyrl/sha.italic'

	define [CyrShchaShape top df] : glyph-proc
		include : CyrShaShape top df
		#eject-contour 'serifRB'
		include : CyrDescender.rSideJut df.rightSB 0 (refSw -- df.mvs)

	create-glyph 'cyrl/Shcha' 0x429 : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.capital
		include : CyrShchaShape CAP df

	create-glyph 'cyrl/shcha.upright' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.e
		include : CyrShchaShape XH df

	create-glyph 'cyrl/shcha.italic.toothedSerifless' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'cyrl/sha.italic.toothedSerifless'] AS_BASE
		include : CyrDescender.rSideJut df.rightSB 0 (refSw -- df.mvs)

	create-glyph 'cyrl/shcha.italic.toothedMotionSerifed' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'cyrl/sha.italic.motionSerifedShachaBase'] AS_BASE
		include : CyrDescender.rSideJut df.rightSB 0 (refSw -- df.mvs)

	create-glyph 'cyrl/shcha.italic.toothedSerifed' : glyph-proc
		local df : DivFrame para.diversityM 3
		set-width df.width
		include [refer-glyph 'cyrl/sha.italic.serifedShachaBase'] AS_BASE
		include : CyrDescender.rSideJut df.rightSB 0 (refSw -- df.mvs)

	select-variant 'cyrl/shcha.italic'
	alias 'cyrl/shcha.BGR' null 'cyrl/shcha.italic'

	derive-composites 'cyrl/te.SRB' null 'cyrl/sha.italic' 'macronAbove'
