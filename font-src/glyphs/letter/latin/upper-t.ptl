$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"
import [Dotless CvDecompose MathSansSerif] from"../../../support/gr.mjs"

glyph-module

glyph-block Letter-Latin-Upper-T : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Letter-Blackboard : BBS BBD
	glyph-block-import Letter-Latin-Lower-M
	glyph-block-import Letter-Shared-Shapes : LetterBarOverlay UpwardHookShape
	glyph-block-import Letter-Shared-Shapes : CyrDescender SerifFrame FlatHookDepth LeftHook RetroflexHook

	define [TLeftX df]  : df.leftSB  + 0.75 * OX
	define [TRightX df] : df.rightSB - 0.75 * OX
	define [TShape df top doTopSerifs doBottomSerifs] : glyph-proc
		include : VBar.m df.middle 0 top
		local l : TLeftX df
		local r : TRightX df
		include : tagged 'strokeLT' : HBar.t l df.middle top
		include : tagged 'strokeRT' : HBar.t df.middle r top

		if doTopSerifs : begin
			include : tagged 'serifRT' : VSerif.dr r top VJut
			include : tagged 'serifLT' : VSerif.dl l top VJut
		if doBottomSerifs : begin
			include : tagged 'serifMB' : HSerif.rb df.middle 0 MidJutCenter
			include : tagged 'serifMB' : HSerif.lb df.middle 0 MidJutCenter

	define [TjeShape df top doTopSerifs] : glyph-proc
		local left : [mix df.leftSB df.rightSB 0.3] + OX
		local mid : left + (HVContrast / 2) * df.mvs

		local xTopBarLeft : df.leftSB - SideJut
		local xTopBarRightSym : 2 * left + HVContrast * df.mvs - xTopBarLeft
		local xTopBarRight : Math.max xTopBarRightSym : mix left df.rightSB 0.475
		include : tagged 'strokeLT' : HBar.t xTopBarLeft mid          top
		include : tagged 'strokeRT' : HBar.t mid         xTopBarRight top
		include : UpwardHookShape
			left -- left
			right -- df.rightSB
			ybegin -- top
			yend -- (top / 2)
			ada -- (SmallArchDepthA * 0.6 * df.div)
			adb -- (SmallArchDepthB * 0.6 * df.div)
			sw -- df.mvs

		if doTopSerifs : begin
			include : tagged 'serifRT' : VSerif.dr xTopBarRight top VJut
			include : tagged 'serifLT' : VSerif.dl xTopBarLeft  top VJut
		local sf2 : [SerifFrame.fromDf df (top / 2) 0].slice 1 2
		if SLAB : include sf2.rt.full

	define [TauShape df top doTopSerifs] : glyph-proc
		local hd : FlatHookDepth df
		include : difference
			TShape df top doTopSerifs false
			MaskBelow hd.y

		include : dispiro
			widths.center
			straight.down.start df.middle hd.y [heading Downward]
			arcvh.superness DesignParameters.tightHookSuperness
			flat (df.middle + hd.x - HalfStroke * HVContrast) HalfStroke
			curl (df.middle + [Math.max (hd.x - HalfStroke * HVContrast + 1) (LongJut * 1.05)] + HalfStroke * TanSlope) HalfStroke

	define TConfig : object
		serifless     { 1                           false false }
		motionSerifed { [mix 1 para.diversityM 0.5] true  false }
		serifed       { [mix 1 para.diversityM 0.5] true  true  }

	foreach { suffix { div doST doSB } } [Object.entries TConfig] : do
		local df : DivFrame div

		create-glyph "T.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.capital
			set-base-anchor 'bottomRight' (df.middle + HalfStroke * HVContrast) 0
			include : TShape df CAP doST doSB

		create-glyph "cyrl/TeDescender.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.capital
			set-base-anchor 'bottomRight' (df.middle + HalfStroke * HVContrast) 0
			include : TShape df CAP doST doSB
			include : CyrDescender.rSideJut
				x -- (df.middle + HalfStroke * HVContrast)
				y -- 0
				jut -- [if doSB MidJutCenter Jut]

		create-glyph "TBar.\(suffix)" : glyph-proc
			include [refer-glyph "T.\(suffix)"] AS_BASE ALSO_METRICS
			include : LetterBarOverlay.m.in df.middle 0 CAP 0.45

		create-glyph "Thookleft.\(suffix)" : glyph-proc
			include [refer-glyph "T.\(suffix)"] AS_BASE ALSO_METRICS
			eject-contour 'serifLT'
			eject-contour 'strokeLT'
			include : LeftHook (df.leftSB + LeftHook.extension) CAP df.middle

		create-glyph "smcpT.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.e
			set-base-anchor 'bottomRight' (df.middle + HalfStroke * HVContrast) 0
			include : TShape df XH doST doSB

		create-glyph "cyrl/Twe.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.capital
			include : TauShape df CAP doST doSB

		create-glyph "cyrl/twe.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.e
			include : TauShape df XH doST doSB

		create-glyph "currency/tengeSign.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.capital
			local gap : Math.max (CAP * 0.1) [AdviceStroke2 2 6 CAP]
			include : HBar.t [TLeftX df] [TRightX df] CAP OverlayStroke
			include : TShape df (CAP - gap - OverlayStroke) doST doSB

		create-glyph "cyrl/teDescender.upright.\(suffix)" : glyph-proc
			set-width df.width
			include : df.markSet.e
			include : TShape df XH doST doSB
			include : CyrDescender.rSideJut
				x -- (df.middle + HalfStroke * HVContrast)
				y -- 0
				jut -- [if doSB MidJutCenter Jut]

		turned "turnT.\(suffix)" nothing "T.\(suffix)" df.middle (CAP / 2)

		create-glyph "TRTailBR.\(suffix)" : glyph-proc
			include [refer-glyph "T.\(suffix)"] AS_BASE ALSO_METRICS
			include : MarkSet.capital
			include : RetroflexHook.mExt df.middle 0

		create-glyph "cyrl/TjeKomi.\(suffix)" : glyph-proc
			local df : DivFrame div 3
			set-width df.width
			include : df.markSet.capital
			include : TjeShape df CAP doST

		create-glyph "cyrl/tjeKomi.\(suffix)" : glyph-proc
			local df : DivFrame div 3
			set-width df.width
			include : df.markSet.e
			include : TjeShape df XH doST

	select-variant 'T' 'T'
	link-reduced-variant 'T/sansSerif' 'T' MathSansSerif
	select-variant 'smcpT' 0x1D1B (follow -- 'T')
	select-variant "TBar" 0x166 (follow -- 'T')
	select-variant "Thookleft" 0x1AC (follow -- 'T')
	select-variant "cyrl/TeDescender" 0x4AC (follow -- 'T')
	select-variant 'turnT' 0xA7B1 (follow -- 'T')

	alias 'grek/Tau' 0x3A4 'T'
	alias 'grek/tau' 0x3C4 'cyrl/twe.serifless'
	alias-reduced-variant 'grek/Tau/sansSerif' 'grek/Tau' 'T/sansSerif' MathSansSerif
	alias 'cyrl/Te' 0x422 'T'

	alias 'cyrl/te.upright' null 'smcpT'
	select-variant 'cyrl/teDescender.upright' (follow -- 'T')

	select-variant 'TRTailBR' 0x1AE (follow -- 'T/rtailBase')

	select-variant 'cyrl/TjeKomi' 0x50E (follow -- 'T/rtailBase')
	select-variant 'cyrl/tjeKomi' 0x50F (follow -- 'T/rtailBase')
	select-variant 'cyrl/Twe' 0xA68C (follow -- 'T/rtailBase')
	select-variant 'cyrl/twe' 0xA68D (follow -- 'T/rtailBase')

	select-variant 'currency/tengeSign' 0x20B8 (follow -- 'T')

	create-glyph 'mathbb/T' 0x1D54B : glyph-proc
		local df : DivFrame 1
		include : df.markSet.capital
		include : HBar.t [TLeftX df] [TRightX df] CAP BBS
		include : VBar.m (df.middle - BBD / 2) 0 CAP BBS
		include : VBar.m (df.middle + BBD / 2) 0 CAP BBS
		include : HBar.b (df.middle - BBD / 2) (df.middle + BBD / 2) 0 BBS

	create-glyph 'capitalSmcpI' 0xA7AE : glyph-proc
		local df : DivFrame 1
		set-width df.width
		include : df.markSet.capital
		local l : TLeftX df
		local r : TRightX df

		include : VBar.m df.middle 0 CAP
		include : HBar.t l r CAP
		include : HBar.b l r 0

		if SLAB : begin
			include : tagged 'serifRT' : VSerif.dr r CAP VJut
			include : tagged 'serifLT' : VSerif.dl l CAP VJut
			include : tagged 'serifRB' : VSerif.ur r 0 VJut
			include : tagged 'serifLB' : VSerif.ul l 0 VJut
