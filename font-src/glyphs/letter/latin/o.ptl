$$include '../../../meta/macros.ptl'

import [mix linreg clamp fallback] from"../../../support/utils.mjs"
import [Dotless CvDecompose] from"../../../support/gr.mjs"

glyph-module

glyph-block Letter-Latin-O : begin
	glyph-block-import CommonShapes
	glyph-block-import Common-Derivatives
	glyph-block-import Mark-Shared-Metrics : markHalfStroke
	glyph-block-import Mark-Horn-And-Angle : HornBaseAnchor
	glyph-block-import Mark-Above : RingDims RingShape
	glyph-block-import Mark-Adjustment : ExtendAboveBaseAnchors ExtendBelowBaseAnchors
	glyph-block-import Letter-Shared : CreateAccentedComposition SetGrekUpperTonos
	glyph-block-import Letter-Blackboard : BBS BBD

	create-glyph 'O' 'O' : glyph-proc
		include : MarkSet.capital
		include : OShape CAP 0 SB RightSB nothing ArchDepthA ArchDepthB

	create-glyph 'smcpO' 0x1D0F : glyph-proc
		include : MarkSet.e
		include : OShape XH 0 SB RightSB nothing ArchDepthA ArchDepthB

	create-glyph 'o' 'o' : glyph-proc
		include : MarkSet.e
		include : OShape XH 0 SB RightSB nothing nothing nothing

	create-glyph 'cyrl/oNarrow' 0x1C82 : glyph-proc
		local df : DivFrame para.diversityF 2
		set-width df.width
		include : df.markSet.e
		local subDf : DivFrame 0.75 2
		local ada : subDf.archDepthA SmallArchDepth subDf.mvs
		local adb : subDf.archDepthB SmallArchDepth subDf.mvs

		include : WithTransform [ApparentTranslate (0.5 * (df.width - subDf.width)) 0]
			OShape XH 0 subDf.leftSB subDf.rightSB subDf.mvs ada adb

	create-glyph 'oSideways' 0x1D11 : glyph-proc
		include : MarkSet.e
		include : PointingTo Width XH Width 0 : function []
			OShape (Width - SB / 2) (SB / 2) (XH * 0.1) (XH * 0.9) nothing nothing nothing

	define rBroadOn : DotRadius * [StrokeWidthBlend 1.625 1]
	create-glyph 'cyrl/BroadOn' 0x47A : glyph-proc
		define df : DivFrame 1 3
		include : MarkSet.capital
		include : OShape CAP 0 SB RightSB df.mvs ArchDepthA ArchDepthB
		include : DotAt Middle (df.mvs / 2 + O) rBroadOn
		include : DotAt Middle (CAP - df.mvs / 2 - O) rBroadOn

	create-glyph 'cyrl/broadOn' 0x47B : glyph-proc
		define df : DivFrame 1 3
		include : MarkSet.e
		include : OShape XH 0 SB RightSB df.mvs nothing nothing
		include : DotAt Middle (df.mvs / 2 + O) rBroadOn
		include : DotAt Middle (XH - df.mvs / 2 - O) rBroadOn

	create-glyph 'grek/Omicron' 0x39F : glyph-proc
		include [refer-glyph 'O'] AS_BASE ALSO_METRICS
		include : SetGrekUpperTonos 0

	alias 'cyrl/O' 0x41E 'O'
	alias 'grek/omicron' 0x3BF 'o'
	alias 'cyrl/o' 0x43e 'o'

	create-glyph 'mathbb/O' 0x1D546 : glyph-proc
		include : MarkSet.capital
		include : OShape CAP 0 SB RightSB BBS ArchDepthA ArchDepthB
		include : intersection
			OShapeOutline.NoOvershoot CAP 0 SB RightSB BBS ArchDepthA ArchDepthB
			union
				VBar.l  (SB + OX + BBD) 0 CAP BBS
				VBar.r (RightSB - OX - BBD) 0 CAP BBS

	create-glyph 'mathbb/o' 0x1D560 : glyph-proc
		include : MarkSet.e
		include : OShape XH 0 SB RightSB BBS
		include : intersection
			OShapeOutline.NoOvershoot XH 0 SB RightSB BBS
			union
				VBar.l  (SB + OX + BBD) 0 XH BBS
				VBar.r (RightSB - OX - BBD) 0 XH BBS

	derive-multi-part-glyphs 'OHorn' 0x01A0 {'O' 'longHorn'} : function [srcs gr] : glyph-proc
		local { base horn } srcs
		include : MarkSet.capital
		include : HornBaseAnchor RightSB CAP (Width / 2) (ArchDepthB) 0.5
		include : difference
			new-glyph : glyph-proc
				include : MarkSet.capital
				include [refer-glyph horn]
			OShapeOutline.NoOvershoot CAP 0 SB RightSB nothing ArchDepthA ArchDepthB
		include : refer-glyph base

	derive-multi-part-glyphs 'oHorn' 0x01A1 {'o' 'longHorn'} : function [srcs gr] : glyph-proc
		local { base horn } srcs
		include : MarkSet.e
		include : HornBaseAnchor RightSB XH (Width / 2) (ArchDepthB) 0.5
		include : difference
			new-glyph : glyph-proc
				include : MarkSet.e
				include [refer-glyph horn]
			OShapeOutline.NoOvershoot XH 0 SB RightSB nothing nothing nothing
		include : refer-glyph base

	create-glyph 'OSlash' 0xD8 : glyph-proc
		local fine : 0.5 * OverlayStroke
		include [refer-glyph 'O'] AS_BASE
		include : dispiro
			flat (SB + O + fine) [mix CAP 0 1.05] [widths fine fine]
			curl (RightSB - O - fine) [mix 0 CAP 1.05]

	create-glyph 'oSlash' 0xF8 : glyph-proc
		local fine : 0.5 * OverlayStroke
		include [refer-glyph 'o'] AS_BASE
		include : dispiro
			flat (SB + O + fine) [mix XH 0 1.05] [widths fine fine]
			curl (RightSB - O - fine) [mix 0 XH 1.05]

	create-glyph 'oSlashSideways' 0x1D13 : glyph-proc
		include : MarkSet.e
		include : PointingTo Width XH Width 0 : function [] : glyph-proc
			local fine : 0.5 * OverlayStroke
			include : OShape (Width - SB / 2) (SB / 2) (XH * 0.1) (XH * 0.9) nothing nothing nothing
			include : dispiro
				flat (SB + O + fine) [mix Width 0 1.05] [widths fine fine]
				curl (XH - SB - O - fine) [mix 0 Width 1.05]

	create-glyph 'Obar' 0x19F : glyph-proc
		include [refer-glyph 'O'] AS_BASE
		include : HBar.m (SB + OX + 1) (RightSB - OX - 1) (CAP * 0.5) OverlayStroke

	create-glyph 'obar' 0x275 : glyph-proc
		include [refer-glyph 'o'] AS_BASE
		include : HBar.m (SB + OX + 1) (RightSB - OX - 1) (XH * 0.5) OverlayStroke

	derive-composites 'cyrl/OMonocular' 0xA668 'O' 'innerDot'
	derive-composites 'cyrl/oMonocular' 0xA669 'o' 'innerDotSmall'
	derive-composites 'cyrl/OBinocular' 0xA66A 'O' 'innerDoubleDot'
	derive-composites 'cyrl/oBinocular' 0xA66B 'o' 'innerDoubleDotSmall'
	alias 'bullEye' 0x298 'cyrl/OMonocular'

	create-glyph 'cyrl/OCross' 0xA69A : glyph-proc
		include [refer-glyph 'O'] AS_BASE
		local fine ([StrokeWidthBlend 1 0.5] * OverlayStroke)
		include : HBar.m (SB + OX + 1) (RightSB - OX - 1) (CAP * 0.5) fine
		include : VBar.m Middle (O + 1) (CAP - O - 1) fine

	create-glyph 'cyrl/oCross' 0xA69B : glyph-proc
		include [refer-glyph 'o'] AS_BASE
		local fine ([StrokeWidthBlend 1 0.5] * OverlayStroke)
		include : HBar.m (SB + OX + 1) (RightSB - OX - 1) (XH * 0.5) fine
		include : VBar.m Middle (O + 1) (XH - O - 1) fine

	create-glyph 'romanThousandCD' 0x2180 : glyph-proc
		define df : DivFrame para.diversityM 3
		set-width df.width
		include : df.markSet.capital
		include : OShape CAP 0 df.leftSB df.rightSB df.mvs ArchDepthA ArchDepthB
		include : VBar.m df.middle (df.mvs / 2) (CAP - df.mvs / 2) df.mvs
		set-base-anchor 'trailing' Middle 0

	create-glyph 'romanTenThousand' 0x2182 : glyph-proc
		local df : DivFrame para.diversityM 5
		local innerDist : df.rightSB - df.leftSB - 5 * df.mvs * HVContrast
		local arcXL1 : df.leftSB + innerDist * (1 / 4) + 1 * df.mvs * HVContrast
		local arcXR1 : df.leftSB + innerDist * (3 / 4) + 4 * df.mvs * HVContrast
		local heightGap : Math.min (df.mvs + (CAP - df.mvs * 4) / 5) (innerDist / 4 + df.mvs)
		set-width df.width
		include : df.markSet.capital
		local heightInner1 : CAP - 2 * heightGap
		local smInner1  : clamp (df.mvs * 1.5) (0.499 * heightInner1) (ArchDepth * heightInner1 / CAP)
		local adaInner1 : ArchDepthAOf smInner1 (arcXR1 - arcXL1 + df.leftSB * 2)
		local adbInner1 : ArchDepthBOf smInner1 (arcXR1 - arcXL1 + df.leftSB * 2)
		include : OShape CAP 0 df.leftSB df.rightSB df.mvs ArchDepthA ArchDepthB
		include : OShape (CAP - heightGap) (0 + heightGap) arcXL1 arcXR1 df.mvs adaInner1 adbInner1
		include : VBar.m df.middle (df.mvs / 2) (CAP - df.mvs / 2) df.mvs

	create-glyph 'romanHundredThousand' 0x2188 : glyph-proc
		local df : DivFrame para.diversityM 7
		local innerDist : df.rightSB - df.leftSB - 7 * df.mvs * HVContrast
		local arcXL1 : df.leftSB + innerDist * (1 / 6) + 1 * df.mvs * HVContrast
		local arcXR1 : df.leftSB + innerDist * (5 / 6) + 6 * df.mvs * HVContrast
		local arcXL2 : df.leftSB + innerDist * (2 / 6) + 2 * df.mvs * HVContrast
		local arcXR2 : df.leftSB + innerDist * (4 / 6) + 5 * df.mvs * HVContrast
		local heightGap : Math.min (df.mvs + (CAP - df.mvs * 6) / 7) (innerDist / 6 + df.mvs)
		set-width df.width
		include : df.markSet.capital
		local heightInner1 : CAP - 2 * heightGap
		local heightInner2 : CAP - 4 * heightGap
		local smInner1  : clamp (df.mvs * 1.5) (0.499 * heightInner1) (ArchDepth * heightInner1 / CAP)
		local adaInner1 : ArchDepthAOf smInner1 (arcXR1 - arcXL1 + df.leftSB * 2)
		local adbInner1 : ArchDepthBOf smInner1 (arcXR1 - arcXL1 + df.leftSB * 2)
		local smInner2  : clamp (df.mvs * 1.5) (0.499 * heightInner2) (ArchDepth * heightInner2 / CAP)
		local adaInner2 : ArchDepthAOf smInner2 (arcXR2 - arcXL2 + df.leftSB * 2)
		local adbInner2 : ArchDepthBOf smInner2 (arcXR2 - arcXL2 + df.leftSB * 2)
		include : OShape CAP 0 df.leftSB df.rightSB df.mvs ArchDepthA ArchDepthB
		include : OShape (CAP - heightGap) (0 + heightGap) arcXL1 arcXR1 df.mvs adaInner1 adbInner1
		include : OShape (CAP - 2 * heightGap) (0 + 2 * heightGap) arcXL2 arcXR2 df.mvs adaInner2 adbInner2
		include : VBar.m df.middle (df.mvs / 2) (CAP - df.mvs / 2) df.mvs

	alias 'cyrl/Oe' 0x4E8 'Obar'
	alias 'grek/capSymbolTheta' 0x3F4 'Obar'
	alias 'cyrl/oe' 0x4E9 'obar'

	create-glyph 'oupperhalf' 0x1D16 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.rhs
			flat (SB + OX) (XH / 2) [heading Upward]
			curl (SB + OX) (XH - [Math.min (XH / 2 - 0.1) SmallArchDepthA])
			arcvh
			g4 (Middle - CorrectionOMidS) (XH - O)
			archv
			flat (RightSB - OX) (XH - [Math.min (XH / 2 - 0.1) SmallArchDepthB])
			curl (RightSB - OX) (XH / 2) [heading Downward]

	create-glyph 'olowerhalf' 0x1D17 : glyph-proc
		include : MarkSet.e
		include : dispiro
			widths.lhs
			flat (SB + OX) (XH / 2) [heading Downward]
			curl (SB + OX) [Math.min (XH / 2 - 0.1) SmallArchDepthB]
			arcvh
			g4 (Middle + CorrectionOMidS) O
			archv
			flat (RightSB - OX) [Math.min (XH / 2 - 0.1) SmallArchDepthA]
			curl (RightSB - OX) (XH / 2) [heading Upward]

	create-glyph 'oWithLightCentralizationStroke' : glyph-proc
		include : MarkSet.p
		include : refer-glyph "o"
		local fine      : AdviceStroke 4
		local outStand  : SB * 0.75 + fine * 0.25
		local outStandY : SmallArchDepthB / 2 - Descender * 0.6
		local yTurn     : SmallArchDepthB / 2
		include : difference
			dispiro
				widths.lhs fine
				corner Middle          (yTurn + outStandY)
				corner (SB - outStand) (yTurn - outStandY)
			OShapeOutline.NoOvershoot XH 0 SB RightSB nothing nothing nothing

	CreateAccentedComposition 'oDieresis' 0xF6 'o' 'dieresisAbove'

	create-glyph 'numeroRightHalf' : glyph-proc
		include : OShape XH [Math.max (Stroke * 1.5) (CAP * 0.1)] SB RightSB Stroke ArchDepthA ArchDepthB
		include : HBar.b SB RightSB 0

	CreateAccentedComposition 'oSbRsbUnderlineBelow' null 'o' 'sbRsbUnderlineBelow'

	create-glyph 'oLowRingInside' 0x2C7A : glyph-proc
		include [refer-glyph 'o'] AS_BASE
		local [object radiusIn radiusOut] : RingDims
		include : RingShape Middle (O + Stroke + radiusIn)

	create-glyph 'OPolish' 0xA7C0 : glyph-proc
		include [refer-glyph 'O'] AS_BASE
		include : MarkSet.capital
		include : ExtendAboveBaseAnchors (CAP + LongJut - 0.5 * Stroke)
		include : ExtendBelowBaseAnchors (-LongJut + 0.5 * Stroke)
		include : VBar.m Middle CAP (CAP + LongJut - 0.5 * Stroke)
		include : VBar.m Middle (-LongJut + 0.5 * Stroke) 0

	create-glyph 'oPolish' 0xA7C1 : glyph-proc
		include [refer-glyph 'o'] AS_BASE
		include : MarkSet.e
		include : ExtendAboveBaseAnchors (XH + LongJut - 0.5 * Stroke)
		include : ExtendBelowBaseAnchors (-LongJut + 0.5 * Stroke)
		include : VBar.m Middle XH (XH + LongJut - 0.5 * Stroke)
		include : VBar.m Middle (-LongJut + 0.5 * Stroke) 0
