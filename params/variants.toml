# Variants
[prime.capital-a]
sampler = "A"
tag = "cv01"

[prime.capital-a.variants-buildup]
entry = "body"
descriptionLeader = "`A`"

[prime.capital-a.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-a.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.A = "straight"
selectorAffix."A/sansSerif" = "straight"
selectorAffix.AE = "straight"

[prime.capital-a.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.A = "curly"
selectorAffix."A/sansSerif" = "curly"
selectorAffix.AE = "curly"

[prime.capital-a.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.A = "serifless"
selectorAffix."A/sansSerif" = "serifless"
selectorAffix.AE = ""

[prime.capital-a.variants-buildup.stages.serifs.top-serifed]
rank = 2
descriptionAffix = "serifs at top"
selectorAffix.A = "topSerifed"
selectorAffix."A/sansSerif" = "serifless"
selectorAffix.AE = ""

[prime.capital-a.variants-buildup.stages.serifs.base-serifed]
rank = 3
descriptionAffix = "serifs at base"
selectorAffix.A = "baseSerifed"
selectorAffix."A/sansSerif" = "serifless"
selectorAffix.AE = ""

[prime.capital-a.variants-buildup.stages.serifs.tri-serifed]
rank = 4
descriptionAffix = "serifs at both top and base"
selectorAffix.A = "triSerifed"
selectorAffix."A/sansSerif" = "serifless"
selectorAffix.AE = ""



[prime.capital-b]
sampler = "B"
tag = "cv02"

[prime.capital-b.variants-buildup]
entry = "symmetry"
descriptionLeader = "`B`"

[prime.capital-b.variants-buildup.stages.symmetry."*"]
next = "openness"

[prime.capital-b.variants-buildup.stages.symmetry.standard]
rank = 1
descriptionAffix = "mostly symmetric shape"
selectorAffix.B = "standard"
selectorAffix."B/sansSerif" = "standard"
selectorAffix.smcpB = "standard"

[prime.capital-b.variants-buildup.stages.symmetry.more-asymmetric]
rank = 2
descriptionAffix = "more asymmetric shape"
selectorAffix.B = "moreAsymmetric"
selectorAffix."B/sansSerif" = "moreAsymmetric"
selectorAffix.smcpB = "moreAsymmetric"

[prime.capital-b.variants-buildup.stages.openness."*"]
next = "serifs"

[prime.capital-b.variants-buildup.stages.openness.closed]
rank = 1
keyAffix = ""
selectorAffix.B = ""
selectorAffix."B/sansSerif" = ""
selectorAffix.smcpB = ""

[prime.capital-b.variants-buildup.stages.openness.interrupted]
rank = 2
descriptionAffix = "interrupted middle bar"
selectorAffix.B = "interrupted"
selectorAffix."B/sansSerif" = "interrupted"
selectorAffix.smcpB = "interrupted"

[prime.capital-b.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.B = "serifless"
selectorAffix."B/sansSerif" = "serifless"
selectorAffix.smcpB = "serifless"

[prime.capital-b.variants-buildup.stages.serifs.unilateral-serifed]
rank = 2
descriptionAffix = "serifs at top"
selectorAffix.B = "unilateralSerifed"
selectorAffix."B/sansSerif" = "serifless"
selectorAffix.smcpB = "unilateralSerifed"

[prime.capital-b.variants-buildup.stages.serifs.bilateral-serifed]
rank = 3
descriptionAffix = "serifs at both top and bottom"
selectorAffix.B = "bilateralSerifed"
selectorAffix."B/sansSerif" = "serifless"
selectorAffix.smcpB = "bilateralSerifed"



[prime.capital-c]
sampler = "C"
tag = "cv03"

[prime.capital-c.variants.serifless]
rank = 1
description = "Serifless `C`"
selector.C = "serifless"
selector."C/descBase" = "serifless"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralSerifed"
selector.CTopSerifOnly = "serifless"

[prime.capital-c.variants.unilateral-serifed]
rank = 2
description = "`C` with serif at top"
selector.C = "unilateralSerifed"
selector."C/descBase" = "bilateralSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralSerifed"
selector.CTopSerifOnly = "unilateralSerifed"

[prime.capital-c.variants.bilateral-serifed]
rank = 3
description = "`C` with serifs at both top and bottom"
selector.C = "bilateralSerifed"
selector."C/descBase" = "bilateralSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "bilateralSerifed"
selector.CTopSerifOnly = "unilateralSerifed"

[prime.capital-c.variants.unilateral-inward-serifed]
rank = 4
description = "`C` with inward serif at top"
selector.C = "unilateralInwardSerifed"
selector."C/descBase" = "hybridSerifed1"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "unilateralInwardSerifed"
selector.CTopSerifOnly = "unilateralInwardSerifed"

[prime.capital-c.variants.bilateral-inward-serifed]
rank = 5
description = "`C` with inward serif at both top and bottom"
selector.C = "bilateralInwardSerifed"
selector."C/descBase" = "bilateralInwardSerifed"
selector."C/sansSerif" = "serifless"
selector.CHookTop = "bilateralInwardSerifed"
selector.CTopSerifOnly = "unilateralInwardSerifed"


[prime.capital-d]
sampler = "D"
tag = "cv04"

[prime.capital-d.variants-buildup]
entry = "body"
descriptionLeader = "`D`"

[prime.capital-d.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-d.variants-buildup.stages.body.standard]
rank = 1
descriptionAffix = "standard shape"
selectorAffix.D = "standard"
selectorAffix."D/sansSerif" = "standard"

[prime.capital-d.variants-buildup.stages.body.more-rounded]
rank = 2
descriptionAffix = "more rounded shape"
selectorAffix.D = "moreRounded"
selectorAffix."D/sansSerif" = "moreRounded"

[prime.capital-d.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.D = "serifless"
selectorAffix."D/sansSerif" = "serifless"

[prime.capital-d.variants-buildup.stages.serifs.unilateral-serifed]
rank = 2
descriptionAffix = "serifs at top"
selectorAffix.D = "unilateralSerifed"
selectorAffix."D/sansSerif" = "serifless"

[prime.capital-d.variants-buildup.stages.serifs.bilateral-serifed]
rank = 3
descriptionAffix = "serifs at both top and bottom"
selectorAffix.D = "bilateralSerifed"
selectorAffix."D/sansSerif" = "serifless"



[prime.capital-e]
sampler = "E"
tag = "cv05"

[prime.capital-e.variants.serifless]
rank = 1
description = "E without serifs"
selector.E = "serifless"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifless"

[prime.capital-e.variants.top-left-serifed]
rank = 2
description = "E with serif only at top left"
selector.E = "topLeftSerifed"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifless"

[prime.capital-e.variants.serifed]
rank = 3
description = "E with serifs"
selector.E = "serifed"
selector."E/sansSerif" = "serifless"
selector."AE/EHalf" = "serifed"



[prime.capital-f]
sampler = "F"
tag = "cv06"

[prime.capital-f.variants.serifless]
rank = 1
description = "F without serifs"
selector.F = "serifless"
selector."F/sansSerif" = "serifless"

[prime.capital-f.variants.top-left-serifed]
rank = 2
description = "F with serif only at top left"
selector.F = "topLeftSerifed"
selector."F/sansSerif" = "serifless"

[prime.capital-f.variants.serifed]
rank = 3
description = "F with serifs"
selector.F = "serifed"
selector."F/sansSerif" = "serifless"



[prime.capital-g]
sampler = "G"
tag = "cv07"

[prime.capital-g.variants-buildup]
entry = "body"
descriptionLeader = "`G`"

[prime.capital-g.variants-buildup.stages.body."*"]
next = "top-serif"

[prime.capital-g.variants-buildup.stages.body.toothed]
rank = 1
descriptionAffix = "toothed body"
selectorAffix.G = "toothed"
selectorAffix."G/sansSerif" = "toothed"
selectorAffix.GHookTop = "toothed"

[prime.capital-g.variants-buildup.stages.body.toothless-corner]
rank = 2
descriptionAffix = "tootheless (corner) body"
selectorAffix.G = "toothlessCorner"
selectorAffix."G/sansSerif" = "toothlessCorner"
selectorAffix.GHookTop = "toothlessCorner"

[prime.capital-g.variants-buildup.stages.body.toothless-rounded]
rank = 3
descriptionAffix = "tootheless (rounded) body"
selectorAffix.G = "toothlessRounded"
selectorAffix."G/sansSerif" = "toothlessRounded"
selectorAffix.GHookTop = "toothlessRounded"

[prime.capital-g.variants-buildup.stages.top-serif."*"]
next = "hook"

[prime.capital-g.variants-buildup.stages.top-serif.serifless]
rank = 1
descriptionAffix = "top serif"
descriptionJoiner = "without"
selectorAffix.G = "serifless"
selectorAffix."G/sansSerif" = "serifless"
selectorAffix.GHookTop = "serifed"

[prime.capital-g.variants-buildup.stages.top-serif.serifed]
rank = 2
descriptionAffix = "top serif"
selectorAffix.G = "serifed"
selectorAffix."G/sansSerif" = "serifless"
selectorAffix.GHookTop = "serifed"

[prime.capital-g.variants-buildup.stages.top-serif.inward-serifed]
rank = 3
descriptionAffix = "inward top serif"
selectorAffix.G = "inwardSerifed"
selectorAffix."G/sansSerif" = "serifless"
selectorAffix.GHookTop = "serifed"

[prime.capital-g.variants-buildup.stages.hook.hookless]
rank = 1
descriptionAffix = "hooks"
descriptionJoiner = "without"
selectorAffix.G = "hookless"
selectorAffix."G/sansSerif" = "hookless"
selectorAffix.GHookTop = "hookless"

[prime.capital-g.variants-buildup.stages.hook.hooked]
rank = 2
descriptionAffix = "inward hook terminal"
selectorAffix.G = "hooked"
selectorAffix."G/sansSerif" = "hooked"
selectorAffix.GHookTop = "hooked"

[prime.capital-g.variants-buildup.stages.hook.capped]
rank = 3
descriptionAffix = "capped terminal"
selectorAffix.G = "capped"
selectorAffix."G/sansSerif" = "capped"
selectorAffix.GHookTop = "capped"



[prime.capital-h]
sampler = "H"
tag = "cv08"

[prime.capital-h.variants.serifless]
rank = 1
description = "H without serifs"
selector.H = "serifless"
selector.leftHalfH = "serifless"
selector.rightHalfH = "serifless"
selector."H/sansSerif" = "serifless"
selector.Hwair = "serifless"
selector.HHookLeft = "serifless"
selector."cyrl/Nje/leftHalf" = "serifless"
selector."cyrl/Nje/leftHalf/reduced" = "serifless"

[prime.capital-h.variants.top-left-serifed]
rank = 2
description = "H with serif only at top left"
selector.H = "topLeftSerifed"
selector.leftHalfH = "topLeftSerifed"
selector.rightHalfH = "serifless"
selector."H/sansSerif" = "serifless"
selector.Hwair = "topLeftSerifed"
selector.HHookLeft = "serifless"
selector."cyrl/Nje/leftHalf" = "topLeftSerifed"
selector."cyrl/Nje/leftHalf/reduced" = "topLeftSerifed"

[prime.capital-h.variants.top-left-bottom-right-serifed]
rank = 3
description = "H with serif only at top left and bottom right"
selector.H = "topLeftBottomRightSerifed"
selector.leftHalfH = "topLeftSerifed"
selector.rightHalfH = "topLeftBottomRightSerifed"
selector."H/sansSerif" = "serifless"
selector.Hwair = "topLeftSerifed"
selector.HHookLeft = "topLeftBottomRightSerifed"
selector."cyrl/Nje/leftHalf" = "topLeftSerifed"
selector."cyrl/Nje/leftHalf/reduced" = "topLeftSerifed"

[prime.capital-h.variants.serifed]
rank = 4
description = "H with serifs"
selector.H = "serifed"
selector.leftHalfH = "serifed"
selector.rightHalfH = "serifed"
selector."H/sansSerif" = "serifless"
selector.Hwair = "serifedExceptBottomRight"
selector.HHookLeft = "serifed"
selector."cyrl/Nje/leftHalf" = "serifed"
selector."cyrl/Nje/leftHalf/reduced" = "serifedExceptBottomRight"



[prime.capital-i]
sampler = "I"
tag = "cv09"

[prime.capital-i.variants.serifed]
rank = 1
description = "I with standard (long) serifs"
selector.I = "serifed"
selector."I/sansSerif" = "serifless"

[prime.capital-i.variants.serifless]
rank = 2
description = "I without serifs, like a straight bar"
selector.I = "serifless"
selector."I/sansSerif" = "serifless"

[prime.capital-i.variants.short-serifed]
rank = 3
description = "I with short serifs"
selector.I = "shortSerifed"
selector."I/sansSerif" = "serifless"



[prime.capital-j]
sampler = "J"
tag = "cv10"

[prime.capital-j.variants-buildup]
entry = "height"
descriptionLeader = "`J`"

[prime.capital-j.variants-buildup.stages.height."*"]
next = "hook"

[prime.capital-j.variants-buildup.stages.height.standard]
rank = 1
keyAffix = ""
selectorAffix.J = ""
selectorAffix."J/noDescend" = ""
selectorAffix."J/sansSerif" = ""
selectorAffix.JCurlyTail = ""

[prime.capital-j.variants-buildup.stages.height.descending]
rank = 2
descriptionAffix = "descending height"
selectorAffix.J = "descending"
selectorAffix."J/noDescend" = ""
selectorAffix."J/sansSerif" = "descending"
selectorAffix.JCurlyTail = "descending"

[prime.capital-j.variants-buildup.stages.hook."*"]
next = "serifs"

[prime.capital-j.variants-buildup.stages.hook.standard]
rank = 1
keyAffix = ""
selectorAffix.J = ""
selectorAffix."J/noDescend" = ""
selectorAffix."J/sansSerif" = ""
selectorAffix.JCurlyTail = ""

[prime.capital-j.variants-buildup.stages.hook.flat-hook]
rank = 2
descriptionAffix = "flat hook"
selectorAffix.J = "flatHook"
selectorAffix."J/noDescend" = "flatHook"
selectorAffix."J/sansSerif" = "flatHook"
selectorAffix.JCurlyTail = ""

[prime.capital-j.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.J = "serifless"
selectorAffix."J/noDescend" = "serifless"
selectorAffix."J/sansSerif" = "serifless"
selectorAffix.JCurlyTail = "serifless"

[prime.capital-j.variants-buildup.stages.serifs.serifed]
rank = 2
descriptionAffix = "serifs"
selectorAffix.J = "serifed"
selectorAffix."J/noDescend" = "serifed"
selectorAffix."J/sansSerif" = "serifless"
selectorAffix.JCurlyTail = "serifed"

[prime.capital-j.variants-buildup.stages.serifs.serifed-both-sides]
rank = 3
disableIf = [{ height = "descending", hook = "flat-hook" }]
descriptionAffix = "serifs at both sides (asymmetric)"
selectorAffix.J = "serifedBothSides"
selectorAffix."J/noDescend" = "serifedBothSides"
selectorAffix."J/sansSerif" = "serifless"
selectorAffix.JCurlyTail = "serifedBothSides"

[prime.capital-j.variants-buildup.stages.serifs.serifed-symmetric]
rank = 4
disableIf = [{ height = "descending", hook = "flat-hook" }]
descriptionAffix = "serifs at both sides (symmetric)"
selectorAffix.J = "serifedSymmetric"
selectorAffix."J/noDescend" = "serifedSymmetric"
selectorAffix."J/sansSerif" = "serifless"
selectorAffix.JCurlyTail = "serifedSymmetric"



[prime.capital-k]
sampler = "K"
tag = "cv11"

[prime.capital-k.variants-buildup]
entry = "body"
descriptionLeader = "`K`"

[prime.capital-k.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-k.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.K = "straight"
selectorAffix."K/sansSerif" = "straight"
selectorAffix."grek/KaiSymbol" = "straight"
selectorAffix."grek/kappa" = "straight"
selectorAffix.KDescender = "straight"

[prime.capital-k.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.K = "curly"
selectorAffix."K/sansSerif" = "curly"
selectorAffix."grek/KaiSymbol" = "curly"
selectorAffix."grek/kappa" = "curly"
selectorAffix.KDescender = "curly"

[prime.capital-k.variants-buildup.stages.body.symmetric-touching]
rank = 3
descriptionAffix = "symmetric legs touching the vertical bar"
selectorAffix.K = "symmetricTouching"
selectorAffix."K/sansSerif" = "symmetricTouching"
selectorAffix."grek/KaiSymbol" = "symmetricTouching"
selectorAffix."grek/kappa" = "symmetricTouching"
selectorAffix.KDescender = "symmetricTouching"

[prime.capital-k.variants-buildup.stages.body.symmetric-connected]
rank = 4
descriptionAffix = "symmetric legs connected to the vertical bar"
selectorAffix.K = "symmetricConnected"
selectorAffix."K/sansSerif" = "symmetricConnected"
selectorAffix."grek/KaiSymbol" = "symmetricConnected"
selectorAffix."grek/kappa" = "symmetricConnected"
selectorAffix.KDescender = "symmetricConnected"

[prime.capital-k.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.K = "serifless"
selectorAffix."K/sansSerif" = "serifless"
selectorAffix."grek/KaiSymbol" = "serifless"
selectorAffix."grek/kappa" = "serifless"
selectorAffix.KDescender = "serifless"

[prime.capital-k.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serifs at top left"
selectorAffix.K = "topLeftSerifed"
selectorAffix."K/sansSerif" = "serifless"
selectorAffix."grek/KaiSymbol" = "topLeftSerifed"
selectorAffix."grek/kappa" = "serifless"
selectorAffix.KDescender = "topLeftSerifed"

[prime.capital-k.variants-buildup.stages.serifs.bottom-right-serifed]
rank = 3
descriptionAffix = "serifs at bottom right"
selectorAffix.K = "bottomRightSerifed"
selectorAffix."K/sansSerif" = "serifless"
selectorAffix."grek/KaiSymbol" = "bottomRightSerifed2"
selectorAffix."grek/kappa" = "serifless"
selectorAffix.KDescender = "bottomRightSerifed"

[prime.capital-k.variants-buildup.stages.serifs.top-left-and-bottom-right-serifed]
rank = 4
descriptionAffix = "serifs at top left and bottom right"
selectorAffix.K = "topLeftAndBottomRightSerifed"
selectorAffix."K/sansSerif" = "serifless"
selectorAffix."grek/KaiSymbol" = "topLeftAndBottomRightSerifed2"
selectorAffix."grek/kappa" = "serifless"
selectorAffix.KDescender = "topLeftSerifed"

[prime.capital-k.variants-buildup.stages.serifs.serifed]
rank = 5
descriptionAffix = "serifs"
selectorAffix.K = "serifed"
selectorAffix."K/sansSerif" = "serifless"
selectorAffix."grek/KaiSymbol" = "serifed2"
selectorAffix."grek/kappa" = "serifless"
selectorAffix.KDescender = "serifed"



[prime.capital-l]
sampler = "L"
tag = "cv12"

[prime.capital-l.variants.serifless]
rank = 1
description = "Serifless `L`"
selector.L = "serifless"
selector."L/sansSerif" = "serifless"

[prime.capital-l.variants.motion-serifed]
rank = 2
description = "Standard `L` with motion serif at bottom right"
selector.L = "motionSerifed"
selector."L/sansSerif" = "serifless"

[prime.capital-l.variants.serifed]
rank = 3
description = "`L` with serifs"
selector.L = "serifed"
selector."L/sansSerif" = "serifless"



[prime.capital-m]
sampler = "M"
tag = "cv13"

[prime.capital-m.variants-buildup]
entry = "middle"
descriptionLeader = "`M`"

[prime.capital-m.variants-buildup.stages.middle."*"]
next = "sides"

[prime.capital-m.variants-buildup.stages.middle.hanging]
rank = 1
descriptionAffix = "middle being hanging off baseline"
selectorAffix.M = "hanging"
selectorAffix."M/sansSerif" = "hanging"
selectorAffix."cyrl/em" = "hanging"

[prime.capital-m.variants-buildup.stages.middle.flat-bottom]
rank = 2
descriptionAffix = "middle aligned to baseline"
selectorAffix.M = "flatBottom"
selectorAffix."M/sansSerif" = "flatBottom"
selectorAffix."cyrl/em" = "flatBottom"

[prime.capital-m.variants-buildup.stages.sides."*"]
next = "serifs"
mode = "prepend"

[prime.capital-m.variants-buildup.stages.sides.straight]
rank = 1
keyAffix = ""
selectorAffix.M = ""
selectorAffix."M/sansSerif" = ""
selectorAffix."cyrl/em" = ""

[prime.capital-m.variants-buildup.stages.sides.slanted-sides]
rank = 2
descriptionAffix = "slanted sides"
selectorAffix.M = "slantedSides"
selectorAffix."M/sansSerif" = "slantedSides"
selectorAffix."cyrl/em" = "slantedSides"

[prime.capital-m.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.M = "serifless"
selectorAffix."M/sansSerif" = "serifless"
selectorAffix."cyrl/em" = "serifless"

[prime.capital-m.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.M = "motionSerifed"
selectorAffix."M/sansSerif" = "serifless"
selectorAffix."cyrl/em" = "motionSerifed"

[prime.capital-m.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.M = "serifed"
selectorAffix."M/sansSerif" = "serifless"
selectorAffix."cyrl/em" = "smallCyrl"



[prime.capital-n]
sampler = "N"
tag = "cv14"

[prime.capital-n.variants-buildup]
entry = "body"
descriptionLeader = "`N`"

[prime.capital-n.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-n.variants-buildup.stages.body.standard]
rank = 1
descriptionAffix = "standard shape"
selectorAffix.N = "standard"
selectorAffix."N/sansSerif" = "standard"

[prime.capital-n.variants-buildup.stages.body.asymmetric]
rank = 2
descriptionAffix = "asymmetric shape"
selectorAffix.N = "asymmetric"
selectorAffix."N/sansSerif" = "asymmetric"

[prime.capital-n.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.N = "serifless"
selectorAffix."N/sansSerif" = "serifless"

[prime.capital-n.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.N = "motionSerifed"
selectorAffix."N/sansSerif" = "serifless"

[prime.capital-n.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.N = "serifed"
selectorAffix."N/sansSerif" = "serifless"



[prime.capital-p]
sampler = "P"
tag = "cv15"

[prime.capital-p.variants-buildup]
entry = "body"
descriptionLeader = "`P`"

[prime.capital-p.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-p.variants-buildup.stages.body.closed]
rank = 1
descriptionAffix = "closed shape"
selectorAffix.P = "closed"
selectorAffix."P/sansSerif" = "closed"
selectorAffix.PHookLeft = "closed"
selectorAffix."currency/rubleSign" = "closed"

[prime.capital-p.variants-buildup.stages.body.open]
rank = 2
descriptionAffix = "open shape"
selectorAffix.P = "open"
selectorAffix."P/sansSerif" = "open"
selectorAffix.PHookLeft = "open"
selectorAffix."currency/rubleSign" = "closed"

[prime.capital-p.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.P = "serifless"
selectorAffix."P/sansSerif" = "serifless"
selectorAffix.PHookLeft = "serifless"
selectorAffix."currency/rubleSign" = "serifless"

[prime.capital-p.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.P = "motionSerifed"
selectorAffix."P/sansSerif" = "serifless"
selectorAffix.PHookLeft = "motionSerifed"
selectorAffix."currency/rubleSign" = "motionSerifed"

[prime.capital-p.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.P = "serifed"
selectorAffix."P/sansSerif" = "serifless"
selectorAffix.PHookLeft = "serifed"
selectorAffix."currency/rubleSign" = "serifed"



[prime.capital-q]
sampler = "Q"
tag = "cv16"

[prime.capital-q.variants.curly-tailed]
rank = 1
groupRank = 1
description = "`Q` with a curly tail"
selector.Q = "curlyTailed"

[prime.capital-q.variants.crossing-curly-tailed]
rank = 2
groupRank = 1
description = "`Q` with a curly tail crossing the ring"
selector.Q = "crossingCurlyTailed"

[prime.capital-q.variants.straight]
rank = 3
groupRank = 1
description = "`Q` with a straight tail like in the old versions"
selector.Q = "straight"

[prime.capital-q.variants.crossing]
rank = 4
groupRank = 1
description = "`Q` with a tail crossing the ring"
selector.Q = "crossing"

[prime.capital-q.variants.crossing-baseline]
rank = 5
groupRank = 1
description = "`Q` with a tail above baseline crossing the ring"
selector.Q = "crossingBaseline"

[prime.capital-q.variants.vertical-crossing]
rank = 6
groupRank = 1
description = "`Q` with a vertical tail crossing the ring"
selector.Q = "verticalCrossing"

[prime.capital-q.variants.horizontal-tailed]
rank = 7
groupRank = 2
description = "`Q` with a horizontal tail, like Univers"
selector.Q = "horizontalTailed"

[prime.capital-q.variants.detached-tailed]
rank = 8
groupRank = 2
description = "`Q` with a oblique tail detached"
selector.Q = "detachedTailed"

[prime.capital-q.variants.detached-bend-tailed]
rank = 9
groupRank = 2
description = "`Q` with a bend tail detached"
selector.Q = "detachedBendTailed"

[prime.capital-q.variants.open-swash]
rank = 10
groupRank = 2
description = "`Q` with open contour and swash-y shape"
selector.Q = "openSwash"



[prime.capital-r]
sampler = "R"
tag = "cv17"

[prime.capital-r.variants-buildup]
entry = "openness"
descriptionLeader = "`R`"

[prime.capital-r.variants-buildup.stages.openness."*"]
next = "leg"

[prime.capital-r.variants-buildup.stages.openness.closed]
rank = 1
keyAffix = ""
selectorAffix.R = ""
selectorAffix."R/sansSerif" = ""
selectorAffix.RRotunda = ""

[prime.capital-r.variants-buildup.stages.openness.open]
rank = 2
descriptionAffix = "open contour"
selectorAffix.R = "open"
selectorAffix."R/sansSerif" = "open"
selectorAffix.RRotunda = ""

[prime.capital-r.variants-buildup.stages.leg."*"]
next = "serifs"
mode = "prepend"

[prime.capital-r.variants-buildup.stages.leg.straight]
rank = 1
descriptionAffix = "straight leg"
selectorAffix.R = "straight"
selectorAffix."R/sansSerif" = "straight"
selectorAffix.RRotunda = "straight"

[prime.capital-r.variants-buildup.stages.leg.curly]
rank = 2
descriptionAffix = "curly leg"
selectorAffix.R = "curly"
selectorAffix."R/sansSerif" = "curly"
selectorAffix.RRotunda = "curly"

[prime.capital-r.variants-buildup.stages.leg.standing]
rank = 3
descriptionAffix = "standing leg (like Helvetica)"
selectorAffix.R = "standing"
selectorAffix."R/sansSerif" = "standing"
selectorAffix.RRotunda = "standing"

[prime.capital-r.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.R = "serifless"
selectorAffix."R/sansSerif" = "serifless"
selectorAffix.RRotunda = "serifless"

[prime.capital-r.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.R = "motionSerifed"
selectorAffix."R/sansSerif" = "serifless"
selectorAffix.RRotunda = "serifless"

[prime.capital-r.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.R = "serifed"
selectorAffix."R/sansSerif" = "serifless"
selectorAffix.RRotunda = "serifless"



[prime.capital-s]
sampler = "S"
tag = "cv18"

[prime.capital-s.variants.serifless]
rank = 1
description = "Serifless `S`"
selector.S = "serifless"
selector."S/sansSerif" = "serifless"
selector.SSwash = "serifless"
selector.SRTail = "bottomSerifed"

[prime.capital-s.variants.unilateral-serifed]
rank = 2
description = "`S` with single serif at top"
selector.S = "unilateralSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralSerifed"
selector.SRTail = "bilateralSerifed"

[prime.capital-s.variants.bilateral-serifed]
rank = 3
description = "`S` with serifs at both end"
selector.S = "bilateralSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralSerifed"
selector.SRTail = "bilateralSerifed"

[prime.capital-s.variants.unilateral-inward-serifed]
rank = 4
description = "`S` with single inward serif at top"
selector.S = "unilateralInwardSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralInwardSerifed"
selector.SRTail = "hybridSerifed1"

[prime.capital-s.variants.bilateral-inward-serifed]
rank = 5
description = "`S` with inward serifs at both end"
selector.S = "bilateralInwardSerifed"
selector."S/sansSerif" = "serifless"
selector.SSwash = "unilateralInwardSerifed"
selector.SRTail = "bilateralInwardSerifed"



[prime.capital-t]
sampler = "T"
tag = "cv19"

[prime.capital-t.variants.serifless]
rank = 1
description = "Serifless T"
selector.T = "serifless"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "serifless"

[prime.capital-t.variants.motion-serifed]
rank = 2
description = "Motion-Serifed T"
selector.T = "motionSerifed"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "motionSerifed"

[prime.capital-t.variants.serifed]
rank = 3
description = "Serifed T"
selector.T = "serifed"
selector."T/sansSerif" = "serifless"
selector."T/rtailBase" = "motionSerifed"



[prime.capital-u]
sampler = "U"
tag = "cv20"

[prime.capital-u.variants-buildup]
entry = "body"
descriptionLeader = "`U`"

[prime.capital-u.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-u.variants-buildup.stages.body.toothed]
rank = 1
descriptionAffix = "toothed shape"
selectorAffix.U = "toothed"
selectorAffix."U/sansSerif" = "toothed"

[prime.capital-u.variants-buildup.stages.body.tailed]
rank = 2
descriptionAffix = "tailed shape"
selectorAffix.U = "tailed"
selectorAffix."U/sansSerif" = "tailed"

[prime.capital-u.variants-buildup.stages.body.toothless-corner]
rank = 3
descriptionAffix = "toothless (corner bottom-right) shape"
selectorAffix.U = "toothlessCorner"
selectorAffix."U/sansSerif" = "toothlessCorner"

[prime.capital-u.variants-buildup.stages.body.toothless-rounded]
rank = 4
descriptionAffix = "toothless (rounded) shape"
selectorAffix.U = "toothlessRounded"
selectorAffix."U/sansSerif" = "toothlessRounded"

[prime.capital-u.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.U = "serifless"
selectorAffix."U/sansSerif" = "serifless"

[prime.capital-u.variants-buildup.stages.serifs.motion-serifed]
rank = 2
disableIf = [{ body = "toothless-corner" }, { body = "toothless-rounded" }]
descriptionAffix = "motion serifs at top-left and bottom-right"
selectorAffix.U = "unilateralMotionSerifed"
selectorAffix."U/sansSerif" = "serifless"

[prime.capital-u.variants-buildup.stages.serifs.unilateral-motion-serifed]
rank = 3
disableIf = [{ body = "toothed" }, { body = "tailed" }]
descriptionAffix = "motion serifs at left side"
selectorAffix.U = "unilateralMotionSerifed"
selectorAffix."U/sansSerif" = "serifless"

[prime.capital-u.variants-buildup.stages.serifs.bilateral-motion-serifed]
rank = 4
disableIf = [{ body = "toothed" }, { body = "tailed" }]
descriptionAffix = "motion serifs at both sides"
selectorAffix.U = "bilateralMotionSerifed"
selectorAffix."U/sansSerif" = "serifless"

[prime.capital-u.variants-buildup.stages.serifs.serifed]
rank = 5
descriptionAffix = "serifs"
selectorAffix.U = "serifed"
selectorAffix."U/sansSerif" = "serifless"



[prime.capital-v]
sampler = "V"
tag = "cv21"

[prime.capital-v.variants-buildup]
entry = "body"
descriptionLeader = "`V`"

[prime.capital-v.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-v.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.V = "straight"
selectorAffix."V/sansSerif" = "straight"
selectorAffix.VHookRight = "straight"

[prime.capital-v.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.V = "curly"
selectorAffix."V/sansSerif" = "curly"
selectorAffix.VHookRight = "curly"

[prime.capital-v.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.V = "serifless"
selectorAffix."V/sansSerif" = "serifless"
selectorAffix.VHookRight = "serifless"

[prime.capital-v.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.V = "motionSerifed"
selectorAffix."V/sansSerif" = "serifless"
selectorAffix.VHookRight = "motionSerifed"

[prime.capital-v.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.V = "serifed"
selectorAffix."V/sansSerif" = "serifless"
selectorAffix.VHookRight = "serifed"



[prime.capital-w]
sampler = "W"
tag = "cv22"

[prime.capital-w.variants-buildup]
entry = "body"
descriptionLeader = "`W`"

[prime.capital-w.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-w.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "standard, straight body"
selectorAffix.W = "straight"
selectorAffix."W/sansSerif" = "straight"
selectorAffix.WHookTop = "straight"

[prime.capital-w.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly body"
selectorAffix.W = "curly"
selectorAffix."W/sansSerif" = "curly"
selectorAffix.WHookTop = "curly"

[prime.capital-w.variants-buildup.stages.body.straight-flat-top]
rank = 3
descriptionAffix = "straight body shape that the middle is forced to be aligned the top"
selectorAffix.W = "straightFlatTop"
selectorAffix."W/sansSerif" = "straightFlatTop"
selectorAffix.WHookTop = "straightFlatTop"

[prime.capital-w.variants-buildup.stages.body.straight-double-v]
rank = 4
descriptionAffix = "body shape like double V"
selectorAffix.W = "straightDoubleV"
selectorAffix."W/sansSerif" = "straightDoubleV"
selectorAffix.WHookTop = "straightDoubleV"

[prime.capital-w.variants-buildup.stages.body.straight-asymmetric]
rank = 5
descriptionAffix = "asymmetric shape"
selectorAffix.W = "straightAsymmetric"
selectorAffix."W/sansSerif" = "straightAsymmetric"
selectorAffix.WHookTop = "straightAsymmetric"

[prime.capital-w.variants-buildup.stages.body.straight-vertical-sides]
rank = 6
descriptionAffix = "body shape with vertical sides"
selectorAffix.W = "straightVerticalSides"
selectorAffix."W/sansSerif" = "straightVerticalSides"
selectorAffix.WHookTop = "straightVerticalSides"

[prime.capital-w.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.W = "serifless"
selectorAffix."W/sansSerif" = "serifless"
selectorAffix.WHookTop = "serifless"

[prime.capital-w.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.W = "motionSerifed"
selectorAffix."W/sansSerif" = "serifless"
selectorAffix.WHookTop = "motionSerifed"

[prime.capital-w.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.W = "serifed"
selectorAffix."W/sansSerif" = "serifless"
selectorAffix.WHookTop = "serifed"



[prime.capital-x]
sampler = "X"
tag = "cv23"

[prime.capital-x.variants-buildup]
entry = "body"
descriptionLeader = "`X`"

[prime.capital-x.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-x.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.X = "straight"
selectorAffix."X/sansSerif" = "straight"

[prime.capital-x.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.X = "curly"
selectorAffix."X/sansSerif" = "curly"

[prime.capital-x.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.X = "serifless"
selectorAffix."X/sansSerif" = "serifless"

[prime.capital-x.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.X = "motionSerifed"
selectorAffix."X/sansSerif" = "serifless"

[prime.capital-x.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.X = "serifed"
selectorAffix."X/sansSerif" = "serifless"



[prime.capital-y]
sampler = "Y"
tag = "cv24"

[prime.capital-y.variants-buildup]
entry = "body"
descriptionLeader = "`Y`"

[prime.capital-y.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-y.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.Y = "straight"
selectorAffix."grek/upsilonHookedSymbolShape" = "straight"
selectorAffix."Y/sansSerif" = "straight"

[prime.capital-y.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.Y = "curly"
selectorAffix."grek/upsilonHookedSymbolShape" = "straight"
selectorAffix."Y/sansSerif" = "curly"

[prime.capital-y.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.Y = "serifless"
selectorAffix."grek/upsilonHookedSymbolShape" = "serifless"
selectorAffix."Y/sansSerif" = "serifless"

[prime.capital-y.variants-buildup.stages.serifs.base-serifed]
rank = 2
descriptionAffix = "serifs at bottom"
selectorAffix.Y = "baseSerifed"
selectorAffix."grek/upsilonHookedSymbolShape" = "BaseSerifed"
selectorAffix."Y/sansSerif" = "serifless"

[prime.capital-y.variants-buildup.stages.serifs.motion-serifed]
rank = 3
descriptionAffix = "motion serifs"
selectorAffix.Y = "motionSerifed"
selectorAffix."grek/upsilonHookedSymbolShape" = "serifless"
selectorAffix."Y/sansSerif" = "serifless"

[prime.capital-y.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.Y = "serifed"
selectorAffix."grek/upsilonHookedSymbolShape" = "BaseSerifed"
selectorAffix."Y/sansSerif" = "serifless"



[prime.capital-z]
sampler = "Z"
tag = "cv25"

[prime.capital-z.variants-buildup]
entry = "body"
descriptionLeader = "`Z`"

[prime.capital-z.variants-buildup.stages.body."*"]
next = "serifs"

[prime.capital-z.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight body shape"
selectorAffix.Z = "straight"
selectorAffix."Z/sansSerif" = "straight"
selectorAffix."Z/reduced" = "straight"
selectorAffix."Z/reduced/sansSerif" = "straight"
selectorAffix.ZDesc = "straight"
selectorAffix."ZDesc/reduced" = "straight"

[prime.capital-z.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly body shape"
selectorAffix.Z = "curly"
selectorAffix."Z/sansSerif" = "curly"
selectorAffix."Z/reduced" = "curly"
selectorAffix."Z/reduced/sansSerif" = "curly"
selectorAffix.ZDesc = "curly"
selectorAffix."ZDesc/reduced" = "curly"

[prime.capital-z.variants-buildup.stages.body.cursive]
rank = 3
next = "overlay"
descriptionAffix = "cursive body shape"
selectorAffix.Z = "cursive"
selectorAffix."Z/sansSerif" = "cursive"
selectorAffix."Z/reduced" = "cursive"
selectorAffix."Z/reduced/sansSerif" = "cursive"
selectorAffix.ZDesc = "cursive"
selectorAffix."ZDesc/reduced" = "cursive"

[prime.capital-z.variants-buildup.stages.serifs."*"]
next = "overlay"

[prime.capital-z.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.Z = "serifless"
selectorAffix."Z/sansSerif" = "serifless"
selectorAffix."Z/reduced" = "serifless"
selectorAffix."Z/reduced/sansSerif" = "serifless"
selectorAffix.ZDesc = "serifless"
selectorAffix."ZDesc/reduced" = "serifless"

[prime.capital-z.variants-buildup.stages.serifs.serifed]
rank = 2
descriptionAffix = "serifs"
selectorAffix.Z = "serifed"
selectorAffix."Z/sansSerif" = "serifless"
selectorAffix."Z/reduced" = "serifed"
selectorAffix."Z/reduced/sansSerif" = "serifless"
selectorAffix.ZDesc = "topSerifed"
selectorAffix."ZDesc/reduced" = "topSerifed"

[prime.capital-z.variants-buildup.stages.serifs.bottom-serifed]
rank = 3
descriptionAffix = "serifs at bottom"
selectorAffix.Z = "bottomSerifed"
selectorAffix."Z/sansSerif" = "serifless"
selectorAffix."Z/reduced" = "bottomSerifed"
selectorAffix."Z/reduced/sansSerif" = "serifless"
selectorAffix.ZDesc = "serifless"
selectorAffix."ZDesc/reduced" = "serifless"

[prime.capital-z.variants-buildup.stages.serifs.top-serifed]
rank = 4
descriptionAffix = "serifs at top"
selectorAffix.Z = "topSerifed"
selectorAffix."Z/sansSerif" = "serifless"
selectorAffix."Z/reduced" = "topSerifed"
selectorAffix."Z/reduced/sansSerif" = "serifless"
selectorAffix.ZDesc = "topSerifed"
selectorAffix."ZDesc/reduced" = "topSerifed"

[prime.capital-z.variants-buildup.stages.overlay.no-overlay]
rank = 1
keyAffix = ""
selectorAffix.Z = ""
selectorAffix."Z/sansSerif" = ""
selectorAffix."Z/reduced" = ""
selectorAffix."Z/reduced/sansSerif" = ""
selectorAffix.ZDesc = ""
selectorAffix."ZDesc/reduced" = ""

[prime.capital-z.variants-buildup.stages.overlay.with-crossbar]
rank = 2
descriptionAffix = "a diagonal crossbar"
selectorAffix.Z = "withCrossBar"
selectorAffix."Z/sansSerif" = "withCrossBar"
selectorAffix."Z/reduced" = ""
selectorAffix."Z/reduced/sansSerif" = ""
selectorAffix.ZDesc = "withCrossBar"
selectorAffix."ZDesc/reduced" = ""

[prime.capital-z.variants-buildup.stages.overlay.with-horizontal-crossbar]
rank = 3
descriptionAffix = "a horizontal crossbar"
selectorAffix.Z = "withHorizontalCrossBar"
selectorAffix."Z/sansSerif" = "withHorizontalCrossBar"
selectorAffix."Z/reduced" = ""
selectorAffix."Z/reduced/sansSerif" = ""
selectorAffix.ZDesc = "withHorizontalCrossBar"
selectorAffix."ZDesc/reduced" = ""



[prime.a]
sampler = "a"
tag = "cv26"

[prime.a.variants-buildup]
entry = "storey"
descriptionLeader = "`a`"

[prime.a.variants-buildup.stages.storey.double-storey]
rank = 1
next = "terminal"
descriptionAffix = "double-storey body"
selectorAffix.a = "doubleStorey"
selectorAffix."a/sansSerif" = "doubleStorey"
selectorAffix."a/rtailBase" = "doubleStorey"
selectorAffix."a/turnABase" = "doubleStorey"
selectorAffix.scripta       = "singleStorey"

[prime.a.variants-buildup.stages.storey.single-storey]
rank = 2
next = "ear"
descriptionAffix = "single-storey body"
selectorAffix.a = "singleStorey"
selectorAffix."a/sansSerif" = "singleStorey"
selectorAffix."a/rtailBase" = "singleStorey"
selectorAffix."a/turnABase" = "doubleStorey"
selectorAffix.scripta       = "singleStorey"

[prime.a.variants-buildup.stages.ear."*"]
next = "terminal"

[prime.a.variants-buildup.stages.ear.eared]
rank = 1
keyAffix = ""
selectorAffix.a = ""
selectorAffix."a/sansSerif" = ""
selectorAffix."a/rtailBase" = ""
selectorAffix."a/turnABase" = ""
selectorAffix.scripta       = ""

[prime.a.variants-buildup.stages.ear.earless-corner]
rank = 2
descriptionAffix = "earless (cornered top-right)"
selectorAffix.a = "earlessCorner"
selectorAffix."a/sansSerif" = "earlessCorner"
selectorAffix."a/rtailBase" = "earlessCorner"
selectorAffix."a/turnABase" = ""
selectorAffix.scripta       = ""

[prime.a.variants-buildup.stages.ear.earless-rounded]
rank = 3
descriptionAffix = "earless (rounded top-right)"
selectorAffix.a = "earlessRounded"
selectorAffix."a/sansSerif" = "earlessRounded"
selectorAffix."a/rtailBase" = "earlessRounded"
selectorAffix."a/turnABase" = ""
selectorAffix.scripta       = ""

[prime.a.variants-buildup.stages.terminal.serifless]
rank = 1
descriptionAffix = "serif at terminal"
descriptionJoiner = "without"
selectorAffix.a = "serifless"
selectorAffix."a/sansSerif" = "serifless"
selectorAffix."a/rtailBase" = "serifless"
selectorAffix."a/turnABase" = "serifless"
selectorAffix.scripta       = "serifless"

[prime.a.variants-buildup.stages.terminal.tailed]
rank = 2
descriptionAffix = "curly tail"
selectorAffix.a = "tailed"
selectorAffix."a/sansSerif" = "tailed"
selectorAffix."a/rtailBase" = "serifless"
selectorAffix."a/turnABase" = "tailed"
selectorAffix.scripta       = "tailed"

[prime.a.variants-buildup.stages.terminal.toothless-corner]
rank = 3
disableIf = [{ storey = "single-storey" }]
descriptionAffix = "toothless (cornered bottom-right)"
selectorAffix.a = "toothlessCorner"
selectorAffix."a/sansSerif" = "toothlessCorner"
selectorAffix."a/rtailBase" = "serifless"
selectorAffix."a/turnABase" = "toothlessCorner"
selectorAffix.scripta       = "serifless"

[prime.a.variants-buildup.stages.terminal.toothless-rounded]
rank = 4
disableIf = [{ storey = "single-storey" }]
descriptionAffix = "toothless (rounded bottom-right)"
selectorAffix.a = "toothlessRounded"
selectorAffix."a/sansSerif" = "toothlessRounded"
selectorAffix."a/rtailBase" = "serifless"
selectorAffix."a/turnABase" = "toothlessRounded"
selectorAffix.scripta       = "serifless"

[prime.a.variants-buildup.stages.terminal.serifed]
rank = 5
descriptionAffix = "serif at terminal"
selectorAffix.a = "serifed"
selectorAffix."a/sansSerif" = "serifless"
selectorAffix."a/rtailBase" = "serifless"
selectorAffix."a/turnABase" = "serifed"
selectorAffix.scripta       = "serifed"


[prime.b]
sampler = "b"
tag = "cv27"

[prime.b.variants-buildup]
entry = "body"
descriptionLeader = "`b`"

[prime.b.variants-buildup.stages.body."*"]
next = "serifs"

[prime.b.variants-buildup.stages.body.toothed]
rank = 1
descriptionAffix = "toothed shape"
selectorAffix.b = "toothed"
selectorAffix."b/sansSerif" = "toothed"
selectorAffix.bHookTop = "toothed"

[prime.b.variants-buildup.stages.body.toothless-corner]
rank = 2
descriptionAffix = "toothless (cornered) shape"
selectorAffix.b = "toothlessCorner"
selectorAffix."b/sansSerif" = "toothlessCorner"
selectorAffix.bHookTop = "toothlessCorner"

[prime.b.variants-buildup.stages.body.toothless-rounded]
rank = 3
descriptionAffix = "toothless (rounded) shape"
selectorAffix.b = "toothlessRounded"
selectorAffix."b/sansSerif" = "toothlessRounded"
selectorAffix.bHookTop = "toothlessRounded"

[prime.b.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.b = "serifless"
selectorAffix."b/sansSerif" = "serifless"
selectorAffix.bHookTop = "serifless"

[prime.b.variants-buildup.stages.serifs.motion-serifed]
rank = 2
enableIf = [{ body = "toothed" }]
descriptionAffix = "motion serifs"
selectorAffix.b = "motionSerifed"
selectorAffix."b/sansSerif" = "serifless"
selectorAffix.bHookTop = "serifless"

[prime.b.variants-buildup.stages.serifs.serifed__toothed]
rank = 3
enableIf = [{ body = "toothed" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.b = "serifed"
selectorAffix."b/sansSerif" = "serifless"
selectorAffix.bHookTop = "bottomSerifed"

[prime.b.variants-buildup.stages.serifs.serifed__toothless]
rank = 3
enableIf = [{ body = "NOT toothed" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.b = "motionSerifed"
selectorAffix."b/sansSerif" = "serifless"
selectorAffix.bHookTop = "serifless"



[prime.c]
sampler = "c"
tag = "cv28"

[prime.c.variants.serifless]
rank = 1
description = "Serifless `c`"
selector.c = "serifless"
selector."c/sansSerif" = "serifless"
selector."c/descBase" = "serifless"
selector."c/turnDescBase" = "unilateralSerifed"
selector.cCurlyTail = "serifless"
selector.cHookTop = "unilateralSerifed"
selector.cTopSerifOnly = "serifless"
selector.cBottomSerifOnly = "serifless"

[prime.c.variants.unilateral-serifed]
rank = 2
description = "`c` with serif at top"
selector.c = "unilateralSerifed"
selector."c/sansSerif" = "serifless"
selector."c/descBase" = "bilateralSerifed"
selector."c/turnDescBase" = "unilateralSerifed"
selector.cCurlyTail = "unilateralSerifed"
selector.cHookTop = "unilateralSerifed"
selector.cTopSerifOnly = "unilateralSerifed"
selector.cBottomSerifOnly = "serifless"

[prime.c.variants.bilateral-serifed]
rank = 3
description = "`c` with serifs at both top and bottom"
selector.c = "bilateralSerifed"
selector."c/sansSerif" = "serifless"
selector."c/descBase" = "bilateralSerifed"
selector."c/turnDescBase" = "bilateralSerifed"
selector.cCurlyTail = "unilateralSerifed"
selector.cHookTop = "bilateralSerifed"
selector.cTopSerifOnly = "unilateralSerifed"
selector.cBottomSerifOnly = "bilateralSerifed"

[prime.c.variants.unilateral-inward-serifed]
rank = 4
description = "`c` with inward serif at top"
selector.c = "unilateralInwardSerifed"
selector."c/sansSerif" = "serifless"
selector."c/descBase" = "hybridSerifed1"
selector."c/turnDescBase" = "unilateralInwardSerifed"
selector.cCurlyTail = "unilateralInwardSerifed"
selector.cHookTop = "unilateralInwardSerifed"
selector.cTopSerifOnly = "unilateralInwardSerifed"
selector.cBottomSerifOnly = "serifless"

[prime.c.variants.bilateral-inward-serifed]
rank = 5
description = "`c` with inward serif at both top and bottom"
selector.c = "bilateralInwardSerifed"
selector."c/sansSerif" = "serifless"
selector."c/descBase" = "bilateralInwardSerifed"
selector."c/turnDescBase" = "bilateralInwardSerifed"
selector.cCurlyTail = "unilateralInwardSerifed"
selector.cHookTop = "bilateralInwardSerifed"
selector.cTopSerifOnly = "unilateralInwardSerifed"
selector.cBottomSerifOnly = "bilateralInwardSerifed"



[prime.d]
sampler = "d"
tag = "cv29"

[prime.d.variants-buildup]
entry = "body"
descriptionLeader = "`d`"

[prime.d.variants-buildup.stages.body."*"]
next = "serifs"

[prime.d.variants-buildup.stages.body.toothed]
rank = 1
descriptionAffix = "toothed shape"
selectorAffix.d = "toothed"
selectorAffix."d/sansSerif" = "toothed"
selectorAffix."d/phoneticLeft" = "toothed"
selectorAffix."d/hookBottomBase" = "toothed"
selectorAffix.dCurlyTail = "toothed"
selectorAffix.dHookTop = "toothed"
selectorAffix."dHookTop/hookBottomBase" = "toothed"
selectorAffix."cyrl/djeKomi" = "toothed"

[prime.d.variants-buildup.stages.body.toothless-corner]
rank = 2
descriptionAffix = "toothless (cornered) shape"
selectorAffix.d = "toothlessCorner"
selectorAffix."d/sansSerif" = "toothlessCorner"
selectorAffix."d/phoneticLeft" = "toothed"
selectorAffix."d/hookBottomBase" = "toothlessCornerHBB"
selectorAffix.dCurlyTail = "toothed"
selectorAffix.dHookTop = "toothlessCorner"
selectorAffix."dHookTop/hookBottomBase" = "toothlessCornerHBB"
selectorAffix."cyrl/djeKomi" = "toothlessRounded"

[prime.d.variants-buildup.stages.body.toothless-rounded]
rank = 3
descriptionAffix = "toothless (rounded) shape"
selectorAffix.d = "toothlessRounded"
selectorAffix."d/sansSerif" = "toothlessRounded"
selectorAffix."d/phoneticLeft" = "toothed"
selectorAffix."d/hookBottomBase" = "toothlessRoundedHBB"
selectorAffix.dCurlyTail = "toothed"
selectorAffix.dHookTop = "toothlessRounded"
selectorAffix."dHookTop/hookBottomBase" = "toothlessRoundedHBB"
selectorAffix."cyrl/djeKomi" = "toothlessRounded"

[prime.d.variants-buildup.stages.body.tailed]
rank = 4
descriptionAffix = "tailed shape"
selectorAffix.d = "tailed"
selectorAffix."d/sansSerif" = "tailed"
selectorAffix."d/phoneticLeft" = "toothed"
selectorAffix."d/hookBottomBase" = "toothed"
selectorAffix.dCurlyTail = "toothed"
selectorAffix.dHookTop = "tailed"
selectorAffix."dHookTop/hookBottomBase" = "toothed"
selectorAffix."cyrl/djeKomi" = "toothed"

[prime.d.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.d = "serifless"
selectorAffix."d/sansSerif" = "serifless"
selectorAffix."d/phoneticLeft" = "serifless"
selectorAffix."d/hookBottomBase" = "serifless"
selectorAffix.dCurlyTail = "serifless"
selectorAffix.dHookTop = "serifless"
selectorAffix."dHookTop/hookBottomBase" = "serifless"
selectorAffix."cyrl/djeKomi" = "serifless"

[prime.d.variants-buildup.stages.serifs.top-serifed]
rank = 2
enableIf = [{ body = "toothed" }]
descriptionAffix = "serif at top"
selectorAffix.d = "topSerifed"
selectorAffix."d/sansSerif" = "serifless"
selectorAffix."d/phoneticLeft" = "topSerifed"
selectorAffix."d/hookBottomBase" = "topSerifed"
selectorAffix.dCurlyTail = "topSerifed"
selectorAffix.dHookTop = "serifless"
selectorAffix."dHookTop/hookBottomBase" = "serifless"
selectorAffix."cyrl/djeKomi" = "topSerifed"

[prime.d.variants-buildup.stages.serifs.serifed__toothed]
rank = 3
enableIf = [{ body = "toothed" }]
keyAffix = "serifed"
descriptionAffix = "serif at top"
selectorAffix.d = "serifed"
selectorAffix."d/sansSerif" = "serifless"
selectorAffix."d/phoneticLeft" = "topSerifed"
selectorAffix."d/hookBottomBase" = "topSerifed"
selectorAffix.dCurlyTail = "topSerifed"
selectorAffix.dHookTop = "bottomSerifed"
selectorAffix."dHookTop/hookBottomBase" = "serifless"
selectorAffix."cyrl/djeKomi" = "serifed"

[prime.d.variants-buildup.stages.serifs.serifed__toothless]
rank = 3
enableIf = [{ body = "NOT toothed" }]
keyAffix = "serifed"
descriptionAffix = "serif at top"
selectorAffix.d = "topSerifed"
selectorAffix."d/sansSerif" = "serifless"
selectorAffix."d/phoneticLeft" = "topSerifed"
selectorAffix."d/hookBottomBase" = "topSerifed"
selectorAffix.dCurlyTail = "topSerifed"
selectorAffix.dHookTop = "serifless"
selectorAffix."dHookTop/hookBottomBase" = "serifless"
selectorAffix."cyrl/djeKomi" = "topSerifed"



[prime.e]
sampler = "e"
tag = "cv30"

[prime.e.variants.flat-crossbar]
rank = 1
description = "`e` with flat crossbar"
selector.e = "flatCrossbar"
selector.Schwa = "flatCrossbar"
selector.schwa = "flatCrossbar"

[prime.e.variants.rounded]
rank = 2
description = "`e` with more rounded shape"
selector.e = "rounded"
selector.Schwa = "rounded"
selector.schwa = "rounded"



[prime.f]
sampler = "f"
tag = "cv31"

[prime.f.variants-buildup]
entry = "tail"
descriptionLeader = "`f`"

[prime.f.variants-buildup.stages.hook."*"]
next = "crossbar"
mode = "prepend"

[prime.f.variants-buildup.stages.hook.full]
rank = 1
keyAffix = ""
selectorAffix.f = ""
selectorAffix."f/sansSerif" = ""
selectorAffix."f/compLigLeft1" = "flatHookCLC1"
selectorAffix."f/compLigLeft2" = "flatHookCLC2"
selectorAffix."f/compLigLeft3" = "flatHookCLC3"
selectorAffix."f/phoneticLeft" = ""
selectorAffix."f/tailless" = ""
selectorAffix.fLenis = ""
selectorAffix.fLTail = ""
selectorAffix.dotlessjWithStrokeAndHook = ""

[prime.f.variants-buildup.stages.hook.flat-hook]
rank = 2
descriptionAffix = "flat top hook"
selectorAffix.f = "flatHook"
selectorAffix."f/sansSerif" = "flatHook"
selectorAffix."f/compLigLeft1" = "flatHookCLC1"
selectorAffix."f/compLigLeft2" = "flatHookCLC2"
selectorAffix."f/compLigLeft3" = "flatHookCLC3"
selectorAffix."f/phoneticLeft" = "flatHook"
selectorAffix."f/tailless" = "flatHook"
selectorAffix.fLenis = "flatHook"
selectorAffix.fLTail = "flatHook"
selectorAffix.dotlessjWithStrokeAndHook = "flatHook"

[prime.f.variants-buildup.stages.tail."*"]
next = "hook"

[prime.f.variants-buildup.stages.tail.serifless]
rank = 1
descriptionAffix = "bottom serif, hook or extension"
descriptionJoiner = "without"
selectorAffix.f = "serifless"
selectorAffix."f/sansSerif" = "serifless"
selectorAffix."f/compLigLeft1" = "serifless"
selectorAffix."f/compLigLeft2" = "serifless"
selectorAffix."f/compLigLeft3" = "serifless"
selectorAffix."f/phoneticLeft" = "serifless"
selectorAffix."f/tailless" = "serifless"
selectorAffix.fLenis = "serifless"
selectorAffix.fLTail = "tailed"
selectorAffix.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants-buildup.stages.tail.serifed]
rank = 2
descriptionAffix = "bottom serif"
selectorAffix.f = "serifed"
selectorAffix."f/sansSerif" = "serifless"
selectorAffix."f/compLigLeft1" = "serifed"
selectorAffix."f/compLigLeft2" = "serifed"
selectorAffix."f/compLigLeft3" = "serifed"
selectorAffix."f/phoneticLeft" = "serifed"
selectorAffix."f/tailless" = "serifed"
selectorAffix.fLenis = "serifless"
selectorAffix.fLTail = "tailed"
selectorAffix.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants-buildup.stages.tail.extended]
rank = 3
descriptionAffix = "descending extension"
selectorAffix.f = "extended"
selectorAffix."f/sansSerif" = "extended"
selectorAffix."f/compLigLeft1" = "extended"
selectorAffix."f/compLigLeft2" = "extended"
selectorAffix."f/compLigLeft3" = "extended"
selectorAffix."f/phoneticLeft" = "extended"
selectorAffix."f/tailless" = "serifless"
selectorAffix.fLenis = "serifless"
selectorAffix.fLTail = "tailed"
selectorAffix.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants-buildup.stages.tail.tailed]
rank = 4
descriptionAffix = "descending bottom hook"
selectorAffix.f = "tailed"
selectorAffix."f/sansSerif" = "tailed"
selectorAffix."f/compLigLeft1" = "tailed"
selectorAffix."f/compLigLeft2" = "tailed"
selectorAffix."f/compLigLeft3" = "tailed"
selectorAffix."f/phoneticLeft" = "tailed"
selectorAffix."f/tailless" = "serifless"
selectorAffix.fLenis = "serifless"
selectorAffix.fLTail = "tailed"
selectorAffix.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants-buildup.stages.tail.diagonal-tailed]
rank = 5
descriptionAffix = "diagonal tail"
selectorAffix.f = "diagonalTailed"
selectorAffix."f/sansSerif" = "diagonalTailed"
selectorAffix."f/compLigLeft1" = "diagonalTailed"
selectorAffix."f/compLigLeft2" = "diagonalTailed"
selectorAffix."f/compLigLeft3" = "diagonalTailed"
selectorAffix."f/phoneticLeft" = "diagonalTailed"
selectorAffix."f/tailless" = "serifless"
selectorAffix.fLenis = "serifless"
selectorAffix.fLTail = "tailed"
selectorAffix.dotlessjWithStrokeAndHook = "tailed"

[prime.f.variants-buildup.stages.crossbar.standard]
rank = 1
keyAffix = ""
selectorAffix.f = ""
selectorAffix."f/sansSerif" = ""
selectorAffix."f/compLigLeft1" = "crossbarAtXHeight"
selectorAffix."f/compLigLeft2" = ""
selectorAffix."f/compLigLeft3" = ""
selectorAffix."f/phoneticLeft" = "crossbarAtXHeight"
selectorAffix."f/tailless" = ""
selectorAffix.fLenis = ""
selectorAffix.fLTail = ""
selectorAffix.dotlessjWithStrokeAndHook = ""

[prime.f.variants-buildup.stages.crossbar.crossbar-at-x-height]
rank = 1
descriptionAffix = "crossbar at X-height"
selectorAffix.f = "crossbarAtXHeight"
selectorAffix."f/sansSerif" = "crossbarAtXHeight"
selectorAffix."f/compLigLeft1" = "crossbarAtXHeight"
selectorAffix."f/compLigLeft2" = ""
selectorAffix."f/compLigLeft3" = ""
selectorAffix."f/phoneticLeft" = "crossbarAtXHeight"
selectorAffix."f/tailless" = "crossbarAtXHeight"
selectorAffix.fLenis = "crossbarAtXHeight"
selectorAffix.fLTail = "crossbarAtXHeight"
selectorAffix.dotlessjWithStrokeAndHook = "crossbarAtXHeight"



[prime.g]
sampler = "g"
tag = "cv32"

[prime.g.variants-buildup]
entry = "stroey"
descriptionLeader = "`g`"

[prime.g.variants-buildup.stages.stroey.double-storey]
next = "openness"
rank = 1
descriptionAffix = "double-storey shape"
selectorAffix.g = ""
selectorAffix."g/sansSerif" = ""
selectorAffix."gScript" = ""
selectorAffix."gScript/hookTopBase" = ""
selectorAffix."gScriptCrossedTail" = ""

[prime.g.variants-buildup.stages.openness."*"]
next = "END"

[prime.g.variants-buildup.stages.openness.closed]
rank = 1
keyAffix = ""
selectorAffix.g = "doubleStorey"
selectorAffix."g/sansSerif" = "doubleStorey"
selectorAffix."gScript" = "singleStoreySerifless"
selectorAffix."gScript/hookTopBase" = "singleStoreySerifless"
selectorAffix."gScriptCrossedTail" = "singleStoreySerifless"

[prime.g.variants-buildup.stages.openness.open]
rank = 1
descriptionAffix = "open contour"
selectorAffix.g = "openDoubleStorey"
selectorAffix."g/sansSerif" = "openDoubleStorey"
selectorAffix."gScript" = "singleStoreySerifless"
selectorAffix."gScript/hookTopBase" = "singleStoreySerifless"
selectorAffix."gScriptCrossedTail" = "singleStoreySerifless"

[prime.g.variants-buildup.stages.stroey.single-storey]
next = "hook"
rank = 2
descriptionAffix = "single-storey shape"
selectorAffix.g = "singleStorey"
selectorAffix."g/sansSerif" = "singleStorey"
selectorAffix."gScript" = "singleStorey"
selectorAffix."gScript/hookTopBase" = "singleStorey"
selectorAffix."gScriptCrossedTail" = "singleStorey"

[prime.g.variants-buildup.stages.hook."*"]
next = "ear"

[prime.g.variants-buildup.stages.hook.standard]
rank = 1
keyAffix = ""
selectorAffix.g = ""
selectorAffix."g/sansSerif" = ""
selectorAffix."gScript" = ""
selectorAffix."gScript/hookTopBase" = ""
selectorAffix."gScriptCrossedTail" = ""

[prime.g.variants-buildup.stages.hook.flat-hook]
rank = 2
descriptionAffix = "flat bottom hook"
selectorAffix.g = "flatHook"
selectorAffix."g/sansSerif" = "flatHook"
selectorAffix."gScript" = "flatHook"
selectorAffix."gScript/hookTopBase" = "flatHook"
selectorAffix."gScriptCrossedTail" = ""

[prime.g.variants-buildup.stages.ear.serifless]
rank = 1
selectorAffix.g = "serifless"
selectorAffix."g/sansSerif" = "serifless"
selectorAffix."gScript" = "serifless"
selectorAffix."gScript/hookTopBase" = "serifless"
selectorAffix."gScriptCrossedTail" = "serifless"

[prime.g.variants-buildup.stages.ear.serifed]
rank = 2
descriptionAffix = "top-right serif"
selectorAffix.g = "serifed"
selectorAffix."g/sansSerif" = "serifless"
selectorAffix."gScript" = "serifed"
selectorAffix."gScript/hookTopBase" = "serifless"
selectorAffix."gScriptCrossedTail" = "serifed"

[prime.g.variants-buildup.stages.ear.earless-corner]
rank = 3
descriptionAffix = "earless (cornered top-right)"
selectorAffix.g = "earlessCorner"
selectorAffix."g/sansSerif" = "earlessCorner"
selectorAffix."gScript" = "earlessCorner"
selectorAffix."gScript/hookTopBase" = "earlessCornerHTB"
selectorAffix."gScriptCrossedTail" = "earlessCorner"

[prime.g.variants-buildup.stages.ear.earless-rounded]
rank = 4
descriptionAffix = "earless (rounded top-right)"
selectorAffix.g = "earlessRounded"
selectorAffix."g/sansSerif" = "earlessRounded"
selectorAffix."gScript" = "earlessRounded"
selectorAffix."gScript/hookTopBase" = "earlessRoundedHTB"
selectorAffix."gScriptCrossedTail" = "earlessRounded"



[prime.h]
sampler = "h"
tag = "cv33"

[prime.h.variants-buildup]
entry = "tail"
descriptionLeader = "`h`"

[prime.h.variants-buildup.stages.tail."*"]
next = "serifs"

[prime.h.variants-buildup.stages.tail.straight]
rank = 1
descriptionAffix = "straight terminal"
selectorAffix.h = "straight"
selectorAffix."h/descBase" = "straight"
selectorAffix."h/sansSerif" = "straight"
selectorAffix.hHookTop = "straight"
selectorAffix.hHookTopLTail = "straight"
selectorAffix.heng = "straight"
selectorAffix."cyrl/shha" = "straight"

[prime.h.variants-buildup.stages.tail.tailed]
rank = 2
descriptionAffix = "curly tailed terminal"
selectorAffix.h = "tailed"
selectorAffix."h/descBase" = "straight"
selectorAffix."h/sansSerif" = "tailed"
selectorAffix.hHookTop = "tailed"
selectorAffix.hHookTopLTail = "straight"
selectorAffix.heng = "straight"
selectorAffix."cyrl/shha" = "tailed"

[prime.h.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.h = "serifless"
selectorAffix."h/descBase" = "serifless"
selectorAffix."h/sansSerif" = "serifless"
selectorAffix.hHookTop = "serifless"
selectorAffix.hHookTopLTail = "serifless"
selectorAffix.heng = "serifless"
selectorAffix."cyrl/shha" = "serifless"

[prime.h.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
disableIf = [{ tail = "NOT straight" }]
descriptionAffix = "serif at top left"
selectorAffix.h = "topLeftSerifed"
selectorAffix."h/descBase" = "topLeftSerifed"
selectorAffix."h/sansSerif" = "serifless"
selectorAffix.hHookTop = "serifless"
selectorAffix.hHookTopLTail = "serifless"
selectorAffix.heng = "topLeftSerifed"
selectorAffix."cyrl/shha" = "topLeftSerifed"

[prime.h.variants-buildup.stages.serifs.motion-serifed]
rank = 3
descriptionAffix = "serifs at top left and bottom right"
selectorAffix.h = "motionSerifed"
selectorAffix."h/descBase" = "topLeftSerifed"
selectorAffix."h/sansSerif" = "serifless"
selectorAffix.hHookTop = "motionSerifed"
selectorAffix.hHookTopLTail = "serifless"
selectorAffix.heng = "topLeftSerifed"
selectorAffix."cyrl/shha" = "motionSerifed"

[prime.h.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.h = "serifed"
selectorAffix."h/descBase" = "serifed"
selectorAffix."h/sansSerif" = "serifless"
selectorAffix.hHookTop = "serifed"
selectorAffix.hHookTopLTail = "serifed"
selectorAffix.heng = "serifed"
selectorAffix."cyrl/shha" = "serifed"


[prime.i]
sampler = "i"
tag = "cv34"

[prime.i.variants.serifed]
rank = 1
groupRank = 1
description = "Serifed `i`"
selector.dotlessi = "serifed"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "serifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.zshaped]
rank = 2
groupRank = 1
description = "Z-shaped `i`"
selector.dotlessi = "zshaped"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "zshaped"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.serifless]
rank = 3
groupRank = 1
description = "`i` like a straight line"
selector.dotlessi = "serifless"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "hooky"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.hooky]
rank = 4
groupRank = 1
description = "Hooky `i`"
selector.dotlessi = "hooky"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "hooky"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.hooky-bottom]
rank = 5
groupRank = 1
description = "`i` with a sharp-turning horizontal tail"
selector.dotlessi = "hookyBottom"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "zshaped"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.serifed-asymmetric]
rank = 6
groupRank = 1
description = "`i` with shorter top serif and full bottom serif"
selector.dotlessi = "serifedAsymmetric"
selector."dotlessi/sansSerif" = "serifless"
selector."dotlessi/compLigRight" = "serifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.tailed]
rank = 7
groupRank = 2
description = "`i` with curly tail"
selector.dotlessi = "tailed"
selector."dotlessi/sansSerif" = "tailed"
selector."dotlessi/compLigRight" = "tailedSerifed"
selector."dotlessi/ital" = "tailed"

[prime.i.variants.tailed-serifed]
rank = 8
groupRank = 2
description = "`i` with top serif and curly tail"
selector.dotlessi = "tailedSerifed"
selector."dotlessi/sansSerif" = "tailed"
selector."dotlessi/compLigRight" = "tailedSerifed"
selector."dotlessi/ital" = "tailedSerifed"

[prime.i.variants.flat-tailed]
rank = 9
groupRank = 2
description = "`i` with curly-then-flat tail"
selector.dotlessi = "flatTailed"
selector."dotlessi/sansSerif" = "flatTailed"
selector."dotlessi/compLigRight" = "serifedFlatTailed"
selector."dotlessi/ital" = "flatTailed"

[prime.i.variants.serifed-flat-tailed]
rank = 10
groupRank = 2
description = "`i` with top serif and curly-then-flat tail"
selector.dotlessi = "serifedFlatTailed"
selector."dotlessi/sansSerif" = "flatTailed"
selector."dotlessi/compLigRight" = "serifedFlatTailed"
selector."dotlessi/ital" = "serifedFlatTailed"

[prime.i.variants.diagonal-tailed]
rank = 11
groupRank = 2
description = "`i` with diagonal tail"
selector.dotlessi = "diagonalTailed"
selector."dotlessi/sansSerif" = "diagonalTailed"
selector."dotlessi/compLigRight" = "serifedDiagonalTailed"
selector."dotlessi/ital" = "diagonalTailed"

[prime.i.variants.serifed-diagonal-tailed]
rank = 12
groupRank = 2
description = "`i` with top serif and diagonal tail"
selector.dotlessi = "serifedDiagonalTailed"
selector."dotlessi/sansSerif" = "diagonalTailed"
selector."dotlessi/compLigRight" = "serifedDiagonalTailed"
selector."dotlessi/ital" = "serifedDiagonalTailed"



[prime.j]
sampler = "j"
tag = "cv35"

[prime.j.variants.serifless]
rank = 1
description = "`j` without serif"
selector.dotlessj = "serifless"
selector."dotlessj/sansSerif" = "serifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.serifed]
rank = 2
description = "`j` with top serif"
selector.dotlessj = "serifed"
selector."dotlessj/sansSerif" = "serifless"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.straight-line]
rank = 3
description = "`j` like a straight line"
selector.dotlessj = "straightLine"
selector."dotlessj/sansSerif" = "straightLine"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.hooky]
rank = 4
description = "`j` like a straight line with top serif"
selector.dotlessj = "hooky"
selector."dotlessj/sansSerif" = "straightLine"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.flat-hook-serifless]
rank = 5
description = "`j` with flat terminal hook"
selector.dotlessj = "flatHookSerifless"
selector."dotlessj/sansSerif" = "flatHookSerifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.flat-hook-serifed]
rank = 6
description = "`j` with flat terminal hook and top serif"
selector.dotlessj = "flatHookSerifed"
selector."dotlessj/sansSerif" = "flatHookSerifless"
selector.dotlessjCurlyTail = "serifed"

[prime.j.variants.diagonal-tailed-serifless]
rank = 7
description = "`j` with diagonal tail"
selector.dotlessj = "diagonalTailedSerifless"
selector."dotlessj/sansSerif" = "diagonalTailedSerifless"
selector.dotlessjCurlyTail = "serifless"

[prime.j.variants.diagonal-tailed-serifed]
rank = 8
description = "`j` with top serif and diagonal tail"
selector.dotlessj = "diagonalTailedSerifed"
selector."dotlessj/sansSerif" = "diagonalTailedSerifless"
selector.dotlessjCurlyTail = "serifed"



[prime.k]
sampler = "k"
tag = "cv36"

[prime.k.variants-buildup]
entry = "body"
descriptionLeader = "`k`"

[prime.k.variants-buildup.stages.body."*"]
next = "serifs"

[prime.k.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "standard shape"
selectorAffix.k = "straight"
selectorAffix."k/sansSerif" = "straight"
selectorAffix.kHookTop = "straight"
selectorAffix.kDescender = "straight"

[prime.k.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.k = "curly"
selectorAffix."k/sansSerif" = "curly"
selectorAffix.kHookTop = "curly"
selectorAffix.kDescender = "curly"

[prime.k.variants-buildup.stages.body.symmetric-touching]
rank = 3
descriptionAffix = "symmetric legs touching the vertical bar"
selectorAffix.k = "symmetricTouching"
selectorAffix."k/sansSerif" = "symmetricTouching"
selectorAffix.kHookTop = "symmetricTouching"
selectorAffix.kDescender = "symmetricTouching"

[prime.k.variants-buildup.stages.body.symmetric-connected]
rank = 4
descriptionAffix = "symmetric legs connected to the vertical bar"
selectorAffix.k = "symmetricConnected"
selectorAffix."k/sansSerif" = "symmetricConnected"
selectorAffix.kHookTop = "symmetricConnected"
selectorAffix.kDescender = "symmetricConnected"

[prime.k.variants-buildup.stages.body.cursive]
rank = 5
descriptionAffix = "cursive loop"
selectorAffix.k = "cursive"
selectorAffix."k/sansSerif" = "cursive"
selectorAffix.kHookTop = "cursive"
selectorAffix.kDescender = "cursive"

[prime.k.variants-buildup.stages.body.diagonal-tailed-cursive]
rank = 6
descriptionAffix = "cursive loop plus diagonal tail"
selectorAffix.k = "cursiveTailed"
selectorAffix."k/sansSerif" = "cursiveTailed"
selectorAffix.kHookTop = "cursiveTailed"
selectorAffix.kDescender = "cursive"

[prime.k.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.k = "serifless"
selectorAffix."k/sansSerif" = "serifless"
selectorAffix.kHookTop = "serifless"
selectorAffix.kDescender = "serifless"

[prime.k.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serifs at top left"
selectorAffix.k = "topLeftSerifed"
selectorAffix."k/sansSerif" = "serifless"
selectorAffix.kHookTop = "serifless"
selectorAffix.kDescender = "topLeftSerifed"

[prime.k.variants-buildup.stages.serifs.bottom-right-serifed]
rank = 3
disableIf = [ { body = "diagonal-tailed-cursive" } ]
descriptionAffix = "serifs at bottom right"
selectorAffix.k = "bottomRightSerifed"
selectorAffix."k/sansSerif" = "serifless"
selectorAffix.kHookTop = "bottomRightSerifed"
selectorAffix.kDescender = "bottomRightSerifed"

[prime.k.variants-buildup.stages.serifs.top-left-and-bottom-right-serifed]
rank = 4
disableIf = [ { body = "diagonal-tailed-cursive" } ]
descriptionAffix = "serifs at top left and bottom right"
selectorAffix.k = "topLeftAndBottomRightSerifed"
selectorAffix."k/sansSerif" = "serifless"
selectorAffix.kHookTop = "bottomRightSerifed"
selectorAffix.kDescender = "topLeftAndBottomRightSerifed"

[prime.k.variants-buildup.stages.serifs.serifed]
rank = 5
disableIf = [ { body = "diagonal-tailed-cursive" } ]
descriptionAffix = "serifs"
selectorAffix.k = "serifed"
selectorAffix."k/sansSerif" = "serifless"
selectorAffix.kHookTop = "serifed"
selectorAffix.kDescender = "serifed"



[prime.l]
sampler = "l"
tag = "cv37"

[prime.l.variants.serifed]
rank = 1
groupRank = 1
description = "Serifed `l`"
selector.l = "serifed"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "serifed"
selector."l/reduced/decompress" = "serifed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.serifless]
rank = 2
groupRank = 1
description = "`l` like a straight line"
selector.l = "serifless"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "hooky"
selector."l/reduced/decompress" = "seriflessDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.hooky]
rank = 3
groupRank = 1
description = "Hooky `l`"
selector.l = "hooky"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "hooky"
selector."l/reduced/decompress" = "hookyDec"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.zshaped]
rank = 4
groupRank = 1
description = "Z-shaped `l`"
selector.l = "zshaped"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "zshaped"
selector."l/reduced/decompress" = "zshaped"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.hooky-bottom]
rank = 5
groupRank = 1
description = "`l` with a straight sharp-turning horizontal tail"
selector.l = "hookyBottom"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "zshaped"
selector."l/reduced/decompress" = "hookyBottomDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-asymmetric]
rank = 6
groupRank = 1
description = "`l` with shorter top serif and full bottom serif"
selector.l = "serifedAsymmetric"
selector."l/sansSerif" = "serifless"
selector."l/compLigRight" = "serifed"
selector."l/reduced/decompress" = "serifedAsymmetric"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.tailed]
rank = 7
groupRank = 2
description = "`l` with curly tail"
selector.l = "tailed"
selector."l/sansSerif" = "tailed"
selector."l/compLigRight" = "tailedSerifed"
selector."l/reduced/decompress" = "tailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.tailed-serifed]
rank = 8
groupRank = 2
description = "`l` with top serif and curly tail"
selector.l = "tailedSerifed"
selector."l/sansSerif" = "tailed"
selector."l/compLigRight" = "tailedSerifed"
selector."l/reduced/decompress" = "tailedSerifed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.flat-tailed]
rank = 9
groupRank = 2
description = "`l` with curly-then-flat tail"
selector.l = "flatTailed"
selector."l/sansSerif" = "flatTailed"
selector."l/compLigRight" = "serifedFlatTailed"
selector."l/reduced/decompress" = "flatTailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-flat-tailed]
rank = 10
groupRank = 2
description = "`l` with top serif and curly-then-flat tail"
selector.l = "serifedFlatTailed"
selector."l/sansSerif" = "flatTailed"
selector."l/compLigRight" = "serifedFlatTailed"
selector."l/reduced/decompress" = "serifedFlatTailed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"

[prime.l.variants.diagonal-tailed]
rank = 11
groupRank = 2
description = "`l` with diagonal tail"
selector.l = "diagonalTailed"
selector."l/sansSerif" = "diagonalTailed"
selector."l/compLigRight" = "serifedDiagonalTailed"
selector."l/reduced/decompress" = "diagonalTailedDec"
selector."l/reduced/rtail" = "seriflessRTail"
selector."l/reduced/rtailDec" = "seriflessRTailDec"
selector."l/phoneticLeft" = "seriflessPL"
selector.lCurlyTail = "serifless"
selector.lyogh = "serifless"

[prime.l.variants.serifed-diagonal-tailed]
rank = 12
groupRank = 2
description = "`l` with top serif and diagonal tail"
selector.l = "serifedDiagonalTailed"
selector."l/sansSerif" = "diagonalTailed"
selector."l/compLigRight" = "serifedDiagonalTailed"
selector."l/reduced/decompress" = "serifedDiagonalTailed"
selector."l/reduced/rtail" = "hookyRTail"
selector."l/reduced/rtailDec" = "hookyRTailDec"
selector."l/phoneticLeft" = "hookyPL"
selector.lCurlyTail = "hooky"
selector.lyogh = "hooky"


[prime.m]
sampler = "m"
tag = "cv38"

[prime.m.variants-buildup]
entry = "body"
descriptionLeader = "`m`"

[prime.m.variants-buildup.stages.body."*"]
next = "leg"

[prime.m.variants-buildup.stages.body.eared]
rank = 1
groupRank = 10
keyAffix = ""
descriptionAffix = "eared body shape"
selectorAffix.m = ""
selectorAffix."m/tailless" = ""
selectorAffix."m/sansSerif" = ""
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = ""

[prime.m.variants-buildup.stages.body.earless-corner-double-arch]
rank = 2
groupRank = 20
descriptionAffix = "earless (corner top-left) double-arch body shape"
selectorAffix.m = "earlessCornerDoubleArch"
selectorAffix."m/tailless" = "earlessCornerDoubleArch"
selectorAffix."m/sansSerif" = "earlessCornerDoubleArch"
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = "earlessCornerDoubleArch"

[prime.m.variants-buildup.stages.body.earless-rounded-double-arch]
rank = 3
groupRank = 30
descriptionAffix = "earless (rounded top-left) double-arch body shape"
selectorAffix.m = "earlessRoundedDoubleArch"
selectorAffix."m/tailless" = "earlessRoundedDoubleArch"
selectorAffix."m/sansSerif" = "earlessRoundedDoubleArch"
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = "earlessRoundedDoubleArch"

[prime.m.variants-buildup.stages.body.earless-single-arch]
rank = 4
groupRank = 40
descriptionAffix = "earless (corner top-left) body shape"
selectorAffix.m = "earlessSingleArch"
selectorAffix."m/tailless" = "earlessSingleArch"
selectorAffix."m/sansSerif" = "earlessSingleArch"
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = "earlessSingleArch"

[prime.m.variants-buildup.stages.leg."*"]
next = "tail"

[prime.m.variants-buildup.stages.leg.normal]
rank = 1
groupRank = 1
keyAffix = ""
descriptionAffix = "normal middle leg"
selectorAffix.m = ""
selectorAffix."m/tailless" = ""
selectorAffix."m/sansSerif" = ""
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = ""

[prime.m.variants-buildup.stages.leg.short-leg]
rank = 2
groupRank = {if = [{body = "eared"}], then = 2, else = 1}
descriptionAffix = "shorter middle leg (like Ubuntu Mono)"
selectorAffix.m = "shortLeg"
selectorAffix."m/tailless" = "shortLeg"
selectorAffix."m/sansSerif" = "shortLeg"
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = "shortLeg"

[prime.m.variants-buildup.stages.tail."*"]
next = "serifs"

[prime.m.variants-buildup.stages.tail.normal]
rank = 1
keyAffix = ""
selectorAffix.m = ""
selectorAffix."m/tailless" = ""
selectorAffix."m/sansSerif" = ""
selectorAffix."cyrl/te.italic" = ""
selectorAffix.mLTail = ""

[prime.m.variants-buildup.stages.tail.tailed]
rank = 2
descriptionAffix = "tail"
selectorAffix.m = "tailed"
selectorAffix."m/tailless" = ""
selectorAffix."m/sansSerif" = "tailed"
selectorAffix."cyrl/te.italic" = "tailed"
selectorAffix.mLTail = ""

[prime.m.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix.m = "serifless"
selectorAffix."m/tailless" = "serifless"
selectorAffix."m/sansSerif" = "serifless"
selectorAffix."cyrl/te.italic" = "serifless"
selectorAffix.mLTail = "serifless"

[prime.m.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serif at top left"
disableIf = [ { body = "NOT eared" } ]
selectorAffix.m = "topLeftSerifed"
selectorAffix."m/tailless" = "topLeftSerifed"
selectorAffix."m/sansSerif" = "serifless"
selectorAffix."cyrl/te.italic" = "topLeftSerifed"
selectorAffix.mLTail = "topLeftSerifed"

[prime.m.variants-buildup.stages.serifs.top-left-and-bottom-right-serifed]
rank = 3
descriptionAffix = "serifs at top left and bottom right"
disableIf = [ { body = "NOT eared" }, { tail = "tailed" } ]
selectorAffix.m = "topLeftAndBottomRightSerifed"
selectorAffix."m/tailless" = "topLeftAndBottomRightSerifed"
selectorAffix."m/sansSerif" = "serifless"
selectorAffix."cyrl/te.italic" = "topLeftAndBottomRightSerifed"
selectorAffix.mLTail = "topLeftSerifed"

[prime.m.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.m = "serifed"
selectorAffix."m/tailless" = "serifed"
selectorAffix."m/sansSerif" = "serifless"
selectorAffix."cyrl/te.italic" = "serifed"
selectorAffix.mLTail = "serifed"



[prime.n]
sampler = "n"
tag = "cv39"

[prime.n.variants-buildup]
entry = "body"
descriptionLeader = "`n`"

[prime.n.variants-buildup.stages.body."*"]
next = "terminal"

[prime.n.variants-buildup.stages.body.normal]
rank = 1
keyAffix = ""
selectorAffix.n = ""
selectorAffix."n/sansSerif" = ""
selectorAffix."n/descBase" = ""
selectorAffix.eng = ""
selectorAffix."eng/phoneticRight" = ""
selectorAffix."cyrl/pe.italic" = ""
selectorAffix."cyrl/peItalicDescBase" = ""

[prime.n.variants-buildup.stages.body.earless-corner]
rank = 2
descriptionAffix = "earless (corner top-left) body shape"
selectorAffix.n = "earlessCorner"
selectorAffix."n/sansSerif" = "earlessCorner"
selectorAffix."n/descBase" = "earlessCorner"
selectorAffix.eng = "earlessCorner"
selectorAffix."eng/phoneticRight" = "earlessCornerHTB"
selectorAffix."cyrl/pe.italic" = ""
selectorAffix."cyrl/peItalicDescBase" = ""

[prime.n.variants-buildup.stages.body.earless-rounded]
rank = 3
descriptionAffix = "earless (rounded top-left) body shape"
selectorAffix.n = "earlessRounded"
selectorAffix."n/sansSerif" = "earlessRounded"
selectorAffix."n/descBase" = "earlessRounded"
selectorAffix.eng = "earlessRounded"
selectorAffix."eng/phoneticRight" = "earlessRoundedHTB"
selectorAffix."cyrl/pe.italic" = ""
selectorAffix."cyrl/peItalicDescBase" = ""

[prime.n.variants-buildup.stages.terminal."*"]
next = "serifs"

[prime.n.variants-buildup.stages.terminal.straight]
rank = 1
descriptionAffix = "straight terminal"
selectorAffix.n = "straight"
selectorAffix."n/sansSerif" = "straight"
selectorAffix."n/descBase" = "straight"
selectorAffix.eng = "straight"
selectorAffix."eng/phoneticRight" = "straight"
selectorAffix."cyrl/pe.italic" = "straight"
selectorAffix."cyrl/peItalicDescBase" = "straight"

[prime.n.variants-buildup.stages.terminal.tailed]
rank = 2
descriptionAffix = "tailed terminal"
selectorAffix.n = "tailed"
selectorAffix."n/sansSerif" = "tailed"
selectorAffix."n/descBase" = "straight"
selectorAffix.eng = "straight"
selectorAffix."eng/phoneticRight" = "straight"
selectorAffix."cyrl/pe.italic" = "tailed"
selectorAffix."cyrl/peItalicDescBase" = "straight"

[prime.n.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix.n = "serifless"
selectorAffix."n/sansSerif" = "serifless"
selectorAffix."n/descBase" = "serifless"
selectorAffix.eng = "serifless"
selectorAffix."eng/phoneticRight" = "serifless"
selectorAffix."cyrl/pe.italic" = "serifless"
selectorAffix."cyrl/peItalicDescBase" = "serifless"

[prime.n.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serif at top left"
enableIf = [ { body = "normal" } ]
selectorAffix.n = "topLeftSerifed"
selectorAffix."n/sansSerif" = "serifless"
selectorAffix."n/descBase" = "topLeftSerifed"
selectorAffix.eng = "topLeftSerifed"
selectorAffix."eng/phoneticRight" = "topLeftSerifed"
selectorAffix."cyrl/pe.italic" = "topLeftSerifed"
selectorAffix."cyrl/peItalicDescBase" = "motionSerifed"

[prime.n.variants-buildup.stages.serifs.motion-serifed]
rank = 3
descriptionAffix = "serif at top left and bottom right"
enableIf = [ { body = "normal" } ]
selectorAffix.n = "motionSerifed"
selectorAffix."n/sansSerif" = "serifless"
selectorAffix."n/descBase" = "topLeftSerifed"
selectorAffix.eng = "topLeftSerifed"
selectorAffix."eng/phoneticRight" = "topLeftSerifed"
selectorAffix."cyrl/pe.italic" = "motionSerifed"
selectorAffix."cyrl/peItalicDescBase" = "motionSerifed"

[prime.n.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.n = "serifed"
selectorAffix."n/sansSerif" = "serifless"
selectorAffix."n/descBase" = "serifed"
selectorAffix.eng = "serifed"
selectorAffix."eng/phoneticRight" = "serifed"
selectorAffix."cyrl/pe.italic" = "serifed"
selectorAffix."cyrl/peItalicDescBase" = "serifed"



[prime.p]
sampler = "p"
tag = "cv40"

[prime.p.variants-buildup]
entry = "body"
descriptionLeader = "`p`"

[prime.p.variants-buildup.stages.body."*"]
next = "serifs"

[prime.p.variants-buildup.stages.body.eared]
rank = 1
descriptionAffix = "eared shape"
selectorAffix.p = "eared"
selectorAffix."p/sansSerif" = "eared"
selectorAffix."p/hookTopBase" = "eared"

[prime.p.variants-buildup.stages.body.earless-corner]
rank = 2
descriptionAffix = "earless (cornered) shape"
selectorAffix.p = "earlessCorner"
selectorAffix."p/sansSerif" = "earlessCorner"
selectorAffix."p/hookTopBase" = "earlessCorner"

[prime.p.variants-buildup.stages.body.earless-rounded]
rank = 3
descriptionAffix = "earless (rounded) shape"
selectorAffix.p = "earlessRounded"
selectorAffix."p/sansSerif" = "earlessRounded"
selectorAffix."p/hookTopBase" = "earlessRounded"

[prime.p.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.p = "serifless"
selectorAffix."p/sansSerif" = "serifless"
selectorAffix."p/hookTopBase" = "serifless"

[prime.p.variants-buildup.stages.serifs.motion-serifed]
rank = 2
enableIf = [{ body = "eared" }]
descriptionAffix = "motion serifs"
selectorAffix.p = "motionSerifed"
selectorAffix."p/sansSerif" = "serifless"
selectorAffix."p/hookTopBase" = "serifless"

[prime.p.variants-buildup.stages.serifs.serifed__eared]
rank = 3
enableIf = [{ body = "eared" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.p = "serifed"
selectorAffix."p/sansSerif" = "serifless"
selectorAffix."p/hookTopBase" = "bottomSerifed"

[prime.p.variants-buildup.stages.serifs.serifed__earless]
rank = 3
enableIf = [{ body = "NOT eared" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.p = "bottomSerifed"
selectorAffix."p/sansSerif" = "serifless"
selectorAffix."p/hookTopBase" = "bottomSerifed"



[prime.q]
sampler = "q"
tag = "cv41"

[prime.q.variants-buildup]
entry = "body"
descriptionLeader = "`q`"

[prime.q.variants-buildup.stages.body."*"]
next = "terminal"

[prime.q.variants-buildup.stages.body.eared]
rank = 1
keyAffix = ""
selectorAffix.q = ""
selectorAffix."q/sansSerif" = ""
selectorAffix."q/hookTopBase" = ""
selectorAffix.qRTail = ""

[prime.q.variants-buildup.stages.body.earless-corner]
rank = 2
descriptionAffix = "earless (cornered) shape"
selectorAffix.q = "earlessCorner"
selectorAffix."q/sansSerif" = "earlessCorner"
selectorAffix."q/hookTopBase" = "earlessCorner"
selectorAffix.qRTail = "earlessCorner"

[prime.q.variants-buildup.stages.body.earless-rounded]
rank = 3
descriptionAffix = "earless (rounded) shape"
selectorAffix.q = "earlessRounded"
selectorAffix."q/sansSerif" = "earlessRounded"
selectorAffix."q/hookTopBase" = "earlessRounded"
selectorAffix.qRTail = "earlessRounded"

[prime.q.variants-buildup.stages.terminal."*"]
next = "serifs"

[prime.q.variants-buildup.stages.terminal.straight]
rank = 1
descriptionAffix = "straight terminal"
selectorAffix.q = "straight"
selectorAffix."q/sansSerif" = "straight"
selectorAffix."q/hookTopBase" = "straight"
selectorAffix.qRTail = "straight"

[prime.q.variants-buildup.stages.terminal.tailed]
rank = 2
descriptionAffix = "tailed terminal"
selectorAffix.q = "tailed"
selectorAffix."q/sansSerif" = "tailed"
selectorAffix."q/hookTopBase" = "tailed"
selectorAffix.qRTail = "straight"

[prime.q.variants-buildup.stages.terminal.diagonal-tailed]
rank = 2
descriptionAffix = "diagonally tailed terminal"
selectorAffix.q = "diagonalTailed"
selectorAffix."q/sansSerif" = "diagonalTailed"
selectorAffix."q/hookTopBase" = "diagonalTailed"
selectorAffix.qRTail = "straight"

[prime.q.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.q = "serifless"
selectorAffix."q/sansSerif" = "serifless"
selectorAffix."q/hookTopBase" = "serifless"
selectorAffix.qRTail = "serifless"

[prime.q.variants-buildup.stages.serifs.motion-serifed]
rank = 2
enableIf = [{ body = "eared" }]
descriptionAffix = "motion serifs"
selectorAffix.q = "motionSerifed"
selectorAffix."q/sansSerif" = "serifless"
selectorAffix."q/hookTopBase" = "serifless"
selectorAffix.qRTail = "motionSerifed"

[prime.q.variants-buildup.stages.serifs.serifed__eared]
rank = 3
enableIf = [{ body = "eared", terminal = "straight" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.q = "serifed"
selectorAffix."q/sansSerif" = "serifless"
selectorAffix."q/hookTopBase" = "bottomSerifed"
selectorAffix.qRTail = "motionSerifed"

[prime.q.variants-buildup.stages.serifs.serifed__eareless]
rank = 3
enableIf = [{ body = "NOT eared", terminal = "straight" }]
keyAffix = "serifed"
descriptionAffix = "serifs"
selectorAffix.q = "bottomSerifed"
selectorAffix."q/sansSerif" = "serifless"
selectorAffix."q/hookTopBase" = "bottomSerifed"
selectorAffix.qRTail = "serifless"



[prime.r]
sampler = "r"
tag = "cv42"

[prime.r.variants-buildup]
entry = "body"
descriptionLeader = "`r`"

[prime.r.variants-buildup.stages.body."*"]
next = "serifs"

[prime.r.variants-buildup.stages.body.normal]
rank = 1
keyAffix = ""
descriptionAffix = "normal body shape"
selectorAffix.r = ""
selectorAffix."r/sansSerif" = ""
selectorAffix.rRTail = ""
selectorAffix."rTurnRTail" = ""
selectorAffix."rFlap" = "earlessRounded"

[prime.r.variants-buildup.stages.body.earless-corner]
rank = 2
groupRank = 2
descriptionAffix = "earless (corner top-left) body shape"
selectorAffix.r = "earlessCorner"
selectorAffix."r/sansSerif" = "earlessCorner"
selectorAffix.rRTail = "earlessCorner"
selectorAffix."rTurnRTail" = ""
selectorAffix."rFlap" = "earlessCorner"

[prime.r.variants-buildup.stages.body.earless-rounded]
rank = 3
groupRank = 2
descriptionAffix = "earless (rounded top-left) body shape"
selectorAffix.r = "earlessRounded"
selectorAffix."r/sansSerif" = "earlessRounded"
selectorAffix.rRTail = "earlessRounded"
selectorAffix."rTurnRTail" = ""
selectorAffix."rFlap" = "earlessRounded"

[prime.r.variants-buildup.stages.body.hookless]
rank = 4
descriptionAffix = "hookless body shape"
selectorAffix.r = "hookless"
selectorAffix."r/sansSerif" = "hookless"
selectorAffix.rRTail = "hookless"
selectorAffix."rTurnRTail" = "hookless"
selectorAffix."rFlap" = "hooklessFlap"

[prime.r.variants-buildup.stages.body.corner-hooked]
rank = 5
descriptionAffix = "corner-hooked body shape"
selectorAffix.r = "cornerHooked"
selectorAffix."r/sansSerif" = "hookless"
selectorAffix.rRTail = "cornerHooked"
selectorAffix."rTurnRTail" = "cornerHooked"
selectorAffix."rFlap" = "hooklessFlap"

[prime.r.variants-buildup.stages.body.compact]
rank = 6
descriptionAffix = "compact body shape (identical to 'hookless' for monospace fonts)"
selectorAffix.r = "compact"
selectorAffix."r/sansSerif" = "compact"
selectorAffix.rRTail = "compact"
selectorAffix."rTurnRTail" = "compact"
selectorAffix."rFlap" = "compactFlap"

[prime.r.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix.r = "serifless"
selectorAffix."r/sansSerif" = "serifless"
selectorAffix.rRTail = "serifless"
selectorAffix."rTurnRTail" = "serifless"
selectorAffix."rFlap" = "serifless"

[prime.r.variants-buildup.stages.serifs.top-serifed]
rank = 2
disableIf = [ { body = "earless-corner" }, { body = "earless-rounded" } ]
descriptionAffix = "serif at top"
selectorAffix.r = "topSerifed"
selectorAffix."r/sansSerif" = "serifless"
selectorAffix.rRTail = "topSerifed"
selectorAffix."rTurnRTail" = "serifless"
selectorAffix."rFlap" = "serifless"

[prime.r.variants-buildup.stages.serifs.base-serifed]
rank = 3
disableIf = [ { body = "earless-corner" }, { body = "earless-rounded" } ]
descriptionAffix = "serif at bottom"
selectorAffix.r = "baseSerifed"
selectorAffix."r/sansSerif" = "serifless"
selectorAffix.rRTail = "serifless"
selectorAffix."rTurnRTail" = "serifed"
selectorAffix."rFlap" = "serifed"

[prime.r.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.r = "serifed"
selectorAffix."r/sansSerif" = "serifless"
selectorAffix.rRTail = {if =  [{body="earless-corner"}, {body="earless-rounded"}], then = "serifless", else = "topSerifed"}
selectorAffix."rTurnRTail" = "serifed"
selectorAffix."rFlap" = "serifed"



[prime.s]
sampler = "s"
tag = "cv43"

[prime.s.variants.serifless]
rank = 1
description = "Serifless `s`"
selector.s = "serifless"
selector."s/sansSerif" = "serifless"
selector."s/phoneticRight" = "serifless"
selector."tsLig/lowerHalf" = "serifless"
selector."s/ascBase" = "unilateralSerifed"
selector.sSwash = "serifless"
selector.sRTail = "bottomSerifed"

[prime.s.variants.unilateral-serifed]
rank = 2
description = "`s` with single serif at top"
selector.s = "unilateralSerifed"
selector."s/sansSerif" = "serifless"
selector."s/phoneticRight" = "unilateralSerifed"
selector."tsLig/lowerHalf" = "serifless"
selector."s/ascBase" = "unilateralSerifed"
selector.sSwash = "unilateralSerifed"
selector.sRTail = "bilateralSerifed"

[prime.s.variants.bilateral-serifed]
rank = 3
description = "`s` with serifs at both end"
selector.s = "bilateralSerifed"
selector."s/sansSerif" = "serifless"
selector."s/phoneticRight" = "unilateralSerifed"
selector."tsLig/lowerHalf" = "bilateralSerifed"
selector."s/ascBase" = "bilateralSerifed"
selector.sSwash = "unilateralSerifed"
selector.sRTail = "bilateralSerifed"

[prime.s.variants.unilateral-inward-serifed]
rank = 4
description = "`s` with single inward serif at top"
selector.s = "unilateralInwardSerifed"
selector."s/sansSerif" = "serifless"
selector."s/phoneticRight" = "unilateralInwardSerifed"
selector."tsLig/lowerHalf" = "serifless"
selector."s/ascBase" = "unilateralInwardSerifed"
selector.sSwash = "unilateralInwardSerifed"
selector.sRTail = "hybridSerifed1"

[prime.s.variants.bilateral-inward-serifed]
rank = 5
description = "`s` with inward serifs at both end"
selector.s = "bilateralInwardSerifed"
selector."s/sansSerif" = "serifless"
selector."s/phoneticRight" = "unilateralInwardSerifed"
selector."tsLig/lowerHalf" = "bilateralInwardSerifed"
selector."s/ascBase" = "bilateralInwardSerifed"
selector.sSwash = "unilateralInwardSerifed"
selector.sRTail = "bilateralInwardSerifed"



[prime.t]
sampler = "t"
tag = "cv44"

[prime.t.variants-buildup]
entry = "height"
descriptionLeader = "`t`"

[prime.t.variants-buildup.stages.body."*"]
mode = "prepend"

[prime.t.variants-buildup.stages.height."*"]
next = "body"

[prime.t.variants-buildup.stages.body.standard]
rank = 1
descriptionAffix = "standard body shape"
selectorAffix.t = "standard"
selectorAffix."t/phoneticLeft1" = "flatHook"
selectorAffix."t/phoneticLeft2" = "flatHook"
selectorAffix."t/phoneticLeft3" = "standard"
selectorAffix.tHookTop = "standard"
selectorAffix.tHookTopRTail = "flatHook"
selectorAffix.tRTail = "flatHook"
selectorAffix.tLTail = "standard"
selectorAffix.tCurlyTail = "standard"
selectorAffix."tsLig/upperHalf" = "standard"

[prime.t.variants-buildup.stages.body.flat-hook]
rank = 2
descriptionAffix = "body with flat hook"
selectorAffix.t = "flatHook"
selectorAffix."t/phoneticLeft1" = "flatHook"
selectorAffix."t/phoneticLeft2" = "flatHook"
selectorAffix."t/phoneticLeft3" = "flatHook"
selectorAffix.tHookTop = "flatHook"
selectorAffix.tHookTopRTail = "flatHook"
selectorAffix.tRTail = "flatHook"
selectorAffix.tLTail = "flatHook"
selectorAffix.tCurlyTail = "flatHook"
selectorAffix."tsLig/upperHalf" = "standard"

[prime.t.variants-buildup.stages.body.diagonal-tailed]
rank = 3
descriptionAffix = "body with diagonal tail"
selectorAffix.t = "diagonalTailed"
selectorAffix."t/phoneticLeft1" = "flatHook"
selectorAffix."t/phoneticLeft2" = "flatHook"
selectorAffix."t/phoneticLeft3" = "diagonalTailed"
selectorAffix.tHookTop = "diagonalTailed"
selectorAffix.tHookTopRTail = "flatHook"
selectorAffix.tRTail = "flatHook"
selectorAffix.tLTail = "diagonalTailed"
selectorAffix.tCurlyTail = "standard"
selectorAffix."tsLig/upperHalf" = "standard"

[prime.t.variants-buildup.stages.body.cross]
rank = 4
descriptionAffix = "Futura-like body shape"
selectorAffix.t = "cross"
selectorAffix."t/phoneticLeft1" = "cross"
selectorAffix."t/phoneticLeft2" = "cross"
selectorAffix."t/phoneticLeft3" = "cross"
selectorAffix.tHookTop = "cross"
selectorAffix.tHookTopRTail = "cross"
selectorAffix.tRTail = "cross"
selectorAffix.tLTail = "cross"
selectorAffix.tCurlyTail = "cross"
selectorAffix."tsLig/upperHalf" = "standard"

[prime.t.variants-buildup.stages.body.hookless-asymmetric]
rank = 5
descriptionAffix = "hookless asymmetric body shape (only half the cross bar)"
selectorAffix.t = "hooklessAsymmetric"
selectorAffix."t/phoneticLeft1" = "hooklessAsymmetric"
selectorAffix."t/phoneticLeft2" = "hooklessAsymmetric"
selectorAffix."t/phoneticLeft3" = "hooklessAsymmetric"
selectorAffix.tHookTop = "hooklessAsymmetric"
selectorAffix.tHookTopRTail = "hooklessAsymmetric"
selectorAffix.tRTail = "hooklessAsymmetric"
selectorAffix.tLTail = "hooklessAsymmetric"
selectorAffix.tCurlyTail = "hooklessAsymmetric"
selectorAffix."tsLig/upperHalf" = "standard"

[prime.t.variants-buildup.stages.height.full]
rank = 1
keyAffix = ""
selectorAffix.t = ""
selectorAffix."t/phoneticLeft1" = ""
selectorAffix."t/phoneticLeft2" = ""
selectorAffix."t/phoneticLeft3" = ""
selectorAffix.tHookTop = ""
selectorAffix.tHookTopRTail = ""
selectorAffix.tRTail = ""
selectorAffix.tLTail = ""
selectorAffix.tCurlyTail = ""
selectorAffix."tsLig/upperHalf" = ""

[prime.t.variants-buildup.stages.height.short-neck]
rank = 2
descriptionAffix = "a shorter neck"
selectorAffix.t = "shortNeck"
selectorAffix."t/phoneticLeft1" = "shortNeck"
selectorAffix."t/phoneticLeft2" = "shortNeck"
selectorAffix."t/phoneticLeft3" = ""
selectorAffix.tHookTop = ""
selectorAffix.tHookTopRTail = ""
selectorAffix.tRTail = "shortNeck"
selectorAffix.tLTail = "shortNeck"
selectorAffix.tCurlyTail = "shortNeck"
selectorAffix."tsLig/upperHalf" = "shortNeck"

[prime.t.variants-buildup.stages.height.short-neck2]
rank = 3
descriptionAffix = "a more shorter neck"
selectorAffix.t = "shortNeck2"
selectorAffix."t/phoneticLeft1" = "shortNeck2"
selectorAffix."t/phoneticLeft2" = "shortNeck2"
selectorAffix."t/phoneticLeft3" = ""
selectorAffix.tHookTop = ""
selectorAffix.tHookTopRTail = ""
selectorAffix.tRTail = "shortNeck2"
selectorAffix.tLTail = "shortNeck2"
selectorAffix.tCurlyTail = "shortNeck2"
selectorAffix."tsLig/upperHalf" = "shortNeck2"



[prime.u]
sampler = "u"
tag = "cv45"

[prime.u.variants-buildup]
entry = "body"
descriptionLeader = "`u`"

[prime.u.variants-buildup.stages.body."*"]
next = "serifs"

[prime.u.variants-buildup.stages.body.toothed]
rank = 1
descriptionAffix = "toothed shape"
selectorAffix.u = "toothed"
selectorAffix."u/sansSerif" = "toothed"
selectorAffix."u/uRTailBase" = "urtBase"
selectorAffix."cyrl/i.italic" = "toothed"
selectorAffix."cyrl/sha.italic" = "toothed"
selectorAffix."cyrl/shcha.italic" = "toothed"
selectorAffix."cyrl/i.italic.reduced" = "toothed"
selectorAffix."cyrl/dzhe.italic" = "toothed"
selectorAffix."cyrl/tse.italic" = "toothed"
selectorAffix."ue/u" = ""

[prime.u.variants-buildup.stages.body.tailed]
rank = 2
descriptionAffix = "tailed shape"
selectorAffix.u = "tailed"
selectorAffix."u/sansSerif" = "tailed"
selectorAffix."u/uRTailBase" = "urtBase"
selectorAffix."cyrl/i.italic" = "tailed"
selectorAffix."cyrl/sha.italic" = "tailed"
selectorAffix."cyrl/shcha.italic" = "toothed"
selectorAffix."cyrl/i.italic.reduced" = "toothed"
selectorAffix."cyrl/dzhe.italic" = "tailed"
selectorAffix."cyrl/tse.italic" = "toothed"
selectorAffix."ue/u" = ""

[prime.u.variants-buildup.stages.body.toothless-corner]
rank = 3
descriptionAffix = "toothless (corner bottom-right) shape"
selectorAffix.u = "toothlessCorner"
selectorAffix."u/sansSerif" = "toothlessCorner"
selectorAffix."u/uRTailBase" = "urtBase"
selectorAffix."cyrl/i.italic" = "toothed"
selectorAffix."cyrl/sha.italic" = "toothed"
selectorAffix."cyrl/shcha.italic" = "toothed"
selectorAffix."cyrl/i.italic.reduced" = "toothed"
selectorAffix."cyrl/dzhe.italic" = "toothed"
selectorAffix."cyrl/tse.italic" = "toothed"
selectorAffix."ue/u" = ""

[prime.u.variants-buildup.stages.body.toothless-rounded]
rank = 4
descriptionAffix = "toothless (rounded) shape"
selectorAffix.u = "toothlessRounded"
selectorAffix."u/sansSerif" = "toothlessRounded"
selectorAffix."u/uRTailBase" = "urtBase"
selectorAffix."cyrl/i.italic" = "toothed"
selectorAffix."cyrl/sha.italic" = "toothed"
selectorAffix."cyrl/shcha.italic" = "toothed"
selectorAffix."cyrl/i.italic.reduced" = "toothed"
selectorAffix."cyrl/dzhe.italic" = "toothed"
selectorAffix."cyrl/tse.italic" = "toothed"
selectorAffix."ue/u" = ""

[prime.u.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.u = "serifless"
selectorAffix."u/sansSerif" = "serifless"
selectorAffix."u/uRTailBase" = "serifless"
selectorAffix."cyrl/i.italic" = "serifless"
selectorAffix."cyrl/sha.italic" = "serifless"
selectorAffix."cyrl/shcha.italic" = "serifless"
selectorAffix."cyrl/i.italic.reduced" = "serifless"
selectorAffix."cyrl/dzhe.italic" = "serifless"
selectorAffix."cyrl/tse.italic" = "serifless"
selectorAffix."ue/u" = "serifless"

[prime.u.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs at top-left and bottom-right"
selectorAffix.u = "motionSerifed"
selectorAffix."u/sansSerif" = "serifless"
selectorAffix."u/uRTailBase" = "motionSerifed"
selectorAffix."cyrl/i.italic" = "motionSerifed"
selectorAffix."cyrl/sha.italic" = "motionSerifed"
selectorAffix."cyrl/shcha.italic" = "motionSerifed"
selectorAffix."cyrl/i.italic.reduced" = "motionSerifed"
selectorAffix."cyrl/dzhe.italic" = "motionSerifed"
selectorAffix."cyrl/tse.italic" = "motionSerifed"
selectorAffix."ue/u" = "serifed"

[prime.u.variants-buildup.stages.serifs.bottom-right-serifed]
rank = 3
disableIf = [{ body = "NOT toothed" }]
descriptionAffix = "motion serifs at left side"
selectorAffix.u = "bottomRightSerifed"
selectorAffix."u/sansSerif" = "serifless"
selectorAffix."u/uRTailBase" = "serifless"
selectorAffix."cyrl/i.italic" = "bottomRightSerifed"
selectorAffix."cyrl/sha.italic" = "bottomRightSerifed"
selectorAffix."cyrl/shcha.italic" = "serifless"
selectorAffix."cyrl/i.italic.reduced" = "serifless"
selectorAffix."cyrl/dzhe.italic" = "bottomRightSerifed"
selectorAffix."cyrl/tse.italic" = "serifless"
selectorAffix."ue/u" = "serifless"

[prime.u.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix.u = "serifed"
selectorAffix."u/sansSerif" = "serifless"
selectorAffix."u/uRTailBase" = "serifed"
selectorAffix."cyrl/i.italic" = "serifed"
selectorAffix."cyrl/sha.italic" = "serifed"
selectorAffix."cyrl/shcha.italic" = "serifed"
selectorAffix."cyrl/i.italic.reduced" = "serifed"
selectorAffix."cyrl/dzhe.italic" = "serifed"
selectorAffix."cyrl/tse.italic" = "serifed"
selectorAffix."ue/u" = "serifed"



[prime.v]
sampler = "v"
tag = "cv46"

[prime.v.variants-buildup]
entry = "body"
descriptionLeader = "`v`"

[prime.v.variants-buildup.stages.body."*"]
next = "serifs"

[prime.v.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight body"
selectorAffix.v = "straight"
selectorAffix."v/sansSerif" = "straight"
selectorAffix."v/nonCursive" = "straight"

[prime.v.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly body"
selectorAffix.v = "curly"
selectorAffix."v/sansSerif" = "curly"
selectorAffix."v/nonCursive" = "curly"

[prime.v.variants-buildup.stages.body.cursive]
rank = 3
descriptionAffix = "cursive body"
selectorAffix.v = "cursive"
selectorAffix."v/sansSerif" = "cursive"
selectorAffix."v/nonCursive" = "straight"

[prime.v.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.v = "serifless"
selectorAffix."v/sansSerif" = "serifless"
selectorAffix."v/nonCursive" = "serifless"

[prime.v.variants-buildup.stages.serifs.motion-serifed]
rank = 2
disableIf = [{ body = "cursive" }]
descriptionAffix = "motion serifs"
selectorAffix.v = "motionSerifed"
selectorAffix."v/sansSerif" = "serifless"
selectorAffix."v/nonCursive" = "motionSerifed"

[prime.v.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.v = "serifed"
selectorAffix."v/sansSerif" = "serifless"
selectorAffix."v/nonCursive" = "serifed"



[prime.w]
sampler = "w"
tag = "cv47"

[prime.w.variants-buildup]
entry = "body"
descriptionLeader = "`w`"

[prime.w.variants-buildup.stages.body."*"]
next = "serifs"

[prime.w.variants-buildup.stages.body.straight]
rank = 1
groupRank = 1
descriptionAffix = "standard, straight body"
selectorAffix.w = "straight"
selectorAffix."w/sansSerif" = "straight"
selectorAffix.wHookTop = "straight"

[prime.w.variants-buildup.stages.body.curly]
rank = 2
groupRank = 1
descriptionAffix = "curly body"
selectorAffix.w = "curly"
selectorAffix."w/sansSerif" = "curly"
selectorAffix.wHookTop = "curly"

[prime.w.variants-buildup.stages.body.straight-vertical-sides]
rank = 3
groupRank = 1
descriptionAffix = "body shape with vertical sides"
selectorAffix.w = "straightVerticalSides"
selectorAffix."w/sansSerif" = "straightVerticalSides"
selectorAffix.wHookTop = "straightVerticalSides"

[prime.w.variants-buildup.stages.body.straight-flat-top]
rank = 4
groupRank = 2
descriptionAffix = "straight body shape that the middle is forced to be aligned the top"
selectorAffix.w = "straightFlatTop"
selectorAffix."w/sansSerif" = "straightFlatTop"
selectorAffix.wHookTop = "straightFlatTop"

[prime.w.variants-buildup.stages.body.straight-double-v]
rank = 5
groupRank = 2
descriptionAffix = "body shape like double V"
selectorAffix.w = "straightDoubleV"
selectorAffix."w/sansSerif" = "straightDoubleV"
selectorAffix.wHookTop = "straightDoubleV"

[prime.w.variants-buildup.stages.body.straight-asymmetric]
rank = 6
groupRank = 2
descriptionAffix = "asymmetric shape"
selectorAffix.w = "straightAsymmetric"
selectorAffix."w/sansSerif" = "straightAsymmetric"
selectorAffix.wHookTop = "straightAsymmetric"

[prime.w.variants-buildup.stages.body.cursive]
rank = 7
groupRank = 3
descriptionAffix = "cursive shape"
selectorAffix.w = "cursive"
selectorAffix."w/sansSerif" = "cursive"
selectorAffix.wHookTop = "cursive"

[prime.w.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.w = "serifless"
selectorAffix."w/sansSerif" = "serifless"
selectorAffix.wHookTop = "serifless"

[prime.w.variants-buildup.stages.serifs.motion-serifed]
rank = 2
disableIf = [{ body = "cursive" }]
descriptionAffix = "motion serifs"
selectorAffix.w = "motionSerifed"
selectorAffix."w/sansSerif" = "serifless"
selectorAffix.wHookTop = "motionSerifed"

[prime.w.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.w = "serifed"
selectorAffix."w/sansSerif" = "serifless"
selectorAffix.wHookTop = "serifed"



[prime.x]
sampler = "x"
tag = "cv48"

[prime.x.variants-buildup]
entry = "body"
descriptionLeader = "`x`"

[prime.x.variants-buildup.stages.body."*"]
next = "serifs"

[prime.x.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.x = "straight"
selectorAffix."x/sansSerif" = "straight"
selectorAffix."grek/chi" = "straight"
selectorAffix."cyrl/ha" = "straight"

[prime.x.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.x = "curly"
selectorAffix."x/sansSerif" = "curly"
selectorAffix."grek/chi" = "curly"
selectorAffix."cyrl/ha" = "curly"

[prime.x.variants-buildup.stages.body.cursive]
rank = 3
next = "END"
descriptionAffix = "cursive shape"
selectorAffix.x = "cursive"
selectorAffix."x/sansSerif" = "cursive"
selectorAffix."grek/chi" = "curlySerifless"
selectorAffix."cyrl/ha" = "cursive"

[prime.x.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.x = "serifless"
selectorAffix."x/sansSerif" = "serifless"
selectorAffix."grek/chi" = "serifless"
selectorAffix."cyrl/ha" = "serifless"

[prime.x.variants-buildup.stages.serifs.motion-serifed]
rank = 2
disableIf = [{ body = "cursive" }]
descriptionAffix = "motion serifs"
selectorAffix.x = "motionSerifed"
selectorAffix."x/sansSerif" = "serifless"
selectorAffix."grek/chi" = "motionSerifed"
selectorAffix."cyrl/ha" = "motionSerifed"

[prime.x.variants-buildup.stages.serifs.serifed]
rank = 3
disableIf = [{ body = "cursive" }]
descriptionAffix = "serifs"
selectorAffix.x = "serifed"
selectorAffix."x/sansSerif" = "serifless"
selectorAffix."grek/chi" = "bilateralMotionSerifed"
selectorAffix."cyrl/ha" = "serifed"



[prime.y]
sampler = "y"
tag = "cv49"

[prime.y.variants-buildup]
entry = "body"
descriptionLeader = "`y`"

[prime.y.variants-buildup.stages.body."*"]
next = "hook"

[prime.y.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix.y = "straight"
selectorAffix.yLoop = "straightLoop"
selectorAffix."y/sansSerif" = "straight"
selectorAffix."y/nonCursive" = "straight"

[prime.y.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix.y = "curly"
selectorAffix.yLoop = "curlyLoop"
selectorAffix."y/sansSerif" = "curly"
selectorAffix."y/nonCursive" = "curly"

[prime.y.variants-buildup.stages.body.cursive]
rank = 3
descriptionAffix = "cursive shape"
selectorAffix.y = "cursive"
selectorAffix.yLoop = "straightLoop"
selectorAffix."y/sansSerif" = "cursive"
selectorAffix."y/nonCursive" = "straight"

[prime.y.variants-buildup.stages.hook."*"]
next = "serifs"

[prime.y.variants-buildup.stages.hook.standard]
rank = 1
keyAffix = ""
selectorAffix.y = ""
selectorAffix.yLoop = ""
selectorAffix."y/sansSerif" = ""
selectorAffix."y/nonCursive" = ""

[prime.y.variants-buildup.stages.hook.turn]
rank = 2
disableIf = [{ body = "cursive" }]
descriptionAffix = "a tail turns leftward"
selectorAffix.y = "turn"
selectorAffix.yLoop = ""
selectorAffix."y/sansSerif" = ""
selectorAffix."y/nonCursive" = "turn"

[prime.y.variants-buildup.stages.hook.flat-hook]
rank = 3
disableIf = [{ body = "NOT cursive" }]
descriptionAffix = "a flat terminal hook"
selectorAffix.y = "flatHook"
selectorAffix.yLoop = ""
selectorAffix."y/sansSerif" = "flatHook"
selectorAffix."y/nonCursive" = ""

[prime.y.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.y = "serifless"
selectorAffix.yLoop = "serifless"
selectorAffix."y/sansSerif" = "serifless"
selectorAffix."y/nonCursive" = "serifless"

[prime.y.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix.y = "motionSerifed"
selectorAffix.yLoop = "motionSerifed"
selectorAffix."y/sansSerif" = "serifless"
selectorAffix."y/nonCursive" = "motionSerifed"

[prime.y.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix.y = "serifed"
selectorAffix.yLoop = "serifed"
selectorAffix."y/sansSerif" = "serifless"
selectorAffix."y/nonCursive" = "serifed"



[prime.z]
sampler = "z"
tag = "cv50"

[prime.z.variants-buildup]
entry = "body"
descriptionLeader = "`z`"

[prime.z.variants-buildup.stages.body."*"]
next = "serifs"

[prime.z.variants-buildup.stages.body.straight]
rank = 1
groupRank = 10
descriptionAffix = "straight body shape"
selectorAffix.z = "straight"
selectorAffix."z/sansSerif" = "straight"
selectorAffix."z/reduced" = "straight"
selectorAffix.zDesc = "straight"
selectorAffix."zDesc/reduced" = "straight"

[prime.z.variants-buildup.stages.body.curly]
rank = 2
groupRank = 20
descriptionAffix = "curly body shape"
selectorAffix.z = "curly"
selectorAffix."z/sansSerif" = "curly"
selectorAffix."z/reduced" = "curly"
selectorAffix.zDesc = "curly"
selectorAffix."zDesc/reduced" = "curly"

[prime.z.variants-buildup.stages.body.cursive]
rank = 3
groupRank = 30
next = "overlay"
descriptionAffix = "cursive body shape"
selectorAffix.z = "cursive"
selectorAffix."z/sansSerif" = "cursive"
selectorAffix."z/reduced" = "cursive"
selectorAffix.zDesc = "cursive"
selectorAffix."zDesc/reduced" = "cursive"

[prime.z.variants-buildup.stages.serifs."*"]
next = "overlay"

[prime.z.variants-buildup.stages.serifs.serifless]
rank = 1
groupRank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix.z = "serifless"
selectorAffix."z/sansSerif" = "serifless"
selectorAffix."z/reduced" = "serifless"
selectorAffix.zDesc = "serifless"
selectorAffix."zDesc/reduced" = "serifless"

[prime.z.variants-buildup.stages.serifs.serifed]
rank = 2
groupRank = 1
descriptionAffix = "serifs"
selectorAffix.z = "serifed"
selectorAffix."z/sansSerif" = "serifless"
selectorAffix."z/reduced" = "serifed"
selectorAffix.zDesc = "topSerifed"
selectorAffix."zDesc/reduced" = "topSerifed"

[prime.z.variants-buildup.stages.serifs.bottom-serifed]
rank = 3
groupRank = 2
descriptionAffix = "serifs at bottom"
selectorAffix.z = "bottomSerifed"
selectorAffix."z/sansSerif" = "serifless"
selectorAffix."z/reduced" = "bottomSerifed"
selectorAffix.zDesc = "serifless"
selectorAffix."zDesc/reduced" = "serifless"

[prime.z.variants-buildup.stages.serifs.top-serifed]
rank = 4
groupRank = 2
descriptionAffix = "serifs at top"
selectorAffix.z = "topSerifed"
selectorAffix."z/sansSerif" = "serifless"
selectorAffix."z/reduced" = "topSerifed"
selectorAffix.zDesc = "topSerifed"
selectorAffix."zDesc/reduced" = "topSerifed"

[prime.z.variants-buildup.stages.overlay.no-overlay]
rank = 1
keyAffix = ""
selectorAffix.z = ""
selectorAffix."z/sansSerif" = ""
selectorAffix."z/reduced" = ""
selectorAffix.zDesc = ""
selectorAffix."zDesc/reduced" = ""

[prime.z.variants-buildup.stages.overlay.with-crossbar]
rank = 2
descriptionAffix = "a diagonal crossbar"
selectorAffix.z = "withCrossBar"
selectorAffix."z/sansSerif" = "withCrossBar"
selectorAffix."z/reduced" = ""
selectorAffix.zDesc = "withCrossBar"
selectorAffix."zDesc/reduced" = ""

[prime.z.variants-buildup.stages.overlay.with-horizontal-crossbar]
rank = 3
descriptionAffix = "a horizontal crossbar"
selectorAffix.z = "withHorizontalCrossBar"
selectorAffix."z/sansSerif" = "withHorizontalCrossBar"
selectorAffix."z/reduced" = ""
selectorAffix.zDesc = "withHorizontalCrossBar"
selectorAffix."zDesc/reduced" = ""



[prime.long-s]
sampler = "ſ"
samplerExplain = "Long-S"
tag = "cv51"

[prime.long-s.variants-buildup]
entry = "bottom"
descriptionLeader = "Long S (`ſ`)"

[prime.long-s.variants-buildup.stages.bottom."*"]
next = "top"

[prime.long-s.variants-buildup.stages.bottom.non-descending]
rank = 1
keyAffix = ""
selectorAffix."longs" = ""
selectorAffix."longs/flatExt" = ""

[prime.long-s.variants-buildup.stages.bottom.descending]
rank = 2
descriptionAffix = "terminal descends baseline"
selectorAffix."longs" = "descending"
selectorAffix."longs/flatExt" = "descendingExt"

[prime.long-s.variants-buildup.stages.bottom.tailed]
rank = 3
descriptionAffix = "terminal has a tail"
selectorAffix."longs" = "tailed"
selectorAffix."longs/flatExt" = "tailedExt"

[prime.long-s.variants-buildup.stages.bottom.diagonal-tailed]
rank = 4
descriptionAffix = "terminal has a diagonal tail"
selectorAffix."longs" = "diagonalTailed"
selectorAffix."longs/flatExt" = "diagonalTailedExt"

[prime.long-s.variants-buildup.stages.top."*"]
next = "serifs"
mode = "prepend"

[prime.long-s.variants-buildup.stages.top.bent-hook]
rank = 1
descriptionAffix = "bending top hook"
selectorAffix."longs" = "bentHook"
selectorAffix."longs/flatExt" = "flatHook"

[prime.long-s.variants-buildup.stages.top.flat-hook]
rank = 2
descriptionAffix = "flat top hook"
selectorAffix."longs" = "flatHook"
selectorAffix."longs/flatExt" = "flatHook"

[prime.long-s.variants-buildup.stages.serifs.serifless__non-descending]
rank = 1
enableIf = [{ bottom = "non-descending" }]
keyAffix = "serifless"
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix."longs" = "serifless"
selectorAffix."longs/flatExt" = "serifless"

[prime.long-s.variants-buildup.stages.serifs.serifless__descending]
rank = 1
enableIf = [{ bottom = "NOT non-descending" }]
keyAffix = ""
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix."longs" = ""
selectorAffix."longs/flatExt" = ""

[prime.long-s.variants-buildup.stages.serifs.bottom-serifed]
rank = 2
enableIf = [{ bottom = "non-descending" }]
descriptionAffix = "bottom serif"
selectorAffix."longs" = "bottomSerifed"
selectorAffix."longs/flatExt" = "bottomSerifed"

[prime.long-s.variants-buildup.stages.serifs.double-serifed]
rank = 3
enableIf = [{ bottom = "non-descending" }]
descriptionAffix = "bottom and middle serifs"
selectorAffix."longs" = "doubleSerifed"
selectorAffix."longs/flatExt" = "doubleSerifed"

[prime.long-s.variants-buildup.stages.serifs.double-serifed-xh]
rank = 4
enableIf = [{ bottom = "non-descending" }]
descriptionAffix = "bottom and middle serifs at x-height"
selectorAffix."longs" = "doubleSerifedXH"
selectorAffix."longs/flatExt" = "doubleSerifedXH"

[prime.long-s.variants-buildup.stages.serifs.middle-serifed]
rank = 5
enableIf = [{ bottom = "NOT non-descending" }]
descriptionAffix = "middle serif"
selectorAffix."longs" = "middleSerifed"
selectorAffix."longs/flatExt" = "middleSerifed"

[prime.long-s.variants-buildup.stages.serifs.middle-serifed-xh]
rank = 6
enableIf = [{ bottom = "NOT non-descending" }]
descriptionAffix = "middle serif at x-height"
selectorAffix."longs" = "middleSerifedXH"



[prime.eszet]
sampler = "ß"
samplerExplain = "Eszet"
tag = "cv52"

[prime.eszet.variants-buildup]
entry = "body"
descriptionLeader = "Eszet (`ß`)"

[prime.eszet.variants-buildup.stages.body."*"]
next = "terminal"

[prime.eszet.variants-buildup.stages.body.traditional]
rank = 1
descriptionAffix = "traditional, Fraktur-like shape"
selectorAffix.eszet = "traditional"

[prime.eszet.variants-buildup.stages.body.traditional-flat-hook]
rank = 2
descriptionAffix = "traditional Fraktur-like shape (containing a flat top hook)"
selectorAffix.eszet = "traditionalFlatHook"

[prime.eszet.variants-buildup.stages.body.sulzbacher]
rank = 3
descriptionAffix = "more modern, beta-like shape"
selectorAffix.eszet = "sulzbacher"

[prime.eszet.variants-buildup.stages.body.longs-s-lig]
rank = 4
descriptionAffix = "ligature of long-S (`ſ`) and `s`"
selectorAffix.eszet = "longSSLig"

[prime.eszet.variants-buildup.stages.terminal.non-descending]
rank = 1
keyAffix = ""
selectorAffix.eszet = ""

[prime.eszet.variants-buildup.stages.terminal.descending]
rank = 2
descriptionAffix = "terminal descends baseline"
selectorAffix.eszet = "descending"

[prime.eszet.variants-buildup.stages.terminal.tailed]
rank = 3
descriptionAffix = "terminal containing tail"
selectorAffix.eszet = "tailed"


[prime.turn-v]
sampler = "ΛΔ"
samplerExplain = "Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`)"

tag = "cv53"

[prime.turn-v.variants.straight]
rank = 1
description = "Standard, straight Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`)"
selector."grek/Lambda" = "straight"
selector."grek/Delta" = "straight"

[prime.turn-v.variants.curly]
rank = 2
description = "Slightly curly Greek capital Lambda (`Λ`) and Greek capital Delta (`Δ`), like Iosevka 2.x"
selector."grek/Lambda" = "curly"
selector."grek/Delta" = "curly"



[prime.lower-alpha]
sampler = "α"
samplerExplain = "Greek lower Alpha"
tag = "cv54"

[prime.lower-alpha.variants.crossing]
rank = 1
description = "Greek lower Alpha (`α`) with a cross-like shape at right"
selector."grek/alpha" = "crossing"

[prime.lower-alpha.variants.tailed-barred]
rank = 2
description = "Greek lower Alpha (`α`) with a straight right bar and tail"
selector."grek/alpha" = "tailedBarred"



[prime.lower-delta]
sampler = "δ"
samplerExplain = "Greek lower Delta"
tag = "cv55"

[prime.lower-delta.variants.rounded]
rank = 1
description = "Greek lower Delta (`δ`) with rounded top"
selector."grek/delta" = "rounded"

[prime.lower-delta.variants.flat-top]
rank = 2
description = "Greek lower Delta (`δ`) with flat top"
selector."grek/delta" = "flatTop"



[prime.capital-gamma]
sampler = "Γ"
samplerExplain = "Greek capital Gamma"
tag = "cv56"

[prime.capital-gamma.variants.serifless]
rank = 1
description = "Standard capital Gamma (`Γ`) without serifs"
selector."grek/Gamma" = "serifless"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "serifless"
selector."cyrl/Ge" = "serifless"
selector."cyrl/ghe.upright" = "serifless"
selector."cyrl/ge.upright" = "serifless"
selector."cyrl/ge.italic" = "serifless"

[prime.capital-gamma.variants.top-right-serifed]
rank = 2
description = "Standard capital Gamma (`Γ`) with serifs at top right"
selector."grek/Gamma" = "topRightSerifed"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "topRightSerifed"
selector."cyrl/Ge" = "serifless"
selector."cyrl/ghe.upright" = "topRightSerifed"
selector."cyrl/ge.upright" = "serifless"
selector."cyrl/ge.italic" = "serifless"

[prime.capital-gamma.variants.serifed]
rank = 3
description = "Standard capital Gamma (`Γ`) with motion serifs at top and bottom"
selector."grek/Gamma" = "serifed"
selector."grek/Gamma/sansSerif" = "serifless"
selector."cyrl/Ghe" = "serifed"
selector."cyrl/Ge" = "serifed"
selector."cyrl/ghe.upright" = "serifed"
selector."cyrl/ge.upright" = "serifed"
selector."cyrl/ge.italic" = "topLeftSerifed"



[prime.lower-iota]
sampler = "ι"
samplerExplain = "Greek lower Iota"
tag = "cv57"

[prime.lower-iota.variants.zshaped]
rank = 1
description = "Z-shaped Greek lower Iota (`ι`)"
selector."grek/iota" = "zshaped"

[prime.lower-iota.variants.hooky-bottom]
rank = 2
description = "Greek lower Iota (`ι`) with a sharp-turning horizontal tail"
selector."grek/iota" = "hookyBottom"

[prime.lower-iota.variants.tailed]
rank = 3
description = "Greek lower Iota (`ι`) with curly tail"
selector."grek/iota" = "tailed"

[prime.lower-iota.variants.tailed-serifed]
rank = 4
description = "Greek lower Iota (`ι`) with top serif and curly tail"
selector."grek/iota" = "tailedSerifed"

[prime.lower-iota.variants.flat-tailed]
rank = 5
description = "Greek lower Iota (`ι`) with a curly-then-flat tail"
selector."grek/iota" = "flatTailed"

[prime.lower-iota.variants.serifed-flat-tailed]
rank = 6
description = "Greek lower Iota (`ι`) with top serif and a curly-then-flat tail"
selector."grek/iota" = "serifedFlatTailed"

[prime.lower-iota.variants.diagonal-tailed]
rank = 7
description = "Greek lower Iota (`ι`) with a diagonal tail"
selector."grek/iota" = "diagonalTailed"

[prime.lower-iota.variants.serifed-diagonal-tailed]
rank = 8
description = "Greek lower Iota (`ι`) with top serif and a diagonal tail"
selector."grek/iota" = "serifedDiagonalTailed"



[prime.lower-lambda]
sampler = "λ"
samplerExplain = "Greek small Lambda"
tag = "cv58"

[prime.lower-lambda.variants.straight]
rank = 1
description = "More-straight Greek small Lambda (`λ`)"
selector."grek/lambda" = "straightSerifless"

[prime.lower-lambda.variants.straight-turn]
rank = 2
description = "Greek small Lambda (`λ`) with straight upper and a tail turns leftward"
selector."grek/lambda" = "straightTurnSerifless"

[prime.lower-lambda.variants.curly]
rank = 3
description = "More curly Greek small Lambda (`λ`), like Iosevka 2.x"
selector."grek/lambda" = "curlySerifless"

[prime.lower-lambda.variants.curly-turn]
rank = 4
description = "More curly Greek small Lambda (`λ`), like Iosevka 2.x, with a tail turns leftward"
selector."grek/lambda" = "curlyTurnSerifless"



[prime.lower-mu]
sampler = "μ"
samplerExplain = "Greek small Mu"
tag = "cv59"

[prime.lower-mu.variants.tailless]
rank = 1
description = "Tailless Greek small Mu (`μ`)"
selector."grek/mu" = "tailless"

[prime.lower-mu.variants.tailed]
rank = 2
description = "Tailed Greek small Mu (`μ`)"
selector."grek/mu" = "tailed"

[prime.lower-mu.variants.toothless-corner]
rank = 3
description = "Toothless (corner) Greek small Mu (`μ`)"
selector."grek/mu" = "toothlessCorner"

[prime.lower-mu.variants.toothless-rounded]
rank = 4
description = "Toothless (rounded) Greek small Mu (`μ`)"
selector."grek/mu" = "toothlessRounded"



[prime.lower-xi]
sampler = "ξ"
samplerExplain = "Greek lower Xi"
tag = "cv60"

[prime.lower-xi.variants.rounded]
rank = 1
description = "Greek lower Xi (`ξ`) with rounded top"
selector."grek/xi" = "rounded"

[prime.lower-xi.variants.flat-top]
rank = 2
description = "Greek lower Xi (`ξ`) with flat top"
selector."grek/xi" = "flatTop"



[prime.cyrl-capital-zhe]
sampler = "Ж"
samplerExplain = "Cyrillic Capital Zhe"
tag = "cv61"

[prime.cyrl-capital-zhe.variants.straight]
rank = 1
description = "Cyrillic Capital Lower Zhe (`Ж`) with straight legs"
selector."cyrl/Zhe" = "straight"

[prime.cyrl-capital-zhe.variants.curly]
rank = 2
description = "Cyrillic Capital Lower Zhe (`Ж`) with curly legs"
selector."cyrl/Zhe" = "curly"

[prime.cyrl-capital-zhe.variants.symmetric-touching]
rank = 3
description = "Cyrillic Capital Lower Zhe (`Ж`) with symmetric legs touching the vertical bar"
selector."cyrl/Zhe" = "symmetricTouching"

[prime.cyrl-capital-zhe.variants.symmetric-connected]
rank = 4
description = "Cyrillic Capital Lower Zhe (`Ж`) with symmetric legs connected to the vertical bar"
selector."cyrl/Zhe" = "symmetricConnected"



[prime.cyrl-zhe]
sampler = "ж"
samplerExplain = "Cyrillic Zhe"
tag = "cv62"

[prime.cyrl-zhe.variants.straight]
rank = 1
description = "Cyrillic Lower Zhe (`ж`) with straight legs"
selector."cyrl/zhe" = "straight"

[prime.cyrl-zhe.variants.curly]
rank = 2
description = "Cyrillic Lower Zhe (`ж`) with curly legs"
selector."cyrl/zhe" = "curly"

[prime.cyrl-zhe.variants.symmetric-touching]
rank = 3
description = "Cyrillic Lower Zhe (`ж`) with symmetric legs touching the vertical bar"
selector."cyrl/zhe" = "symmetricTouching"

[prime.cyrl-zhe.variants.symmetric-connected]
rank = 4
description = "Cyrillic Lower Zhe (`ж`) with symmetric legs connected to the vertical bar"
selector."cyrl/zhe" = "symmetricConnected"



[prime.cyrl-capital-ze]
sampler = "З"
samplerExplain = "Cyrillic Capital Ze"
tag = "cv63"

[prime.cyrl-capital-ze.variants.serifless]
rank = 1
description = "Serifless Cyrillic Capital Ze (`З`)"
selector."latn/Epsilon" = "serifless"
selector."cyrl/Ze" = "serifless"
selector."cyrl/Ksi" = "serifless"

[prime.cyrl-capital-ze.variants.unilateral-serifed]
rank = 2
description = "Cyrillic Capital Ze (`З`) with serif at top"
selector."latn/Epsilon" = "unilateralSerifed"
selector."cyrl/Ze" = "unilateralSerifed"
selector."cyrl/Ksi" = "unilateralSerifed"

[prime.cyrl-capital-ze.variants.bilateral-serifed]
rank = 3
description = "Cyrillic Capital Ze (`З`) with serif at both top and bottom"
selector."latn/Epsilon" = "bilateralSerifed"
selector."cyrl/Ze" = "bilateralSerifed"
selector."cyrl/Ksi" = "unilateralSerifed"

[prime.cyrl-capital-ze.variants.unilateral-inward-serifed]
rank = 4
description = "Cyrillic Capital Ze (`З`) with inward serif at top"
selector."latn/Epsilon" = "unilateralInwardSerifed"
selector."cyrl/Ze" = "unilateralInwardSerifed"
selector."cyrl/Ksi" = "unilateralInwardSerifed"

[prime.cyrl-capital-ze.variants.bilateral-inward-serifed]
rank = 5
description = "Cyrillic Capital Ze (`З`) with inward serif at both top and bottom"
selector."latn/Epsilon" = "bilateralInwardSerifed"
selector."cyrl/Ze" = "bilateralInwardSerifed"
selector."cyrl/Ksi" = "unilateralInwardSerifed"



[prime.cyrl-ze]
sampler = "з"
samplerExplain = "Cyrillic Lower Ze"
tag = "cv64"

[prime.cyrl-ze.variants.serifless]
rank = 1
description = "Serifless Cyrillic Lower Ze (`з`)"
selector."latn/epsilon" = "serifless"
selector."latn/epsilon/descBase" = "seriflessDesc"
selector."cyrl/ze" = "serifless"
selector."cyrl/ksi" = "serifless"

[prime.cyrl-ze.variants.unilateral-serifed]
rank = 2
description = "Cyrillic Lower Ze (`з`) with serif at top"
selector."latn/epsilon" = "unilateralSerifed"
selector."latn/epsilon/descBase" = "bilateralSerifed"
selector."cyrl/ze" = "unilateralSerifed"
selector."cyrl/ksi" = "unilateralSerifed"

[prime.cyrl-ze.variants.bilateral-serifed]
rank = 3
description = "Cyrillic Lower Ze (`з`) with serif at both top and bottom"
selector."latn/epsilon" = "bilateralSerifed"
selector."latn/epsilon/descBase" = "bilateralSerifed"
selector."cyrl/ze" = "bilateralSerifed"
selector."cyrl/ksi" = "unilateralSerifed"

[prime.cyrl-ze.variants.unilateral-inward-serifed]
rank = 4
description = "Cyrillic Lower Ze (`з`) with inward serif at top"
selector."latn/epsilon" = "unilateralInwardSerifed"
selector."latn/epsilon/descBase" = "unilateralInwardSerifedDesc"
selector."cyrl/ze" = "unilateralInwardSerifed"
selector."cyrl/ksi" = "unilateralInwardSerifed"

[prime.cyrl-ze.variants.bilateral-inward-serifed]
rank = 5
description = "Cyrillic Lower Ze (`з`) with inward serif at both top and bottom"
selector."latn/epsilon" = "bilateralInwardSerifed"
selector."latn/epsilon/descBase" = "unilateralInwardSerifedDesc"
selector."cyrl/ze" = "bilateralInwardSerifed"
selector."cyrl/ksi" = "unilateralInwardSerifed"



[prime.cyrl-capital-ka]
sampler = "К"
samplerExplain = "Cyrillic Capital Ka"
tag = "cv65"

[prime.cyrl-capital-ka.variants-buildup]
entry = "body"
descriptionLeader = "Cyrillic Capital Ka (`К`)"

[prime.cyrl-capital-ka.variants-buildup.stages.body."*"]
next = "serifs"

[prime.cyrl-capital-ka.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix."cyrl/Ka" = "straight"
selectorAffix."cyrl/KaDescender" = "straight"
selectorAffix."cyrl/KaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/KaHook" = "symmetricConnectedKH"

[prime.cyrl-capital-ka.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix."cyrl/Ka" = "curly"
selectorAffix."cyrl/KaDescender" = "curly"
selectorAffix."cyrl/KaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/KaHook" = "symmetricConnectedKH"

[prime.cyrl-capital-ka.variants-buildup.stages.body.symmetric-touching]
rank = 3
descriptionAffix = "symmetric legs touching the vertical bar"
selectorAffix."cyrl/Ka" = "symmetricTouching"
selectorAffix."cyrl/KaDescender" = "symmetricTouching"
selectorAffix."cyrl/KaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/KaHook" = "symmetricConnectedKH"

[prime.cyrl-capital-ka.variants-buildup.stages.body.symmetric-connected]
rank = 4
descriptionAffix = "symmetric legs connected to the vertical bar"
selectorAffix."cyrl/Ka" = "symmetricConnected"
selectorAffix."cyrl/KaDescender" = "symmetricConnected"
selectorAffix."cyrl/KaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/KaHook" = "symmetricConnectedKH"

[prime.cyrl-capital-ka.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/Ka" = "serifless"
selectorAffix."cyrl/KaDescender" = "serifless"
selectorAffix."cyrl/KaVBar" = "serifless"
selectorAffix."cyrl/KaHook" = "serifless"

[prime.cyrl-capital-ka.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serifs at top left"
selectorAffix."cyrl/Ka" = "topLeftSerifed"
selectorAffix."cyrl/KaDescender" = "topLeftSerifed"
selectorAffix."cyrl/KaVBar" = "topLeftSerifed"
selectorAffix."cyrl/KaHook" = "topLeftSerifed"

[prime.cyrl-capital-ka.variants-buildup.stages.serifs.bottom-right-serifed]
rank = 3
descriptionAffix = "serifs at bottom right"
selectorAffix."cyrl/Ka" = "bottomRightSerifed"
selectorAffix."cyrl/KaDescender" = "bottomRightSerifed"
selectorAffix."cyrl/KaVBar" = "bottomRightSerifed"
selectorAffix."cyrl/KaHook" = "serifless"

[prime.cyrl-capital-ka.variants-buildup.stages.serifs.top-left-and-bottom-right-serifed]
rank = 4
descriptionAffix = "serifs at top left and bottom right"
selectorAffix."cyrl/Ka" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/KaDescender" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/KaVBar" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/KaHook" = "topLeftSerifed"

[prime.cyrl-capital-ka.variants-buildup.stages.serifs.serifed]
rank = 5
descriptionAffix = "serifs"
selectorAffix."cyrl/Ka" = "serifed"
selectorAffix."cyrl/KaDescender" = "serifed"
selectorAffix."cyrl/KaVBar" = "serifed"
selectorAffix."cyrl/KaHook" = "serifedKH"



[prime.cyrl-ka]
sampler = "к"
samplerExplain = "Cyrillic Ka"
tag = "cv66"

[prime.cyrl-ka.variants-buildup]
entry = "body"
descriptionLeader = "Cyrillic Lower Ka (`к`)"

[prime.cyrl-ka.variants-buildup.stages.body."*"]
next = "serifs"

[prime.cyrl-ka.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix."cyrl/ka" = "straight"
selectorAffix."cyrl/kaDescender" = "straight"
selectorAffix."cyrl/kaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/kaHook" = "symmetricConnectedKH"

[prime.cyrl-ka.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix."cyrl/ka" = "curly"
selectorAffix."cyrl/kaDescender" = "curly"
selectorAffix."cyrl/kaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/kaHook" = "symmetricConnectedKH"

[prime.cyrl-ka.variants-buildup.stages.body.symmetric-touching]
rank = 3
descriptionAffix = "symmetric legs touching the vertical bar"
selectorAffix."cyrl/ka" = "symmetricTouching"
selectorAffix."cyrl/kaDescender" = "symmetricTouching"
selectorAffix."cyrl/kaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/kaHook" = "symmetricConnectedKH"

[prime.cyrl-ka.variants-buildup.stages.body.symmetric-connected]
rank = 4
descriptionAffix = "symmetric legs connected to the vertical bar"
selectorAffix."cyrl/ka" = "symmetricConnected"
selectorAffix."cyrl/kaDescender" = "symmetricConnected"
selectorAffix."cyrl/kaVBar" = "symmetricConnectedVB"
selectorAffix."cyrl/kaHook" = "symmetricConnectedKH"

[prime.cyrl-ka.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/ka" = "serifless"
selectorAffix."cyrl/kaDescender" = "serifless"
selectorAffix."cyrl/kaVBar" = "serifless"
selectorAffix."cyrl/kaHook" = "serifless"

[prime.cyrl-ka.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serifs at top left"
selectorAffix."cyrl/ka" = "topLeftSerifed"
selectorAffix."cyrl/kaDescender" = "topLeftSerifed"
selectorAffix."cyrl/kaVBar" = "topLeftSerifed"
selectorAffix."cyrl/kaHook" = "topLeftSerifed"

[prime.cyrl-ka.variants-buildup.stages.serifs.bottom-right-serifed]
rank = 3
descriptionAffix = "serifs at bottom right"
selectorAffix."cyrl/ka" = "bottomRightSerifed"
selectorAffix."cyrl/kaDescender" = "bottomRightSerifed"
selectorAffix."cyrl/kaVBar" = "bottomRightSerifed"
selectorAffix."cyrl/kaHook" = "serifless"

[prime.cyrl-ka.variants-buildup.stages.serifs.top-left-and-bottom-right-serifed]
rank = 4
descriptionAffix = "serifs at top left and bottom right"
selectorAffix."cyrl/ka" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/kaDescender" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/kaVBar" = "topLeftAndBottomRightSerifed"
selectorAffix."cyrl/kaHook" = "topLeftSerifed"

[prime.cyrl-ka.variants-buildup.stages.serifs.serifed]
rank = 5
descriptionAffix = "serifs"
selectorAffix."cyrl/ka" = "serifed"
selectorAffix."cyrl/kaDescender" = "serifed"
selectorAffix."cyrl/kaVBar" = "serifed"
selectorAffix."cyrl/kaHook" = "serifedKH"



[prime.cyrl-el]
sampler = "л"
samplerExplain = "Cyrillic Lower El"
tag = "cv67"

[prime.cyrl-el.variants.straight]
rank = 1
description = "Cyrillic Lower El (`л`) with standard shape"
selector."cyrl/el" = "straight"

[prime.cyrl-el.variants.tailed]
rank = 2
description = "Cyrillic Lower El (`л`) with tail shape"
selector."cyrl/el" = "tailed"



[prime.cyrl-en]
sampler = "н"
samplerExplain = "Cyrillic Lower En"
tag = "cv68"

[prime.cyrl-en.variants-buildup]
entry = "tail"
descriptionLeader = "Cyrillic Lower En (`н`)"

[prime.cyrl-en.variants-buildup.stages.tail."*"]
next = "serifs"

[prime.cyrl-en.variants-buildup.stages.tail.tailless]
rank = 1
keyAffix = ""
selectorAffix."cyrl/en" = ""
selectorAffix."cyrl/en.BGR" = ""
selectorAffix."cyrl/en/descenderBase" = ""
selectorAffix."cyrl/nje/leftHalf" = ""
selectorAffix."cyrl/nje/leftHalf/reduced" = ""
selectorAffix."cyrl/njeKomi" = ""

[prime.cyrl-en.variants-buildup.stages.tail.tailed]
rank = 2
descriptionAffix = "tail"
selectorAffix."cyrl/en" = "tailed"
selectorAffix."cyrl/en.BGR" = "tailed"
selectorAffix."cyrl/en/descenderBase" = ""
selectorAffix."cyrl/nje/leftHalf" = ""
selectorAffix."cyrl/nje/leftHalf/reduced" = ""
selectorAffix."cyrl/njeKomi" = ""

[prime.cyrl-en.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/en" = "serifless"
selectorAffix."cyrl/en.BGR" = "serifless"
selectorAffix."cyrl/en/descenderBase" = "serifless"
selectorAffix."cyrl/nje/leftHalf" = "serifless"
selectorAffix."cyrl/nje/leftHalf/reduced" = "serifless"
selectorAffix."cyrl/njeKomi" = "serifless"

[prime.cyrl-en.variants-buildup.stages.serifs.top-left-serifed]
rank = 2
descriptionAffix = "serifs at top left"
selectorAffix."cyrl/en" = "topLeftSerifed"
selectorAffix."cyrl/en.BGR" = "topLeftSerifed"
selectorAffix."cyrl/en/descenderBase" = "topLeftSerifed"
selectorAffix."cyrl/nje/leftHalf" = "topLeftSerifed"
selectorAffix."cyrl/nje/leftHalf/reduced" = "topLeftSerifed"
selectorAffix."cyrl/njeKomi" = "topLeftSerifed"

[prime.cyrl-en.variants-buildup.stages.serifs.top-left-bottom-right-serifed]
rank = 3
disableIf = [{ tail = "tailed" }]
descriptionAffix = "serifs at top left and bottom right"
selectorAffix."cyrl/en" = "topLeftBottomRightSerifed"
selectorAffix."cyrl/en.BGR" = "topLeftBottomRightSerifed"
selectorAffix."cyrl/en/descenderBase" = "topLeftSerifed"
selectorAffix."cyrl/nje/leftHalf" = "topLeftSerifed"
selectorAffix."cyrl/nje/leftHalf/reduced" = "topLeftSerifed"
selectorAffix."cyrl/njeKomi" = "topLeftSerifed"

[prime.cyrl-en.variants-buildup.stages.serifs.serifed]
rank = 4
descriptionAffix = "serifs"
selectorAffix."cyrl/en" = "serifed"
selectorAffix."cyrl/en.BGR" = "serifedBGR"
selectorAffix."cyrl/en/descenderBase" = "serifed"
selectorAffix."cyrl/nje/leftHalf" = "serifed"
selectorAffix."cyrl/nje/leftHalf/reduced" = "serifedExceptBottomRight"
selectorAffix."cyrl/njeKomi" = "serifedExceptBottomRight"



[prime.cyrl-ef]
sampler = "ф"
samplerExplain = "Cyrillic Lower Ef"
tag = "cv69"

[prime.cyrl-ef.variants.serifless]
rank = 1
description = "Cyrillic Lower Ef (`ф`) with standard shape and without serifs"
selector."cyrl/ef"  = "serifless"

[prime.cyrl-ef.variants.cursive]
rank = 2
description = "Cyrillic Lower Ef (`ф`) with cursive shape"
selector."cyrl/ef"  = "cursive"

[prime.cyrl-ef.variants.top-serifed]
rank = 3
description = "Cyrillic Lower Ef (`ф`) with standard shape and serif at top"
selector."cyrl/ef"  = "topSerifed"

[prime.cyrl-ef.variants.serifed]
rank = 4
description = "Cyrillic Lower Ef (`ф`) with standard shape and serifs at top and bottom"
selector."cyrl/ef"  = "serifed"



[prime.latn-phi]
# Untagged -- shape change only
[prime.latn-phi.variants.serifless]
rank = 1
selector."latn/phi"  = "serifless"

[prime.latn-phi.variants.top-serifed]
rank = 2
selector."latn/phi"  = "topSerifed"

[prime.latn-phi.variants.serifed]
rank = 3
selector."latn/phi"  = "serifed"



[prime.cyrl-che]
sampler = "ч"
samplerExplain = "Cyrillic Lower Che"
tag = "cv70"

[prime.cyrl-che.variants.standard]
rank = 1
description = "Cyrillic Lower Che (`ч`) with standard shape"
selector."cyrl/che" = "standard"

[prime.cyrl-che.variants.tailed]
rank = 2
description = "Cyrillic Lower Che (`ч`) with tail"
selector."cyrl/che" = "tailed"



[prime.cyrl-capital-u]
sampler = "У"
samplerExplain = "Cyrillic Capital U"
tag = "cv71"

[prime.cyrl-capital-u.variants-buildup]
entry = "body"
descriptionLeader = "Cyrillic Capital U (`У`)"

[prime.cyrl-capital-u.variants-buildup.stages.body."*"]
next = "hook"

[prime.cyrl-capital-u.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight shape"
selectorAffix."cyrl/U" = "straight"

[prime.cyrl-capital-u.variants-buildup.stages.body.curly]
rank = 2
descriptionAffix = "curly shape"
selectorAffix."cyrl/U" = "curly"

[prime.cyrl-capital-u.variants-buildup.stages.body.cursive]
rank = 3
descriptionAffix = "cursive shape"
selectorAffix."cyrl/U" = "cursive"

[prime.cyrl-capital-u.variants-buildup.stages.hook."*"]
next = "serifs"

[prime.cyrl-capital-u.variants-buildup.stages.hook.standard]
rank = 1
keyAffix = ""
selectorAffix."cyrl/U" = ""

[prime.cyrl-capital-u.variants-buildup.stages.hook.turn]
rank = 2
disableIf = [{ body = "cursive" }]
descriptionAffix = "a tail turns leftward"
selectorAffix."cyrl/U" = "turn"

[prime.cyrl-capital-u.variants-buildup.stages.hook.flat-hook]
rank = 3
disableIf = [{ body = "NOT cursive" }]
descriptionAffix = "a flat terminal hook"
selectorAffix."cyrl/U" = "flatHook"

[prime.cyrl-capital-u.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/U" = "serifless"

[prime.cyrl-capital-u.variants-buildup.stages.serifs.motion-serifed]
rank = 2
descriptionAffix = "motion serifs"
selectorAffix."cyrl/U" = "motionSerifed"

[prime.cyrl-capital-u.variants-buildup.stages.serifs.serifed]
rank = 3
descriptionAffix = "serifs"
selectorAffix."cyrl/U" = "serifed"



[prime.cyrl-capital-ya]
sampler = "Я"
samplerExplain = "Cyrillic Capital Ya"
tag = "cv72"

[prime.cyrl-capital-ya.variants-buildup]
entry = "openness"
descriptionLeader = "Cyrillic Capital Ya (`Я`)"

[prime.cyrl-capital-ya.variants-buildup.stages.openness."*"]
next = "leg"

[prime.cyrl-capital-ya.variants-buildup.stages.openness.closed]
rank = 1
keyAffix = ""
selectorAffix."cyrl/Ya" = ""

[prime.cyrl-capital-ya.variants-buildup.stages.openness.open]
rank = 2
descriptionAffix = "open contour"
selectorAffix."cyrl/Ya" = "open"

[prime.cyrl-capital-ya.variants-buildup.stages.leg."*"]
next = "serifs"
mode = "prepend"

[prime.cyrl-capital-ya.variants-buildup.stages.leg.straight]
rank = 1
descriptionAffix = "straight leg"
selectorAffix."cyrl/Ya" = "straight"

[prime.cyrl-capital-ya.variants-buildup.stages.leg.curly]
rank = 2
descriptionAffix = "curly leg"
selectorAffix."cyrl/Ya" = "curly"

[prime.cyrl-capital-ya.variants-buildup.stages.leg.standing]
rank = 3
descriptionAffix = "standing leg (like Helvetica)"
selectorAffix."cyrl/Ya" = "standing"

[prime.cyrl-capital-ya.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/Ya" = "serifless"

[prime.cyrl-capital-ya.variants-buildup.stages.serifs.serifed]
rank = 2
descriptionAffix = "serifs"
selectorAffix."cyrl/Ya" = "serifed"



[prime.cyrl-ya]
sampler = "я"
samplerExplain = "Cyrillic Lower Ya"
tag = "cv73"

[prime.cyrl-ya.variants-buildup]
entry = "openness"
descriptionLeader = "Cyrillic Lower Ya (`я`)"

[prime.cyrl-ya.variants-buildup.stages.openness."*"]
next = "leg"

[prime.cyrl-ya.variants-buildup.stages.openness.closed]
rank = 1
groupRrank = 10
keyAffix = ""
selectorAffix."cyrl/ya" = ""

[prime.cyrl-ya.variants-buildup.stages.openness.open]
rank = 2
groupRrank = 20
descriptionAffix = "open contour"
selectorAffix."cyrl/ya" = "open"

[prime.cyrl-ya.variants-buildup.stages.leg."*"]
next = "tails"
mode = "prepend"

[prime.cyrl-ya.variants-buildup.stages.leg.straight]
rank = 1
groupRank = 1
descriptionAffix = "straight leg"
selectorAffix."cyrl/ya" = "straight"

[prime.cyrl-ya.variants-buildup.stages.leg.curly]
rank = 2
groupRank = 2
descriptionAffix = "curly leg"
selectorAffix."cyrl/ya" = "curly"

[prime.cyrl-ya.variants-buildup.stages.leg.standing]
rank = 3
groupRank = 3
descriptionAffix = "standing leg (like Helvetica)"
selectorAffix."cyrl/ya" = "standing"

[prime.cyrl-ya.variants-buildup.stages.tails."*"]
next = "serifs"

[prime.cyrl-ya.variants-buildup.stages.tails.tailless]
rank = 1
keyAffix = ""
selectorAffix."cyrl/ya" = ""

[prime.cyrl-ya.variants-buildup.stages.tails.tailed]
rank = 2
descriptionAffix = "tail"
selectorAffix."cyrl/ya" = "tailed"

[prime.cyrl-ya.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionAffix = "serifs"
descriptionJoiner = "without"
selectorAffix."cyrl/ya" = "serifless"

[prime.cyrl-ya.variants-buildup.stages.serifs.serifed]
rank = 2
descriptionAffix = "serifs"
selectorAffix."cyrl/ya" = "smallCyrl"



[prime.cyrl-capital-yeri]
# No tags and sampler -- for style-driven variation

[prime.cyrl-capital-yeri.variants.corner]
rank = 1
selector."cyrl/Yer"  = "corner"
selector."cyrl/Yeri" = "corner"
selector."cyrl/YeriBar" = "corner"
selector."cyrl/Yery" = "corner"
selector."cyrl/Nje/rightHalf"  = "corner"
selector."cyrl/Lje"  = "corner"

[prime.cyrl-capital-yeri.variants.round]
rank = 2
selector."cyrl/Yer"  = "round"
selector."cyrl/Yeri" = "round"
selector."cyrl/YeriBar" = "round"
selector."cyrl/Yery" = "round"
selector."cyrl/Nje/rightHalf"  = "round"
selector."cyrl/Lje"  = "round"

[prime.cyrl-capital-yeri.variants.cursive]
rank = 3
selector."cyrl/Yer"  = "cursive"
selector."cyrl/Yeri" = "cursive"
selector."cyrl/YeriBar" = "cursive"
selector."cyrl/Yery" = "cursive"
selector."cyrl/Nje/rightHalf"  = "cursive"
selector."cyrl/Lje"  = "cursive"



[prime.cyrl-yeri]
sampler = "ь"
samplerExplain = "Cyrillic Lower Yeri and related letters"
tag = "cv74"

[prime.cyrl-yeri.variants.corner]
rank = 1
description = "Cyrillic Lower Yeri (`ь`) with corner at bottom left"
selector."cyrl/yer"  = "corner"
selector."cyrl/yer.BGR"  = "round" # Bulgarian
selector."cyrl/yeri" = "corner"
selector."cyrl/yeri.BGR" = "round" # Bulgarian
selector."cyrl/yeriBar" = "corner"
selector."cyrl/nje/rightHalf"  = "corner"
selector."cyrl/lje"  = "corner"
selector."latn/yatSakha.upright"  = "corner"

[prime.cyrl-yeri.variants.round]
rank = 2
description = "Cyrillic Lower Yeri (`ь`) with rounded shape"
selector."cyrl/yer"  = "round"
selector."cyrl/yer.BGR"  = "round"
selector."cyrl/yeri" = "round"
selector."cyrl/yeri.BGR" = "round"
selector."cyrl/yeriBar" = "round"
selector."cyrl/nje/rightHalf"  = "round"
selector."cyrl/lje"  = "round"
selector."latn/yatSakha.upright" = "round"

[prime.cyrl-yeri.variants.cursive]
rank = 3
description = "Cyrillic Lower Yeri (`ь`) with cursive shape"
selector."cyrl/yer"  = "cursive"
selector."cyrl/yer.BGR"  = "cursive"
selector."cyrl/yeri" = "cursive"
selector."cyrl/yeri.BGR" = "cursive"
selector."cyrl/yeriBar" = "cursive"
selector."cyrl/nje/rightHalf"  = "cursive"
selector."cyrl/lje"  = "cursive"
selector."latn/yatSakha.upright" = "cursive"



[prime.cyrl-yery]
sampler = "ы"
samplerExplain = "Cyrillic Lower Yery"
tag = "cv75"

[prime.cyrl-yery.variants.corner]
rank = 1
description = "Cyrillic Lower Yery (`ы`) with corner at bottom left"
selector."cyrl/yery" = "corner"

[prime.cyrl-yery.variants.corner-tailed]
rank = 2
description = "Cyrillic Lower Yery (`ы`) with corner at bottom left and tail"
selector."cyrl/yery" = "cornerTailed"

[prime.cyrl-yery.variants.round]
rank = 3
description = "Cyrillic Lower Yery (`ы`) with rounded shape"
selector."cyrl/yery" = "round"

[prime.cyrl-yery.variants.round-tailed]
rank = 4
description = "Cyrillic Lower Yery (`ы`) with rounded shape and tail"
selector."cyrl/yery" = "roundTailed"

[prime.cyrl-yery.variants.cursive]
rank = 5
description = "Cyrillic Lower Yery (`ы`) with cursive shape"
selector."cyrl/yery" = "cursive"

[prime.cyrl-yery.variants.cursive-tailed]
rank = 6
description = "Cyrillic Lower Yery (`ы`) with cursive shape and tail"
selector."cyrl/yery" = "cursiveTailed"



[prime.zero]
sampler = "0"
tag = "cv76"

[prime.zero.variants-buildup]
entry = "body"
descriptionLeader = "Zero (`0`)"

[prime.zero.variants-buildup.stages.body."*"]
next = "overlays"

[prime.zero.variants-buildup.stages.body.standard]
rank = 1
keyAffix = ""
descriptionAffix = "standard shape"
selectorAffix.zero = ""
selectorAffix."zero/forceSlashed" = ""
selectorAffix."zero/forceUnslashed" = ""

[prime.zero.variants-buildup.stages.body.oval]
rank = 2
keyAffix = "oval"
descriptionAffix = "oval shape"
selectorAffix.zero = "oval"
selectorAffix."zero/forceSlashed" = "oval"
selectorAffix."zero/forceUnslashed" = "oval"

[prime.zero.variants-buildup.stages.overlays.unslashed]
rank = 1
descriptionAffix = "slash"
descriptionJoiner = "without"
selectorAffix.zero = "unslashed"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.slashed]
rank = 2
descriptionAffix = "slash"
selectorAffix.zero = "slashed"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.reverse-slashed]
rank = 3
descriptionAffix = "revese slash"
selectorAffix.zero = "reverseSlashed"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.tall-slashed]
rank = 4
descriptionAffix = "tall slash"
selectorAffix.zero = "tallSlashed"
selectorAffix."zero/forceSlashed" = "tallSlashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.tall-reverse-slashed]
rank = 5
descriptionAffix = "tall reverse slash"
selectorAffix.zero = "tallReverseSlashed"
selectorAffix."zero/forceSlashed" = "tallSlashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.dotted]
rank = 6
descriptionAffix = "center dot"
selectorAffix.zero = "dotted"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.long-dotted]
rank = 7
descriptionAffix = "long center dot"
selectorAffix.zero = "longDotted"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.slashed-split]
rank = 8
descriptionAffix = "slash separated from the outline"
selectorAffix.zero = "slashedSplit"
selectorAffix."zero/forceSlashed" = "slashedSplit"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.reverse-slashed-split]
rank = 9
descriptionAffix = "reverse slash separated from the outline"
selectorAffix.zero = "reverseSlashedSplit"
selectorAffix."zero/forceSlashed" = "slashedSplit"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.broken-slash]
rank = 10
descriptionAffix = "slash broken in the middle (like in Fixedsys)"
selectorAffix.zero = "brokenSlash"
selectorAffix."zero/forceSlashed" = "brokenSlash"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.broken-reverse-slash]
rank = 11
descriptionAffix = "reverse slash broken in the middle"
selectorAffix.zero = "brokenReverseSlash"
selectorAffix."zero/forceSlashed" = "brokenSlash"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.broken-vertical-bar]
rank = 12
descriptionAffix = "vertical bar broken in the middle"
selectorAffix.zero = "brokenVerticalBar"
selectorAffix."zero/forceSlashed" = "brokenSlash"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.slashed-cutout]
rank = 13
descriptionAffix = "a slash cutout"
selectorAffix.zero = "slashedCutout"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.reverse-slashed-cutout]
rank = 14
descriptionAffix = "a reverse-slash cutout"
selectorAffix.zero = "reverseSlashedCutout"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.tall-slashed-cutout]
rank = 15
descriptionAffix = "a taller slash cutout"
selectorAffix.zero = "tallSlashedCutout"
selectorAffix."zero/forceSlashed" = "tallSlashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.tall-reverse-slashed-cutout]
rank = 16
descriptionAffix = "a taller reverse-slash cutout"
selectorAffix.zero = "tallReverseSlashedCutout"
selectorAffix."zero/forceSlashed" = "tallSlashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.vertical-bar-cutout]
rank = 17
descriptionAffix = "a vertical bar cutout"
selectorAffix.zero = "verticalBarCutout"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"

[prime.zero.variants-buildup.stages.overlays.top-right-cutout]
rank = 18
descriptionAffix = "the top-right bit cutout"
selectorAffix.zero = "topRightCutout"
selectorAffix."zero/forceSlashed" = "slashed"
selectorAffix."zero/forceUnslashed" = "unslashed"



[prime.one]
sampler = "1"
tag = "cv77"

[prime.one.variants.line]
rank = 1
description = "`1` drawn just like a straight line"
selector.one = "line"

[prime.one.variants.no-base]
rank = 2
description = "`1` without bottom serif"
selector.one = "noBase"

[prime.one.variants.base]
rank = 3
description = "`1` with bottom serif"
selector.one = "base"

[prime.one.variants.no-base-long-top-serif]
rank = 4
description = "`1` without bottom serif and with a long top serif"
selector.one = "noBaseLongTopSerif"

[prime.one.variants.base-long-top-serif]
rank = 5
description = "`1` with bottom serif and a long top serif"
selector.one = "baseLongTopSerif"

[prime.one.variants.no-base-flat-top-serif]
rank = 6
description = "`1` without bottom serif and with a flat top serif"
selector.one = "noBaseFlatTopSerif"

[prime.one.variants.base-flat-top-serif]
rank = 7
description = "`1` with bottom serif and a flat top serif"
selector.one = "baseFlatTopSerif"

[prime.one.variants.no-base-top-cut]
rank = 8
description = "`1` without bottom serif and with a diagonal cut at top"
selector.one = "noBaseTopCut"

[prime.one.variants.base-top-cut]
rank = 9
description = "`1` with bottom serif and a diagonal cut at top"
selector.one = "baseTopCut"



[prime.two]
sampler = "2"
tag = "cv78"

[prime.two.variants.straight-neck]
rank = 1
description = "`2` with straight neck"
selector.two = "straightNeck"

[prime.two.variants.curly-neck]
rank = 2
description = "`2` with curly neck"
selector.two = "curlyNeck"



[prime.three]
sampler = "3"
tag = "cv79"

[prime.three.variants.flat-top]
rank = 1
description = "Flat top `3` (Like Museo Sans / Montserrat)"
selector.three = "flatTop"

[prime.three.variants.two-arcs]
rank = 2
description = "Arched top `3`"
selector.three = "twoArcs"



[prime.four]
sampler = "4"
tag = "cv80"

[prime.four.variants.closed]
rank = 1
description = "`4` with closed contour"
selector.four = "closed"

[prime.four.variants.closed-non-crossing]
rank = 2
description = "`4` with closed contour but the horizontal bar does not overflow the vertical bar"
selector.four = "closedNonCrossing"

[prime.four.variants.semi-open]
rank = 3
description = "`4` with semi-open contour"
selector.four = "semiOpen"

[prime.four.variants.semi-open-non-crossing]
rank = 4
description = "`4` with semi-open contour but the horizontal bar does not overflow the vertical bar"
selector.four = "semiOpenNonCrossing"

[prime.four.variants.open]
rank = 5
description = "`4` with open contour"
selector.four = "open"

[prime.four.variants.open-non-crossing]
rank = 6
description = "`4` with open contour but the horizontal bar does not overflow the vertical bar"
selector.four = "openNonCrossing"



[prime.five]
sampler = "5"
tag = "cv81"

[prime.five.variants.vertical-upper-left-bar]
rank = 1
description = "`5` with a vertical upper-left bar"
selector.five = "verticalUpperLeftBar"

[prime.five.variants.oblique-upper-left-bar]
rank = 2
description = "`5` with an oblique upper-left bar"
selector.five = "obliqueUpperLeftBar"



[prime.six]
sampler = "6"
tag = "cv82"

[prime.six.variants.closed-contour]
rank = 1
description = "`6` with a more closed contour"
selector.six = "closedContour"

[prime.six.variants.open-contour]
rank = 2
description = "`6` with a more open contour"
selector.six = "openContour"

[prime.six.variants.straight-bar]
rank = 3
description = "`6` with a straight bar"
selector.six = "straightBar"



[prime.seven]
sampler = "7"
tag = "cv83"

[prime.seven.variants-buildup]
entry = "body"
descriptionLeader = "`7`"

[prime.seven.variants-buildup.stages.body."*"]
next = "serifs"

[prime.seven.variants-buildup.stages.body.straight]
rank = 1
descriptionAffix = "straight stem"
selectorAffix.seven = "straight"

[prime.seven.variants-buildup.stages.body.bend]
rank = 2
descriptionAffix = "bend stem"
selectorAffix.seven = "bend"

[prime.seven.variants-buildup.stages.body.curly]
rank = 3
descriptionAffix = "curly stem"
selectorAffix.seven = "curly"

[prime.seven.variants-buildup.stages.serifs."*"]
next = "overlay"

[prime.seven.variants-buildup.stages.serifs.serifless]
rank = 1
descriptionJoiner = "without"
descriptionAffix = "serifs"
selectorAffix.seven = "serifless"

[prime.seven.variants-buildup.stages.serifs.serifed]
rank = 2
descriptionAffix = "serifs"
selectorAffix.seven = "serifed"

[prime.seven.variants-buildup.stages.overlay.no-crossbar]
rank = 1
keyAffix = ""
selectorAffix.seven = ""

[prime.seven.variants-buildup.stages.overlay.crossbar]
rank = 2
descriptionAffix = "crossbar"
selectorAffix.seven = "crossbar"



[prime.eight]
sampler = "8"
tag = "cv84"

[prime.eight.variants.crossing]
rank = 1
description = "`8` with crossing middle part"
selector.eight = "crossing"

[prime.eight.variants.two-circles]
rank = 2
description = "`8` looks like two circles joined together"
selector.eight = "twoCircles"

[prime.eight.variants.crossing-asymmetric]
rank = 3
description = "`8` looks asymmetric crossing middle part"
selector.eight = "crossingAsymmetric"



[prime.nine]
sampler = "9"
tag = "cv85"

[prime.nine.variants.closed-contour]
rank = 1
description = "`9` with a more closed contour"
selector.nine = "closedContour"

[prime.nine.variants.open-contour]
rank = 2
description = "`9` with a more open contour"
selector.nine = "openContour"

[prime.nine.variants.straight-bar]
rank = 3
description = "`9` with a straight bar"
selector.nine = "straightBar"



[prime.diacritic-dot]
sampler = "öẋ ij"
hotChars = "ijäöü"
samplerExplain = "Dot and Comma shape in diacritics"
tag = "cv86"

[prime.diacritic-dot.variants.round]
rank = 1
description = "Dots and Commas in diacritics are round"
selector.diacriticDot = "round"

[prime.diacritic-dot.variants.square]
rank = 2
description = "Dots and Commas in diacritics are square"
selector.diacriticDot = "square"



[prime.punctuation-dot]
sampler = "., :;"
hotChars = ".,:;?!"
samplerExplain = "Dot and Comma shape in punctuations and symbols"
tag = "cv87"

[prime.punctuation-dot.variants.round]
rank = 1
description = "Small punctuations (like `.`, `,`) use round dots"
selector.punctuationDot = "round"

[prime.punctuation-dot.variants.square]
rank = 2
description = "Small punctuations (like `.`, `,`) use square dots"
selector.punctuationDot = "square"



[prime.tilde]
sampler = "~"
tag = "cv88"

[prime.tilde.variants.high]
rank = 1
description = "Higher tilde `~`"
selector.asciiTilde = "high"

[prime.tilde.variants.low]
rank = 2
description = "Lower tilde `~`"
selector.asciiTilde = "low"



[prime.asterisk]
sampler = "*"
tag = "cv89"

[prime.asterisk.variants-buildup]
entry = "body"
descriptionLeader = "Asterisk (`*`)"

[prime.asterisk.variants-buildup.stages.body."*"]
next = "position"

[prime.asterisk.variants-buildup.stages.body.penta]
rank = 1
groupRank = 1
descriptionAffix = "five-pointed shape"
selectorAffix.asterisk = "penta"
selectorAffix."asterisk/slashTop" = "penta"
selectorAffix."asterisk/sMid" = "penta"
selectorAffix."asterisk/slashBot" = "penta"
selectorAffix.flower = ""

[prime.asterisk.variants-buildup.stages.body.turn-penta]
rank = 2
groupRank = 1
descriptionAffix = "turned five-pointed shape"
selectorAffix.asterisk = "turnPenta"
selectorAffix."asterisk/slashTop" = "turnPenta"
selectorAffix."asterisk/sMid" = "turnPenta"
selectorAffix."asterisk/slashBot" = "turnPenta"
selectorAffix.flower = ""

[prime.asterisk.variants-buildup.stages.body.hex]
rank = 3
groupRank = 2
descriptionAffix = "six-pointed shape"
selectorAffix.asterisk = "hex"
selectorAffix."asterisk/slashTop" = "hex"
selectorAffix."asterisk/sMid" = "hex"
selectorAffix."asterisk/slashBot" = "hex"
selectorAffix.flower = ""

[prime.asterisk.variants-buildup.stages.body.turn-hex]
rank = 4
groupRank = 2
descriptionAffix = "turned six-pointed shape"
selectorAffix.asterisk = "turnHex"
selectorAffix."asterisk/slashTop" = "turnHex"
selectorAffix."asterisk/sMid" = "turnHex"
selectorAffix."asterisk/slashBot" = "turnHex"
selectorAffix.flower = ""

[prime.asterisk.variants-buildup.stages.position.high]
rank = 1
descriptionAffix = "high position"
selectorAffix.asterisk = "high"
selectorAffix."asterisk/slashTop" = "ST"
selectorAffix."asterisk/sMid" = "SMid"
selectorAffix."asterisk/slashBot" = "SB"
selectorAffix.flower = "high"

[prime.asterisk.variants-buildup.stages.position.mid]
rank = 2
descriptionAffix = "medium position"
selectorAffix.asterisk = "ST"
selectorAffix."asterisk/slashTop" = "ST"
selectorAffix."asterisk/sMid" = "SMid"
selectorAffix."asterisk/slashBot" = "SB"
selectorAffix.flower = "ST"

[prime.asterisk.variants-buildup.stages.position.low]
rank = 3
descriptionAffix = "low position"
selectorAffix.asterisk = "SMid"
selectorAffix."asterisk/slashTop" = "ST"
selectorAffix."asterisk/sMid" = "SMid"
selectorAffix."asterisk/slashBot" = "SB"
selectorAffix.flower = "sMid"



[prime.underscore]
sampler = "_"
tag = "cv90"

[prime.underscore.variants.above-baseline]
rank = 1
description = "Extra-high `_`, placed right below baseline"
selector.underscore = "aboveBaseline"

[prime.underscore.variants.high]
rank = 2
description = "Higher underscore `_`, placed right below baseline"
selector.underscore = "high"

[prime.underscore.variants.low]
rank = 3
description = "Lower underscore `_`, placed right above descender line"
selector.underscore = "low"



[prime.caret]
sampler = "^"
tag = "cv91"

[prime.caret.variants.high]
rank = 1
description = "Higher circumflex `^`"
selector.asciiCaret = "high"

[prime.caret.variants.medium]
rank = 2
description = "Lower circumflex `^`"
selector.asciiCaret = "medium"

[prime.caret.variants.low]
rank = 3
description = "Lower circumflex `^`"
selector.asciiCaret = "low"



[prime.paren]
sampler = "( )"
tag = "cv92"

[prime.paren.variants.normal]
rank = 1
description = "Parenthesis with normal contour"
selector.parenLeft = "normal"
selector.parenRight = "normal"

[prime.paren.variants.large-contour]
rank = 2
description = "Parenthesis with larger contour, like that in Monaco"
selector.parenLeft = "largeContour"
selector.parenRight = "largeContour"

[prime.paren.variants.flat-arc]
rank = 3
description = "Parenthesis with flat arc, like that in JetBrains Mono"
selector.parenLeft = "flatArc"
selector.parenRight = "flatArc"



[prime.brace]
sampler = "{ }"
tag = "cv93"

[prime.brace.variants.straight]
rank = 1
description = "More straight braces"
selector.braceLeft = "straight"
selector.braceRight = "straight"

[prime.brace.variants.curly]
rank = 2
description = "More curly braces"
selector.braceLeft = "curly"
selector.braceRight = "curly"

[prime.brace.variants.curly-flat-boundary]
rank = 3
description = "Curly braces with flat boundary shape"
selector.braceLeft = "curlyFlatBoundary"
selector.braceRight = "curlyFlatBoundary"



[prime.number-sign]
sampler = "#"
tag = "cv94"

[prime.number-sign.variants.upright]
rank = 1
description = "Number sign with vertical bars"
selector.numberSign = "upright"

[prime.number-sign.variants.slanted]
rank = 2
description = "Number sign with slanted bars"
selector.numberSign = "slanted"

[prime.number-sign.variants.upright-open]
rank = 3
description = "Number sign with vertical bars and open inner"
selector.numberSign = "uprightOpen"

[prime.number-sign.variants.slanted-open]
rank = 4
description = "Number sign with slanted bars and open inner"
selector.numberSign = "slantedOpen"

[prime.number-sign.variants.upright-tall]
rank = 5
description = "Number sign with vertical bars and taller than digits"
selector.numberSign = "uprightTall"

[prime.number-sign.variants.slanted-tall]
rank = 6
description = "Number sign with slanted bars and taller than digits"
selector.numberSign = "slantedTall"

[prime.number-sign.variants.upright-open-tall]
rank = 7
description = "Number sign with vertical bars, open inner, and taller than digits"
selector.numberSign = "uprightOpenTall"

[prime.number-sign.variants.slanted-open-tall]
rank = 8
description = "Number sign with slanted bars, open inner, and taller than digits"
selector.numberSign = "slantedOpenTall"



[prime.ampersand]
sampler = "&"
tag = "cv95"

[prime.ampersand.variants.closed]
rank = 1
description = "Ampersand (`&`) with a closed contour"
selector.ampersand = "closed"

[prime.ampersand.variants.upper-open]
rank = 2
description = "Ampersand (`&`) with an open contour at upper half"
selector.ampersand = "upperOpen"

[prime.ampersand.variants.lower-open]
rank = 3
description = "Ampersand (`&`) with an open contour at lower half"
selector.ampersand = "lowerOpen"

[prime.ampersand.variants.flat-top]
rank = 4
description = "Ampersand (`&`) drawn with a flat top"
selector.ampersand = "flatTop"

[prime.ampersand.variants.et-toothed]
rank = 5
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t with tooth"
selector.ampersand = "etToothed"

[prime.ampersand.variants.et-toothless-corner]
rank = 6
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t without tooth (corner)"
selector.ampersand = "etToothlessCorner"

[prime.ampersand.variants.et-toothless-rounded]
rank = 7
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t without tooth (rounded)"
selector.ampersand = "etToothlessRounded"

[prime.ampersand.variants.et-tailed]
rank = 8
description = "Ampersand (`&`) drawn like a ligature of Ɛ and t with tail"
selector.ampersand = "etTailed"


[prime.at]
sampler = "@"
tag = "cv96"

[prime.at.variants-buildup]
entry = "folds"
descriptionLeader = "At symbol (`@`)"

[prime.at.variants-buildup.stages.folds."*"]
next = "inner"

[prime.at.variants-buildup.stages.folds.threefold]
rank = 1
descriptionAffix = "three-fold body"
selectorAffix.at = "threefold"

[prime.at.variants-buildup.stages.folds.fourfold]
rank = 2
descriptionAffix = "four-fold body"
selectorAffix.at = "fourfold"

[prime.at.variants-buildup.stages.folds.compact]
rank = 3
next = "END"
descriptionAffix = "compact body"
selectorAffix.at = "compact"

[prime.at.variants-buildup.stages.inner."*"]
next = "height"

[prime.at.variants-buildup.stages.inner.open]
rank = 1
keyAffix = ""
selectorAffix.at = ""

[prime.at.variants-buildup.stages.inner.solid-inner]
rank = 2
descriptionAffix = "solid inner"
selectorAffix.at = "solidInner"

[prime.at.variants-buildup.stages.height.normal]
rank = 1
keyAffix = ""
selectorAffix.at = ""

[prime.at.variants-buildup.stages.height.tall]
rank = 2
descriptionAffix = "tall height"
selectorAffix.at = "tall"



[prime.dollar]
sampler = "$"
tag = "cv97"

[prime.dollar.variants.open]
rank = 1
description = "Dollar symbol with open contour"
selector.dollar = "open"

[prime.dollar.variants.through]
rank = 2
description = "Dollar symbol with strike-through vertical bar"
selector.dollar = "through"

[prime.dollar.variants.interrupted]
rank = 3
description = "Dollar symbol with interrupted strike-through vertical bar"
selector.dollar = "interrupted"

[prime.dollar.variants.open-cap]
rank = 4
description = "Dollar symbol with open contour, not exceeding baseline and ascender"
selector.dollar = "openCap"

[prime.dollar.variants.through-cap]
rank = 5
description = "Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender"
selector.dollar = "throughCap"

[prime.dollar.variants.interrupted-cap]
rank = 6
description = "Dollar symbol with interrupted strike-through vertical bar, not exceeding baseline and ascender"
selector.dollar = "interruptedCap"



[prime.percent]
sampler = "%"
tag = "cv98"

[prime.percent.variants.dots]
rank = 1
description = "Percent `%` with rectangular dots"
selector.percent = "dots"
selector."permille.NWID" = "dots"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-segmented-slash]
rank = 2
description = "Percent `%` with rings and segmented slash"
selector.percent = "ringsSegmentedSlash"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-continuous-slash]
rank = 3
description = "Percent `%` with rings and continuous bar"
selector.percent = "ringsContinuousSlash"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlash"

[prime.percent.variants.rings-continuous-slash-also-connected]
rank = 4
description = "Percent `%` with rings and continuous bar and the slash in `%` is also connected to the top-left ring"
selector.percent = "ringsContinuousSlashAlsoConnected"
selector."permille.NWID" = "ringsContinuousSlash"
selector."permille.WWID" = "ringsContinuousSlashAlsoConnected"



[prime.bar]
sampler = "| ¦"
tag = "cv99"
slopeDependent = true

[prime.bar.variants.natural-slope]
rank = 1
description = "Bar punctuations (`|`) has a natural slope under italics and oblique"
selector."bar.slanted" = "naturalSlope"

[prime.bar.variants.force-upright]
rank = 2
description = "Bar punctuations (`|`) is forced upright under italics and oblique"
selector."bar.slanted" = "forceUpright"



[prime.ascii-single-quote]
sampler = "'"
tag = "VXSA"

[prime.ascii-single-quote.variants.straight]
rank = 1
description = 'Show ASCII quote (`"`) as short vertical straight bar.'
selector.asciiSingleQuote = "straight"

[prime.ascii-single-quote.variants.raised-comma]
rank = 2
description = 'Show ASCII quote (`"`) as raised comma.'
selector.asciiSingleQuote = "raisedComma"



[prime.ascii-grave]
sampler = "`"
tag = "VXSB"

[prime.ascii-grave.variants.straight]
rank = 1
description = "Show ASCII grave (`` ` ``) as short diagonal straight bar."
selector.asciiGrave = "straight"

[prime.ascii-grave.variants.raised-inverse-comma]
rank = 2
description = "Show ASCII grave (`` ` ``) as raised comma."
selector.asciiGrave = "raisedInverseComma"

[prime.ascii-grave.variants.raised-turn-comma]
rank = 3
description = "Show ASCII grave (`` ` ``) as raised turned comma, identical to curly open single quote symbols (U+2018)."
selector.asciiGrave = "raisedTurnComma"



[prime.question]
sampler = "?"
tag = "VXSC"

[prime.question.variants.smooth]
rank = 1
description = "Smooth question mark (`?`)"
selector.question = "smooth"

[prime.question.variants.corner]
rank = 2
description = "Question mark (`?`) with a corner at middle"
selector.question = "corner"

[prime.question.variants.corner-flat-hooked]
rank = 3
description = "Question mark (`?`) with a corner at middle and flat hook"
selector.question = "cornerFlatHooked"



[prime.pilcrow]
sampler = "¶"
tag = "VXSD"

[prime.pilcrow.variants.high]
rank = 1
description = "Higher pilcrow sign `¶`"
selector.pilcrow = "high"
selector.revPilcrow = "high"

[prime.pilcrow.variants.low]
rank = 2
description = "Lower pilcrow sign `¶`"
selector.pilcrow = "low"
selector.revPilcrow = "low"



[prime.cent]
sampler = "¢"
tag = "VXSE"

[prime.cent.variants.open]
rank = 1
description = "Cent sign (`¢`) with open contour"
selector.cent = "open"

[prime.cent.variants.through]
rank = 2
description = "Cent sign (`¢`) with vertical bar all through the `c` part"
selector.cent = "through"

[prime.cent.variants.bar-interrupted]
rank = 3
description = "Cent sign (`¢`) with vertical bar breaks at center"
selector.cent = "barInterrupted"



[prime.partial-derivative]
sampler = "∂"
samplerExplain = "Partial derivative symbol"
tag = "VXSF"

[prime.partial-derivative.variants.straight-bar]
rank = 1
description = "The upper bar of the partial derivative symbol is straight"
selector."partial" = "straight-bar"

[prime.partial-derivative.variants.curly-bar]
rank = 2
description = "The upper bar of the partial derivative symbol is curly"
selector."partial" = "curly-bar"



[prime.lower-eth]
sampler = "ð"
samplerExplain = "Lowercase Eth"
tag = "VXAA"

[prime.lower-eth.variants.straight-bar]
rank = 1
description = "`ð` with a straight bar"
selector."eth" = "straight-bar"

[prime.lower-eth.variants.curly-bar]
rank = 2
description = "`ð` with a curly bar"
selector."eth" = "curly-bar"



[prime.micro-sign]
sampler = "µ"
samplerExplain = "Micro sign"
tag = "VXSG"

[prime.micro-sign.variants.tailless]
rank = 1
description = "Tailless Micro sign (`µ`)"
selector."micro" = "tailless"

[prime.micro-sign.variants.tailed]
rank = 2
description = "Tailed Micro sign (`µ`)"
selector."micro" = "tailed"

[prime.micro-sign.variants.toothless-corner]
rank = 3
description = "Toothless (corner) Micro sign (`µ`)"
selector."micro" = "toothlessCorner"

[prime.micro-sign.variants.toothless-rounded]
rank = 4
description = "Toothless (rounded) Micro sign (`µ`)"
selector."micro" = "toothlessRounded"



[prime.lig-ltgteq]
sampler = "<= >="
samplerExplain = "Less-equal and Greater-equal ligations"
tag = "VXLA"

[prime.lig-ltgteq.variants.flat]
rank = 1
description = "The lower bar of `<=` and `>=` ligation is flat"
selector."eq.at-lteq.lig2" = "flat"
selector."eq.at-gteq.lig2" = "flat"

[prime.lig-ltgteq.variants.slanted]
rank = 2
description = "The lower bar of `<=` and `>=` ligation is slanted"
selector."eq.at-lteq.lig2" = "slanted"
selector."eq.at-gteq.lig2" = "slanted"



[prime.lig-neq]
sampler = "!= "
samplerExplain = "Not-equal ligations"
tag = "VXLB"

[prime.lig-neq.variants.vertical]
rank = 1
description = "The bar in inequality (`!=`, etc.) ligation is vertical"
selector."neq.allow-dot" = "vertical"
selector."neq.bar-only"  = "vertical"

[prime.lig-neq.variants.slightly-slanted]
rank = 2
description = "The bar in inequality (`!=`, etc.) ligation is slightly slanted"
selector."neq.allow-dot" = "slightlySlanted"
selector."neq.bar-only"  = "slightlySlanted"

[prime.lig-neq.variants.more-slanted]
rank = 3
description = "The bar in inequality (`!=`, etc.) ligation is more slanted"
selector."neq.allow-dot" = "moreSlanted"
selector."neq.bar-only"  = "moreSlanted"

[prime.lig-neq.variants.vertical-dotted]
rank = 4
description = "The bar in inequality (`!=`, etc.) ligation is vertical, and with a dot at bottom for ligations built from exclamation sign (`!`)"
selector."neq.allow-dot" = "verticalDotted"
selector."neq.bar-only"  = "vertical"

[prime.lig-neq.variants.slightly-slanted-dotted]
rank = 5
description = "The bar in inequality (`!=`, etc.) ligation is slightly slanted, and with a dot at bottom for ligations built from exclamation sign (`!`)"
selector."neq.allow-dot" = "slightlySlantedDotted"
selector."neq.bar-only"  = "slightlySlanted"

[prime.lig-neq.variants.more-slanted-dotted]
rank = 6
description = "The bar in inequality (`!=`, etc.) ligation is more slanted, and with a dot at bottom for ligations built from exclamation sign (`!`)"
selector."neq.allow-dot" = "moreSlantedDotted"
selector."neq.bar-only"  = "moreSlanted"



[prime.lig-equal-chain]
sampler = "== "
samplerExplain = "Equality ligations"
tag = "VXLC"

[prime.lig-equal-chain.variants.with-notch]
rank = 1
description = "The bars in equality (`==`, etc.) ligation have notches in the middle"
selector."lig-equal" = "withNotch"
selector."lig-ident"  = "withNotch"

[prime.lig-equal-chain.variants.without-notch]
rank = 2
description = "The bars in equality (`==`, etc.) ligation do not have notches in the middle"
selector."lig-equal" = "withoutNotch"
selector."lig-ident"  = "withoutNotch"



[prime.lig-hyphen-chain]
sampler = "-- "
samplerExplain = "Hyphen-minus ligations"
tag = "VXLD"

[prime.lig-hyphen-chain.variants.with-notch]
rank = 1
description = "The bars in connected hyphen-minus (`--`, etc.) ligation have notches in the middle"
selector."lig-hyphen" = "withNotch"

[prime.lig-hyphen-chain.variants.without-notch]
rank = 2
description = "The bars in connected hyphen-minus (`--`, etc.) ligation do not have notches in the middle"
selector."lig-hyphen" = "withoutNotch"



[prime.lig-double-arrow-bar]
sampler = "=> "
samplerExplain = "Double arrow ligation"
tag = "VXLE"

[prime.lig-double-arrow-bar.variants.with-notch]
rank = 1
description = "The bars in double arrow (`=>`, etc.) ligation have notches in the middle"
selector."lig-arrowBar-equal" = "withNotch"
selector."lig-arrowBar-ident" = "withNotch"

[prime.lig-double-arrow-bar.variants.without-notch]
rank = 2
description = "The bars in double arrow (`=>`, etc.) ligation do not have notches in the middle"
selector."lig-arrowBar-equal" = "withoutNotch"
selector."lig-arrowBar-ident" = "withoutNotch"



[prime.lig-single-arrow-bar]
sampler = "-> "
samplerExplain = "Single arrow ligation"
tag = "VXLF"

[prime.lig-single-arrow-bar.variants.with-notch]
rank = 1
description = "The bars in single arrow (`=>`, etc.) ligation have notches in the middle"
selector."lig-arrowBar-hyphen" = "withNotch"

[prime.lig-single-arrow-bar.variants.without-notch]
rank = 2
description = "The bars in single arrow (`=>`, etc.) ligation do not have notches in the middle"
selector."lig-arrowBar-hyphen" = "withoutNotch"



# This is a special variant selector that controls digit form
[prime.digit-form]
isSpecial = true
hotChars = "0123456789"
description = "Default digit form"

[prime.digit-form.variants.lining]
selector.__defaultDigitForm = "lining"
description = "Lining (default)"
snapshotFeatureApplication = { 'lnum' = 1 }

[prime.digit-form.variants.old-style]
selector.__defaultDigitForm = "oldStyle"
description = "Old-style"
snapshotFeatureApplication = { 'onum' = 1 }

# This is a special variant selector that controls APL form
[prime.apl-form]
isSpecial = true
hotChars = "∆∇○←→↑↓"
description = "APL form"

[prime.apl-form.variants.none]
selector.__enableAplForm = "none"
description = "Disable APL-specific forms (default)"
snapshotFeatureApplication = { }

[prime.apl-form.variants.enable]
selector.__enableAplForm = "enable"
description = "Enable harmonized alternate forms APL operators"
snapshotFeatureApplication = { "APLF" = 1 }

###################################################################################################

[default.design]
# Capitals
capital-a = "straight-serifless"
capital-b = "standard-serifless"
capital-c = "serifless"
capital-d = "standard-serifless"
capital-e = "serifless"
capital-f = "serifless"
capital-g = "toothed-serifless-hooked"
capital-h = "serifless"
capital-i = "serifed"
capital-j = "serifed"
capital-k = "straight-serifless"
capital-l = "serifless"
capital-m = "hanging-serifless"
capital-n = "standard-serifless"
capital-p = "closed-serifless"
capital-q = "curly-tailed"
capital-r = "straight-serifless"
capital-s = "serifless"
capital-t = "serifless"
capital-u = "toothless-rounded-serifless"
capital-v = "straight-serifless"
capital-w = "straight-serifless"
capital-x = "straight-serifless"
capital-y = "straight-serifless"
capital-z = "straight-serifless"
# Lowers
b = "toothed-serifless"
c = "serifless"
g = "single-storey-serifless"
p = "eared-serifless"
q = "straight-serifless"
r = "serifless"
s = "serifless"
t = "standard"
v = "straight-serifless"
w = "straight-serifless"
x = "straight-serifless"
z = "straight-serifless"
# Non-latin
long-s = "bent-hook-serifless"
turn-v = "straight"
latn-phi = "serifless"
lower-alpha = "crossing"
lower-delta = "rounded"
capital-gamma = "serifless"
lower-mu = "tailed"
lower-iota = "serifed-flat-tailed"
lower-lambda = "straight"
lower-xi = "flat-top"
cyrl-capital-zhe = "symmetric-connected"
cyrl-zhe = "symmetric-connected"
cyrl-capital-ze = "serifless"
cyrl-ze = "serifless"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
cyrl-el = "straight"
cyrl-en = "serifless"
cyrl-che = "standard"
cyrl-capital-u = "straight-serifless"
cyrl-capital-ya = "straight-serifless"
cyrl-ya = "straight-serifless"
cyrl-ef = "serifless"
cyrl-capital-yeri = "corner"
cyrl-yeri = "corner"
cyrl-yery = "corner"
# Digits
zero = "slashed"
two = "curly-neck"
one = "no-base"
three = "two-arcs"
four = "semi-open"
five = "vertical-upper-left-bar"
six = "straight-bar"
seven = "straight-serifless"
eight = "crossing"
nine = "straight-bar"
# Symbols
tilde = "low"
asterisk = "penta-high"
pilcrow = "high"
caret = "medium"
underscore = "high"
at = "threefold"
paren = "normal"
brace = "curly"
dollar = "through"
cent = "through"
number-sign = "upright"
percent = "rings-segmented-slash"
lig-ltgteq = "flat"
ampersand = "closed"
bar = "natural-slope"
ascii-single-quote = "straight"
ascii-grave = "straight"
question = "smooth"
punctuation-dot = "round"
diacritic-dot = "round"
partial-derivative = "curly-bar"
lower-eth = "curly-bar"
micro-sign = "tailless"
lig-neq = "slightly-slanted"
lig-equal-chain = "with-notch"
lig-hyphen-chain = "with-notch"
lig-double-arrow-bar = 'without-notch'
lig-single-arrow-bar = 'without-notch'
# m, n, h has tailed variant, but not very ideal
# Do not make them default
h = "straight-serifless"
m = "serifless"
n = "straight-serifless"
# Digit form
digit-form = "lining"

[default.upright-oblique]
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed"
u = "toothed-serifless"
y = "straight-serifless"
eszet = "sulzbacher"

[default.italic]
a = "single-storey-tailed"
d = "tailed-serifless"
e = "rounded"
f = "flat-hook-tailed"
i = "tailed-serifed"
j = "serifed"
k = "cursive-serifless"
l = "tailed-serifed"
u = "tailed-serifless"
y = "cursive-serifless"
eszet = "sulzbacher-tailed"
long-s = "flat-hook-tailed"
cyrl-ef = "cursive"
cyrl-yeri = "round"
cyrl-yery = "round"

###################################################################################################

[composite.slab.design]
capital-a = "straight-base-serifed"
capital-b = "standard-bilateral-serifed"
capital-c = "unilateral-serifed"
capital-d = "standard-bilateral-serifed"
capital-e = "serifed"
capital-f = "serifed"
capital-g = "toothed-serifed-hooked"
capital-h = "serifed"
capital-k = "straight-serifed"
capital-l = "serifed"
capital-m = "hanging-serifed"
capital-n = "standard-serifed"
capital-p = "closed-serifed"
capital-r = "straight-serifed"
capital-s = "bilateral-serifed"
capital-t = "serifed"
capital-u = "toothless-rounded-serifed"
capital-v = "straight-serifed"
capital-w = "straight-serifed"
capital-x = "straight-serifed"
capital-y = "straight-serifed"
capital-z = "straight-serifed"
a = "double-storey-serifed"
b = "toothed-serifed"
c = "unilateral-serifed"
g = "single-storey-serifed"
p = "eared-serifed"
q = "straight-serifed"
s = "bilateral-serifed"
v = "straight-serifed"
w = "straight-serifed"
x = "straight-serifed"
z = "straight-serifed"
one = "base"
seven = "straight-serifed"
latn-phi = "serifed"
long-s = "bent-hook-bottom-serifed"
capital-gamma = "serifed"
cyrl-capital-ze = "unilateral-serifed"
cyrl-ze = "unilateral-serifed"
cyrl-en = "serifed"
cyrl-ef = "serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"
cyrl-capital-u = "straight-turn-serifed"
cyrl-capital-ya = "straight-serifed"
cyrl-ya = "straight-serifed"

[composite.slab.upright-oblique]
d = "toothed-serifed"
f = "serifed"
h = "straight-serifed"
k = "straight-serifed"
m = "serifed"
n = "straight-serifed"
r = "serifed"
u = "toothed-serifed"
y = "straight-turn-serifed"
lower-lambda = "straight-turn"

[composite.slab.italic]
a = "single-storey-tailed"
d = "tailed-serifed"
c = "unilateral-inward-serifed"
f = "flat-hook-tailed"
h = "straight-motion-serifed"
k = "diagonal-tailed-cursive-top-left-serifed"
m = "top-left-and-bottom-right-serifed"
n = "straight-motion-serifed"
r = "top-serifed"
s = "bilateral-inward-serifed"
u = "tailed-serifed"
v = "straight-motion-serifed"
w = "straight-motion-serifed"
x = "cursive"
y = "cursive-motion-serifed"
z = "cursive"
latn-phi = "serifed"
long-s = "flat-hook-tailed"
cyrl-en = "top-left-bottom-right-serifed"
cyrl-ef = "cursive"
cyrl-ka = "symmetric-connected-top-left-serifed"
cyrl-yeri = "cursive"
cyrl-yery = "cursive"


[composite.ss01]
tag = "ss01"
description = "Andale Mono Style"

[composite.ss01.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "straight-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "flat-hook-serifless"
g = "double-storey"
i = "hooky"
j = "serifed"
k = "straight-serifless"
l = "zshaped"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
lower-iota = "flat-tailed"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn-serifless"
zero = "dotted"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
seven = "straight-serifless"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-mid"
underscore = "low"
pilcrow = "low"
brace = "straight"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"
lower-eth = "straight-bar"

[composite.ss01.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-j = "serifed"
capital-k = "straight-serifed"
capital-g = "toothless-corner-serifed-hooked"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "straight-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"
cyrl-capital-u = "straight-turn-serifed"
seven = "straight-serifed"



[composite.ss02]
tag = "ss02"
description = "Anonymous Pro Style"

[composite.ss02.design]
capital-c = "unilateral-serifed"
capital-g = "toothless-rounded-serifed-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "straight-serifless"
capital-s = "bilateral-serifed"
capital-t = "serifed"
capital-x = "straight-serifed"
capital-y = "straight-serifed"
capital-z = "straight-serifed"
a = "double-storey-serifless"
c = "unilateral-serifed"
d = "toothed-top-serifed"
e = "flat-crossbar"
f = "flat-hook-serifed"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed"
r = "serifed"
w = "straight-flat-top-serifless"
x = "straight-serifed"
y = "straight-turn-serifless"
z = "straight-serifed"
long-s = "flat-hook-double-serifed"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-ze = "unilateral-serifed"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn-serifless"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
seven = "bend-serifed"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-low"
brace = "straight"
at = "fourfold"
percent = "rings-continuous-slash"
partial-derivative = "straight-bar"
lower-eth = "straight-bar"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss02.slab-override.design]
capital-j = "serifed"
capital-k = "straight-serifed"
a = "double-storey-serifed"
k = "straight-serifed"
w = "straight-flat-top-serifed"
y = "straight-turn-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"
cyrl-capital-u = "straight-turn-serifed"



[composite.ss03]
tag = "ss03"
description = "Consolas Style"

[composite.ss03.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging-serifless"
a = "double-storey-serifless"
b = "toothless-corner-serifless"
d = "toothed-serifless"
f = "flat-hook-serifless"
g = "double-storey"
i = "serifed"
j = "serifed"
k = "symmetric-touching-serifless"
l = "serifed"
y = "straight-turn-serifless"
eszet = "longs-s-lig"
long-s = "flat-hook-serifless"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-ka = "symmetric-touching-serifless"
cyrl-ka = "symmetric-touching-serifless"
cyrl-capital-u = "straight-turn-serifless"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
eight = "crossing"
nine = "closed-contour"
asterisk = "hex-mid"
underscore = "low"
brace = "straight"
number-sign = "slanted"
at = "fourfold"
question = "corner-flat-hooked"
lower-eth = "straight-bar"
micro-sign = "tailed"

[composite.ss03.italic]
a = "single-storey-serifless"
f = "flat-hook-tailed"
g = "single-storey-serifless"
i = "tailed-serifed"
k = "cursive-serifless"
l = "tailed"
eszet = "longs-s-lig-descending"
long-s = "flat-hook-descending"
lower-iota = "tailed-serifed"

[composite.ss03.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
capital-m = "slanted-sides-hanging-serifed"
a = "double-storey-serifed"
b = "toothless-corner-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "symmetric-touching-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-ka = "symmetric-touching-serifed"
cyrl-ka = "symmetric-touching-serifed"
cyrl-capital-u = "straight-turn-serifed"

[composite.ss03.slab-override.italic]
a = "single-storey-serifed"
f = "flat-hook-tailed"
g = "single-storey-serifed"
k = "cursive-serifed"



[composite.ss04]
tag = "ss04"
description = "Menlo Style"

[composite.ss04.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "straight-serifless"
capital-q = "straight"
a = "double-storey-serifless"
d = "toothed-serifless"
f = "flat-hook-serifless"
i = "serifed"
j = "flat-hook-serifed"
k = "straight-serifless"
l = "serifed-flat-tailed"
t = "flat-hook"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-ka = "straight-serifless"
cyrl-ka = "straight-serifless"
cyrl-capital-u = "straight-turn-serifless"
one = "base"
two = "straight-neck"
four = "closed"
six = "closed-contour"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-low"
underscore = "low"
brace = "straight"
number-sign = "slanted"
ampersand = "upper-open"
percent = "rings-continuous-slash"
bar = "force-upright"
lower-eth = "straight-bar"
micro-sign = "tailed"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss04.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "straight-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
k = "straight-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-ka = "straight-serifed"
cyrl-ka = "straight-serifed"
cyrl-capital-u = "straight-turn-serifed"



[composite.ss05]
tag = "ss05"
description = "Fira Mono Style"

[composite.ss05.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging-serifless"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "serifless"
g = "double-storey-open"
i = "serifed"
j = "serifed"
k = "symmetric-touching-serifless"
l = "tailed-serifed"
r = "corner-hooked-serifed"
y = "straight-turn-serifless"
long-s = "bent-hook-serifless"
eszet = "longs-s-lig"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
lower-mu = "tailless"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
cyrl-capital-u = "straight-turn-serifless"
zero = "oval-dotted"
one = "base"
two = "straight-neck"
six = "closed-contour"
eight = "crossing-asymmetric"
nine = "open-contour"
asterisk = "penta-low"
underscore = "low"
pilcrow = "low"
caret = "high"
number-sign = "slanted"
ampersand = "et-toothless-corner"
at = "compact"
cent = "open"
percent = "rings-continuous-slash"
lig-ltgteq = "slanted"
lig-equal-chain = "without-notch"

[composite.ss05.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
capital-m = "slanted-sides-hanging-serifed"
f = "serifed"
k = "symmetric-touching-serifed"
y = "straight-turn-serifed"
long-s = "bent-hook-bottom-serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"
cyrl-capital-u = "straight-turn-serifed"



[composite.ss06]
tag = "ss06"
description = "Liberation Mono Style"

[composite.ss06.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "flat-hook-serifless"
i = "serifed"
j = "serifed"
k = "straight-serifless"
l = "serifed-flat-tailed"
r = "hookless-serifless"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
zero = "dotted"
one = "base"
four = "closed"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "bend-serifless"
eight = "two-circles"
nine = "closed-contour"
pilcrow = "low"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"
bar = "force-upright"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss06.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
f = "flat-hook-serifed"
k = "straight-serifed"
r = "hookless-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "straight-turn-serifed"
seven = "bend-serifed"



[composite.ss07]
tag = "ss07"
description = "Monaco Style"

[composite.ss07.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
a = "single-storey-earless-corner-tailed"
b = "toothless-corner-serifless"
e = "flat-crossbar"
f = "serifless"
g = "single-storey-earless-corner"
i = "zshaped"
j = "serifed"
k = "symmetric-touching-serifless"
l = "zshaped"
q = "earless-corner-straight-serifless"
r = "corner-hooked-serifless"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
zero = "slashed"
one = "base"
four = "closed"
six = "closed-contour"
seven = "curly-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
asterisk = "hex-mid"
paren = "large-contour"
pilcrow = "low"
number-sign = "slanted"
at = "fourfold"
percent = "rings-continuous-slash"

[composite.ss07.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
b = "toothless-corner-serifed"
k = "symmetric-touching-serifed"
q = "earless-corner-straight-serifed"
r = "corner-hooked-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "straight-turn-serifed"
seven = "curly-serifed"



[composite.ss08]
tag = "ss08"
description = "Pragmata Pro Style"

[composite.ss08.design]
capital-a = "curly-serifless"
capital-d = "more-rounded-serifless"
capital-g = "toothless-rounded-serifless-hooked"
capital-i = "short-serifed"
capital-j = "serifless"
capital-k = "curly-serifless"
capital-n = "asymmetric-serifless"
capital-q = "straight"
capital-r = "curly-serifless"
capital-v = "curly-serifless"
capital-w = "curly-serifless"
capital-x = "curly-serifless"
capital-y = "curly-serifless"
capital-z = "curly-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
g = "double-storey"
i = "serifed"
k = "curly-serifless"
l = "zshaped"
v = "curly-serifless"
w = "curly-serifless"
x = "curly-serifless"
y = "curly-serifless"
z = "curly-serifless"
eszet = "longs-s-lig"
lower-delta = "flat-top"
lower-lambda = "curly"
lower-mu = "tailless"
cyrl-capital-ka = "curly-serifless"
cyrl-capital-u = "curly-serifless"
cyrl-ka = "curly-serifless"
cyrl-capital-ya = "curly-serifless"
cyrl-ya = "curly-serifless"
zero = "oval-reverse-slashed-split"
four = "closed"
six = "closed-contour"
seven = "curly-serifless"
nine = "closed-contour"
asterisk = "penta-low"
underscore = "high"
brace = "straight"
number-sign = "slanted"
ampersand = "upper-open"
at = "threefold"
dollar = "open"
cent = "open"
percent = "dots"
paren = "large-contour"
lig-ltgteq = "slanted"
lig-neq = "slightly-slanted-dotted"
lig-equal-chain = "with-notch"
lig-hyphen-chain = "with-notch"

[composite.ss08.italic]
g = "single-storey-serifless"

[composite.ss08.slab-override.design]
capital-a = "curly-base-serifed"
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-rounded-serifed-hooked"
capital-j = "serifed"
capital-k = "curly-serifed"
capital-n = "asymmetric-serifed"
capital-r = "curly-serifed"
capital-v = "curly-serifed"
capital-w = "curly-serifed"
capital-x = "curly-serifed"
capital-y = "curly-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "serifed"
k = "curly-serifed"
v = "curly-serifed"
w = "curly-serifed"
x = "curly-serifed"
y = "curly-serifed"
cyrl-capital-ka = "curly-serifed"
cyrl-capital-u = "curly-serifed"
cyrl-ka = "curly-serifed"
cyrl-capital-ya = "curly-serifed"
cyrl-ya = "curly-serifed"
seven = "bend-serifed"

[composite.ss08.slab-override.italic]
g = "single-storey-serifed"



[composite.ss09]
tag = "ss09"
description = "Source Code Pro Style"

[composite.ss09.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "straight-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
g = "double-storey"
i = "hooky"
j = "serifed"
k = "straight-serifless"
l = "tailed-serifed"
r = "hookless-serifless"
w = "straight-flat-top-serifless"
y = "straight-turn-serifless"
eszet = "longs-s-lig"
long-s = "flat-hook-serifless"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
zero = "oval-dotted"
one = "base-flat-top-serif"
two = "straight-neck"
four = "closed"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
asterisk = "penta-low"
pilcrow = "low"
number-sign = "slanted"
dollar = "open"
micro-sign = "tailed"
lig-neq = "more-slanted"

[composite.ss09.italic]
a = "single-storey-serifless"
g = "single-storey-serifless"
i = "tailed-serifed"

[composite.ss09.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "straight-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "serifed"
k = "straight-serifed"
r = "hookless-serifed"
w = "straight-flat-top-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "straight-turn-serifed"

[composite.ss09.slab-override.italic]
a = "single-storey-serifed"
g = "single-storey-serifed"



[composite.ss10]
tag = "ss10"
description = "Envy Code R Style"

[composite.ss10.design]
capital-j = "serifless"
capital-k = "symmetric-touching-serifless"
capital-q = "crossing"
capital-w = "straight-vertical-sides-serifless"
f = "flat-hook-serifless"
g = "single-storey-flat-hook-serifless"
i = "hooky"
j = "flat-hook-serifed"
k = "symmetric-connected-serifless"
l = "hooky"
t = "flat-hook"
y = "cursive-flat-hook-serifless"
long-s = "flat-hook-serifless"
eszet = "sulzbacher"
micro-sign = "toothless-rounded"
cyrl-capital-u = "cursive-flat-hook-serifless"
one = "base"
four = "closed"
eight = "two-circles"
underscore = "low"
pilcrow = "low"
percent = "rings-continuous-slash"

[composite.ss10.italic]
i = "serifed-flat-tailed"
j = "serifed"
l = "serifed-flat-tailed"
u = "tailed-serifless"

[composite.ss10.slab-override.design]
capital-j = "serifed"
capital-k = "symmetric-touching-serifed"
capital-w = "straight-vertical-sides-serifed"
f = "flat-hook-serifed"
g = "single-storey-flat-hook-serifed"
k = "symmetric-connected-serifed"
y = "cursive-flat-hook-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "cursive-flat-hook-serifed"



[composite.ss11]
tag = "ss11"
description = "X Window Style"

[composite.ss11.design]
zero = "oval-unslashed"
one = "base"
two = "straight-neck"
three = "flat-top"
four = "closed"
six = "closed-contour"
eight = "two-circles"
nine = "closed-contour"
tilde = "high"
asterisk = "hex-high"
caret = "high"
brace = "straight"
at = "threefold"
dollar = "through"
percent = "rings-continuous-slash"



[composite.ss12]
tag = "ss12"
description = "Ubuntu Mono Style"

[composite.ss12.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hookless"
capital-k = "symmetric-touching-serifless"
capital-m = "slanted-sides-hanging-serifless"
a = "double-storey-toothless-corner"
b = "toothless-corner-serifless"
d = "toothless-corner-serifless"
g = "single-storey-earless-corner"
i = "tailed-serifed"
k = "symmetric-touching-serifless"
l = "tailed-serifed"
m = "earless-corner-double-arch-short-leg-serifless"
n = "earless-corner-straight-serifless"
p = "earless-corner-serifless"
q = "earless-corner-straight-serifless"
r = "earless-corner-serifless"
u = "toothless-corner-serifless"
y = "straight-turn-serifless"
eszet = "longs-s-lig"
lower-alpha = "tailed-barred"
lower-iota = "tailed-serifed"
lower-lambda = "straight-turn"
lower-mu = "toothless-corner"
micro-sign = "toothless-corner"
cyrl-capital-ka = "symmetric-touching-serifless"
cyrl-ka = "symmetric-touching-serifless"
cyrl-capital-u = "straight-turn-serifless"
zero = "oval-dotted"
one = "base"
four = "closed"
five = "oblique-upper-left-bar"
six = "open-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "open-contour"
underscore = "low"
pilcrow = "low"
brace = "straight"
number-sign = "slanted"
dollar = "open"
cent = "open"
percent = "rings-continuous-slash"

[composite.ss12.italic]
a = "single-storey-earless-corner-tailed"
d = "tailed-serifless"
f = "tailed"
p = "earless-corner-serifed"
u = "tailed-serifless"
long-s = "bent-hook-tailed"
eszet = "longs-s-lig-tailed"
lower-mu = "tailed"
cyrl-capital-u = "straight-turn-serifed"
micro-sign = "tailed"

[composite.ss12.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hookless"
capital-k = "symmetric-touching-serifed"
capital-m = "slanted-sides-hanging-serifed"
b = "toothless-corner-serifed"
d = "toothless-corner-serifed"
k = "symmetric-touching-serifed"
m = "earless-corner-double-arch-short-leg-serifed"
n = "earless-corner-straight-serifed"
p = "earless-corner-serifed"
q = "earless-corner-straight-serifed"
u = "toothless-corner-serifed"
y = "straight-turn-serifed"
cyrl-capital-ka = "symmetric-touching-serifed"
cyrl-ka = "symmetric-touching-serifed"

[composite.ss12.slab-override.italic]
d = "tailed-serifed"
u = "tailed-serifed"



[composite.ss13]
tag = "ss13"
description = "Lucida Style"

[composite.ss13.design]
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-serifless-hooked"
capital-k = "symmetric-touching-serifless"
a = "double-storey-tailed"
d = "toothed-serifless"
e = "flat-crossbar"
f = "serifless"
g = "single-storey-serifless"
i = "hooky"
k = "symmetric-touching-serifless"
l = "hooky"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-iota = "tailed"
cyrl-capital-u = "straight-turn-serifless"
zero = "oval-slashed"
one = "base"
four = "closed"
six = "closed-contour"
seven = "bend-serifless"
eight = "crossing-asymmetric"
nine = "closed-contour"
pilcrow = "low"
number-sign = "slanted"
percent = "rings-continuous-slash"
micro-sign = "tailed"
punctuation-dot = "square"
diacritic-dot = "square"

[composite.ss13.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-g = "toothless-corner-serifed-hooked"
capital-k = "symmetric-touching-serifed"
a = "single-storey-earless-corner-serifed"
d = "toothed-serifed"
f = "serifed"
g = "single-storey-serifed"
k = "symmetric-touching-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "straight-turn-serifed"
seven = "bend-serifed"



[composite.ss14]
tag = "ss14"
description = "JetBrains Mono Style"

[composite.ss14.design]
capital-g = "toothless-rounded-serifless-hooked"
capital-k = "symmetric-connected-serifless"
capital-q = "straight"
capital-w = "straight-flat-top-serifless"
a = "double-storey-serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "flat-hook-serifless"
g = "single-storey-flat-hook-serifless"
i = "serifed"
j = "flat-hook-serifed"
k = "symmetric-connected-serifless"
l = "serifed-flat-tailed"
t = "flat-hook"
u = "toothless-rounded-serifless"
w = "straight-flat-top-serifless"
y = "straight-serifless"
long-s = "flat-hook-serifless"
lower-alpha = "tailed-barred"
lower-delta = "flat-top"
lower-mu = "tailless"
lower-xi = "rounded"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-serifless"
zero = "dotted"
one = "base"
two = "straight-neck"
three = "flat-top"
four = "semi-open-non-crossing"
seven = "straight-serifed"
paren = "flat-arc"
asterisk = "penta-low"
pilcrow = "low"
number-sign = "slanted"
ampersand = "upper-open"
percent = "rings-continuous-slash"
lower-eth = "straight-bar"
lig-ltgteq = "slanted"
question = "corner-flat-hooked"
lig-neq = "more-slanted"
lig-equal-chain = "without-notch"

[composite.ss14.italic]
a = "single-storey-serifless"
f = "flat-hook-tailed"
y = "cursive-flat-hook-serifless"
long-s = "flat-hook-tailed"

[composite.ss14.slab-override.design]
capital-g = "toothless-rounded-serifed-hooked"
capital-k = "symmetric-connected-serifed"
capital-w = "straight-flat-top-serifed"
a = "double-storey-serifed"
d = "toothed-serifed"
f = "flat-hook-serifed"
g = "single-storey-flat-hook-serifed"
k = "symmetric-connected-serifed"
u = "toothless-rounded-serifed"
w = "straight-flat-top-serifed"
y = "straight-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-ka = "symmetric-connected-serifed"

[composite.ss14.slab-override.italic]
a = "single-storey-serifed"
f = "flat-hook-tailed"
y = "cursive-flat-hook-serifed"
long-s = "flat-hook-tailed"



[composite.ss15]
tag = "ss15"
description = "IBM Plex Mono Style"

[composite.ss15.design]
a = "double-storey-tailed"
d = "toothed-serifless"
f = "flat-hook-serifed"
g = "double-storey"
i = "serifed"
j = "flat-hook-serifed"
k = "straight-serifless"
l = "serifed"
r = "hookless-serifed"
t = "flat-hook"
w = "straight-flat-top-serifless"
y = "straight-turn-serifless"
eszet = "traditional-flat-hook"
long-s = "flat-hook-double-serifed"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
zero = "dotted"
one = "base"
two = "straight-neck"
four = "closed"
five = "oblique-upper-left-bar"
six = "open-contour"
seven = "straight-serifed"
eight = "two-circles"
nine = "open-contour"
asterisk = "penta-low"
underscore = "low"
pilcrow = "low"
number-sign = "slanted-open"
ampersand = "upper-open"
question = "corner"
brace = "curly-flat-boundary"

[composite.ss15.italic]
a = "single-storey-serifless"
f = "flat-hook-diagonal-tailed"
g = "single-storey-serifless"
i = "serifed-diagonal-tailed"
j = "diagonal-tailed-serifed"
k = "diagonal-tailed-cursive-serifless"
l = "serifed-diagonal-tailed"
r = "hookless-top-serifed"
t = "diagonal-tailed"
v = "cursive-serifed"
w = "cursive-serifless"
x = "cursive"
y = "cursive-serifless"
z = "cursive"
long-s = "flat-hook-diagonal-tailed-middle-serifed"
cyrl-capital-u = "straight-turn-serifed"
ampersand = "closed"

[composite.ss15.slab-override.design]
d = "toothed-serifed"
k = "straight-serifed"
w = "straight-flat-top-serifless"
y = "straight-turn-serifed"

[composite.ss15.slab-override.italic]
a = "single-storey-serifed"
g = "single-storey-serifed"
k = "diagonal-tailed-cursive-top-left-serifed"
w = "cursive-serifed"
y = "cursive-serifed"



[composite.ss16]
tag = "ss16"
description = "PT Mono Style"

[composite.ss16.design]
capital-c = "bilateral-inward-serifed"
capital-d = "more-rounded-serifless"
capital-g = "toothless-corner-inward-serifed-hooked"
capital-k = "symmetric-connected-serifless"
capital-l = "motion-serifed"
capital-s = "bilateral-inward-serifed"
capital-t = "serifed"
a = "double-storey-serifed"
b = "toothless-corner-serifed"
c = "unilateral-inward-serifed"
d = "toothed-serifed"
e = "flat-crossbar"
f = "serifed"
g = "single-storey-earless-corner"
h = "straight-top-left-serifed"
i = "serifed"
j = "serifed"
k = "straight-top-left-and-bottom-right-serifed"
l = "tailed-serifed"
n = "straight-top-left-serifed"
p = "eared-motion-serifed"
q = "earless-corner-straight-serifless"
r = "serifed"
t = "standard-short-neck2"
u = "toothed-motion-serifed"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
capital-gamma = "serifed"
cyrl-capital-ze = "bilateral-inward-serifed"
cyrl-ze = "unilateral-inward-serifed"
cyrl-capital-ka = "symmetric-connected-serifless"
cyrl-ka = "symmetric-connected-bottom-right-serifed"
cyrl-ef = "top-serifed"
cyrl-capital-u = "straight-turn-serifless"
zero = "slashed"
one = "base"
two = "straight-neck"
three = "flat-top"
four = "closed"
six = "open-contour"
eight = "crossing-asymmetric"
nine = "open-contour"
asterisk = "turn-hex-high"
underscore = "low"
pilcrow = "low"
paren = "large-contour"
brace = "straight"
number-sign = "slanted"
percent = "rings-continuous-slash"

[composite.ss16.slab-override.design]
capital-d = "more-rounded-bilateral-serifed"
capital-k = "symmetric-connected-serifed"
h = "straight-serifed"
n = "straight-serifed"
p = "eared-serifed"
q = "earless-corner-straight-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-ka = "symmetric-connected-serifed"
cyrl-capital-u = "straight-turn-serifed"



[composite.ss17]
tag = "ss17"
description = "Recursive Mono Style"

[composite.ss17.design]
capital-b = "standard-unilateral-serifed"
capital-c = "unilateral-inward-serifed"
capital-d = "standard-unilateral-serifed"
capital-e = "top-left-serifed"
capital-f = "top-left-serifed"
capital-g = "toothless-corner-inward-serifed-capped"
capital-k = "straight-bottom-right-serifed"
capital-l = "motion-serifed"
capital-p = "closed-motion-serifed"
capital-r = "straight-motion-serifed"
capital-s = "unilateral-inward-serifed"
capital-u = "toothed-serifless"
capital-z = "straight-top-serifed"
a = "double-storey-tailed"
e = "flat-crossbar"
f = "serifed"
g = "double-storey"
r = "hookless-serifed"
t = "flat-hook"
y = "straight-turn-serifless"
eszet = "longs-s-lig"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
one = "base"
four = "semi-open"
five = "oblique-upper-left-bar"
six = "closed-contour"
seven = "straight-serifed"
nine = "closed-contour"
asterisk = "hex-low"
underscore = "low"
pilcrow = "low"
number-sign = "slanted"
ampersand = "upper-open"
at = "fourfold"
dollar = "interrupted"
cent = "bar-interrupted"
punctuation-dot = "square"
diacritic-dot = "square"
brace = "curly-flat-boundary"

[composite.ss17.italic]
a = "single-storey-tailed"
e = "rounded"
f = "tailed"
g = "single-storey-serifless"
i = "serifed-flat-tailed"
l = "serifed-flat-tailed"
m = "tailed-serifless"
n = "tailed-serifless"
r = "corner-hooked-top-serifed"
s = "unilateral-inward-serifed"
v = "cursive-serifed"
w = "cursive-serifless"
x = "cursive"
y = "cursive-serifless"
z = "cursive"
long-s = "bent-hook-descending"
eszet = "longs-s-lig-descending"

[composite.ss17.slab-override.design]
capital-u = "toothed-serifed"
y = "straight-turn-serifed"
cyrl-capital-u = "straight-turn-serifed"

[composite.ss17.slab-override.italic]
g = "single-storey-serifed"
w = "cursive-serifed"
m = "tailed-top-left-serifed"
n = "tailed-motion-serifed"



[composite.ss18]
tag = "ss18"
description = "Input Mono Style"

[composite.ss18.design]
capital-g = "toothless-rounded-serifless-hooked"
capital-k = "symmetric-connected-serifless"
a = "double-storey-tailed"
b = "toothless-corner-serifless"
d = "toothed-serifless"
f = "serifless-crossbar-at-x-height"
g = "double-storey"
i = "serifed"
k = "symmetric-connected-serifless"
l = "serifed"
q = "earless-corner-straight-serifless"
y = "straight-turn-serifless"
long-s = "flat-hook-serifless"
eszet = "longs-s-lig"
lower-alpha = "tailed-barred"
lower-lambda = "straight-turn"
cyrl-capital-u = "straight-turn-serifless"
zero = "dotted"
one = "base"
four = "closed"
six = "closed-contour"
seven = "bend-serifless"
eight = "two-circles"
nine = "closed-contour"
asterisk = "hex-mid"
underscore = "low"
question = "corner"
number-sign = "slanted"
percent = "rings-continuous-slash"
micro-sign = "tailed"

[composite.ss18.italic]
f = "extended-crossbar-at-x-height"
long-s = "flat-hook-descending"
eszet = "longs-s-lig-descending"

[composite.ss18.slab-override.design]
capital-g = "toothless-rounded-serifed-hooked"
capital-k = "symmetric-connected-serifed"
b = "toothless-corner-serifed"
d = "toothed-serifed"
f = "serifed-crossbar-at-x-height"
k = "symmetric-connected-serifed"
q = "earless-corner-straight-serifed"
y = "straight-turn-serifed"
long-s = "flat-hook-bottom-serifed"
cyrl-capital-u = "straight-turn-serifed"
seven = "bend-serifed"



[composite.ss20]
tag = "ss20"
description = "Curly Style"

[composite.ss20.design]
capital-a = "curly-serifless"
capital-k = "curly-serifless"
capital-r = "curly-serifless"
capital-v = "curly-serifless"
capital-w = "curly-serifless"
capital-x = "curly-serifless"
capital-y = "curly-serifless"
capital-z = "curly-serifless"
k = "curly-serifless"
v = "curly-serifless"
w = "curly-serifless"
x = "curly-serifless"
y = "curly-serifless"
z = "curly-serifless"
turn-v = "curly"
lower-lambda = "curly"
cyrl-capital-u = "curly-serifless"
cyrl-capital-ya = "curly-serifless"
cyrl-ya = "curly-serifless"
six = "open-contour"
nine = "open-contour"

[composite.ss20.italic]
k = "cursive-serifless"
y = "cursive-serifless"

[composite.ss20.slab-override.design]
capital-a = "curly-base-serifed"
capital-k = "curly-serifed"
capital-r = "curly-serifed"
capital-v = "curly-serifed"
capital-w = "curly-serifed"
capital-x = "curly-serifed"
capital-y = "curly-serifed"
capital-z = "curly-serifed"
k = "curly-serifed"
v = "curly-serifed"
w = "curly-serifed"
x = "curly-serifed"
y = "curly-serifed"
z = "curly-serifed"
cyrl-capital-u = "curly-serifed"
cyrl-capital-ya = "curly-serifed"
cyrl-ya = "curly-serifed"

[composite.ss20.slab-override.italic]
k = "cursive-serifed"
y = "cursive-serifed"
